	.syntax unified
	.cpu cortex-m4
	.eabi_attribute 27, 3
	.fpu fpv4-sp-d16
	.eabi_attribute 20, 1
	.eabi_attribute 21, 1
	.eabi_attribute 23, 3
	.eabi_attribute 24, 1
	.eabi_attribute 25, 1
	.eabi_attribute 26, 1
	.eabi_attribute 30, 6
	.eabi_attribute 34, 1
	.eabi_attribute 18, 4
	.thumb
	.file	"stm32f4xx_fsmc.c"
	.text
.Ltext0:
	.section	.text.FSMC_NORSRAMDeInit,"ax",%progbits
	.align	2
	.global	FSMC_NORSRAMDeInit
	.thumb
	.thumb_func
	.type	FSMC_NORSRAMDeInit, %function
FSMC_NORSRAMDeInit:
.LFB111:
	.file 1 "/home/mike/Documents/caribou-rtos/branches/0.9/caribou/target/board/xcore407i/crossworks/../../../chip/stm32/stm32f407/lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_fsmc.c"
	.loc 1 122 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI0:
	sub	sp, sp, #8
.LCFI1:
	add	r7, sp, #0
.LCFI2:
	str	r0, [r7, #4]
	.loc 1 124 0
	ldr	r3, [r7, #4]
	cmp	r3, #0
	beq	.L2
	.loc 1 124 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #2
	beq	.L2
	.loc 1 124 0 discriminator 1
	ldr	r3, [r7, #4]
	cmp	r3, #4
	beq	.L2
	ldr	r3, [r7, #4]
	cmp	r3, #6
	bne	.L3
.L2:
	movs	r3, #1
	b	.L4
.L3:
	.loc 1 124 0 discriminator 3
	movs	r3, #0
.L4:
	.loc 1 124 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 127 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	cmp	r3, #0
	bne	.L5
	.loc 1 129 0
	mov	r3, #-1610612736
	ldr	r2, [r7, #4]
	movw	r1, #12507
	str	r1, [r3, r2, lsl #2]
	b	.L6
.L5:
	.loc 1 134 0
	mov	r3, #-1610612736
	ldr	r2, [r7, #4]
	movw	r1, #12498
	str	r1, [r3, r2, lsl #2]
.L6:
	.loc 1 136 0
	mov	r3, #-1610612736
	ldr	r2, [r7, #4]
	adds	r2, r2, #1
	mvn	r1, #-268435456
	str	r1, [r3, r2, lsl #2]
	.loc 1 137 0
	ldr	r3, .L7
	ldr	r2, [r7, #4]
	mvn	r1, #-268435456
	str	r1, [r3, r2, lsl #2]
	.loc 1 138 0
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L8:
	.align	2
.L7:
	.word	-1610612476
.LFE111:
	.size	FSMC_NORSRAMDeInit, .-FSMC_NORSRAMDeInit
	.section	.text.FSMC_NORSRAMInit,"ax",%progbits
	.align	2
	.global	FSMC_NORSRAMInit
	.thumb
	.thumb_func
	.type	FSMC_NORSRAMInit, %function
FSMC_NORSRAMInit:
.LFB112:
	.loc 1 149 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI3:
	sub	sp, sp, #8
.LCFI4:
	add	r7, sp, #0
.LCFI5:
	str	r0, [r7, #4]
	.loc 1 151 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3]
	cmp	r3, #0
	beq	.L10
	.loc 1 151 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	ldr	r3, [r3]
	cmp	r3, #2
	beq	.L10
	.loc 1 151 0 discriminator 1
	ldr	r3, [r7, #4]
	ldr	r3, [r3]
	cmp	r3, #4
	beq	.L10
	ldr	r3, [r7, #4]
	ldr	r3, [r3]
	cmp	r3, #6
	bne	.L11
.L10:
	movs	r3, #1
	b	.L12
.L11:
	.loc 1 151 0 discriminator 3
	movs	r3, #0
.L12:
	.loc 1 151 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 152 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #4]
	cmp	r3, #0
	beq	.L13
	.loc 1 152 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #4]
	cmp	r3, #2
	bne	.L14
.L13:
	.loc 1 152 0 discriminator 1
	movs	r3, #1
	b	.L15
.L14:
	.loc 1 152 0 discriminator 3
	movs	r3, #0
.L15:
	.loc 1 152 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 153 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #8]
	cmp	r3, #0
	beq	.L16
	.loc 1 153 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #8]
	cmp	r3, #4
	beq	.L16
	.loc 1 153 0 discriminator 1
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #8]
	cmp	r3, #8
	bne	.L17
.L16:
	movs	r3, #1
	b	.L18
.L17:
	.loc 1 153 0 discriminator 3
	movs	r3, #0
.L18:
	.loc 1 153 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 154 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #12]
	cmp	r3, #0
	beq	.L19
	.loc 1 154 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #12]
	cmp	r3, #16
	bne	.L20
.L19:
	.loc 1 154 0 discriminator 1
	movs	r3, #1
	b	.L21
.L20:
	.loc 1 154 0 discriminator 3
	movs	r3, #0
.L21:
	.loc 1 154 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 155 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #16]
	cmp	r3, #0
	beq	.L22
	.loc 1 155 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #16]
	cmp	r3, #256
	bne	.L23
.L22:
	.loc 1 155 0 discriminator 1
	movs	r3, #1
	b	.L24
.L23:
	.loc 1 155 0 discriminator 3
	movs	r3, #0
.L24:
	.loc 1 155 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 156 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #20]
	cmp	r3, #0
	beq	.L25
	.loc 1 156 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #20]
	cmp	r3, #32768
	bne	.L26
.L25:
	.loc 1 156 0 discriminator 1
	movs	r3, #1
	b	.L27
.L26:
	.loc 1 156 0 discriminator 3
	movs	r3, #0
.L27:
	.loc 1 156 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 157 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #24]
	cmp	r3, #0
	beq	.L28
	.loc 1 157 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #24]
	cmp	r3, #512
	bne	.L29
.L28:
	.loc 1 157 0 discriminator 1
	movs	r3, #1
	b	.L30
.L29:
	.loc 1 157 0 discriminator 3
	movs	r3, #0
.L30:
	.loc 1 157 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 158 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #28]
	cmp	r3, #0
	beq	.L31
	.loc 1 158 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #28]
	cmp	r3, #1024
	bne	.L32
.L31:
	.loc 1 158 0 discriminator 1
	movs	r3, #1
	b	.L33
.L32:
	.loc 1 158 0 discriminator 3
	movs	r3, #0
.L33:
	.loc 1 158 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 159 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #32]
	cmp	r3, #0
	beq	.L34
	.loc 1 159 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #32]
	cmp	r3, #2048
	bne	.L35
.L34:
	.loc 1 159 0 discriminator 1
	movs	r3, #1
	b	.L36
.L35:
	.loc 1 159 0 discriminator 3
	movs	r3, #0
.L36:
	.loc 1 159 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 160 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #36]
	cmp	r3, #0
	beq	.L37
	.loc 1 160 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #36]
	cmp	r3, #4096
	bne	.L38
.L37:
	.loc 1 160 0 discriminator 1
	movs	r3, #1
	b	.L39
.L38:
	.loc 1 160 0 discriminator 3
	movs	r3, #0
.L39:
	.loc 1 160 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 161 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #40]
	cmp	r3, #0
	beq	.L40
	.loc 1 161 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #40]
	cmp	r3, #8192
	bne	.L41
.L40:
	.loc 1 161 0 discriminator 1
	movs	r3, #1
	b	.L42
.L41:
	.loc 1 161 0 discriminator 3
	movs	r3, #0
.L42:
	.loc 1 161 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 162 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #44]
	cmp	r3, #0
	beq	.L43
	.loc 1 162 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #44]
	cmp	r3, #16384
	bne	.L44
.L43:
	.loc 1 162 0 discriminator 1
	movs	r3, #1
	b	.L45
.L44:
	.loc 1 162 0 discriminator 3
	movs	r3, #0
.L45:
	.loc 1 162 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 163 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #48]
	cmp	r3, #0
	beq	.L46
	.loc 1 163 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #48]
	cmp	r3, #524288
	bne	.L47
.L46:
	.loc 1 163 0 discriminator 1
	movs	r3, #1
	b	.L48
.L47:
	.loc 1 163 0 discriminator 3
	movs	r3, #0
.L48:
	.loc 1 163 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 164 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #52]
	ldr	r3, [r3]
	cmp	r3, #15
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 165 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #52]
	ldr	r3, [r3, #4]
	cmp	r3, #15
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 166 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #52]
	ldr	r3, [r3, #8]
	cmp	r3, #0
	beq	.L49
	.loc 1 166 0 is_stmt 0 discriminator 1
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #52]
	ldr	r3, [r3, #8]
	cmp	r3, #255
	bhi	.L49
	.loc 1 166 0 discriminator 3
	movs	r3, #1
	b	.L50
.L49:
	.loc 1 166 0 discriminator 2
	movs	r3, #0
.L50:
	.loc 1 166 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 167 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #52]
	ldr	r3, [r3, #12]
	cmp	r3, #15
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 168 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #52]
	ldr	r3, [r3, #16]
	cmp	r3, #15
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 169 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #52]
	ldr	r3, [r3, #20]
	cmp	r3, #15
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 170 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #52]
	ldr	r3, [r3, #24]
	cmp	r3, #0
	beq	.L51
	.loc 1 170 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #52]
	ldr	r3, [r3, #24]
	cmp	r3, #268435456
	beq	.L51
	.loc 1 170 0 discriminator 1
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #52]
	ldr	r3, [r3, #24]
	cmp	r3, #536870912
	beq	.L51
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #52]
	ldr	r3, [r3, #24]
	cmp	r3, #805306368
	bne	.L52
.L51:
	movs	r3, #1
	b	.L53
.L52:
	.loc 1 170 0 discriminator 3
	movs	r3, #0
.L53:
	.loc 1 170 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 173 0 is_stmt 1 discriminator 4
	mov	r3, #-1610612736
	ldr	r2, [r7, #4]
	ldr	r2, [r2]
	.loc 1 174 0 discriminator 4
	ldr	r1, [r7, #4]
	ldr	r0, [r1, #4]
	.loc 1 175 0 discriminator 4
	ldr	r1, [r7, #4]
	ldr	r1, [r1, #8]
	.loc 1 174 0 discriminator 4
	orrs	r0, r0, r1
	.loc 1 176 0 discriminator 4
	ldr	r1, [r7, #4]
	ldr	r1, [r1, #12]
	.loc 1 175 0 discriminator 4
	orrs	r0, r0, r1
	.loc 1 177 0 discriminator 4
	ldr	r1, [r7, #4]
	ldr	r1, [r1, #16]
	.loc 1 176 0 discriminator 4
	orrs	r0, r0, r1
	.loc 1 178 0 discriminator 4
	ldr	r1, [r7, #4]
	ldr	r1, [r1, #20]
	.loc 1 177 0 discriminator 4
	orrs	r0, r0, r1
	.loc 1 179 0 discriminator 4
	ldr	r1, [r7, #4]
	ldr	r1, [r1, #24]
	.loc 1 178 0 discriminator 4
	orrs	r0, r0, r1
	.loc 1 180 0 discriminator 4
	ldr	r1, [r7, #4]
	ldr	r1, [r1, #28]
	.loc 1 179 0 discriminator 4
	orrs	r0, r0, r1
	.loc 1 181 0 discriminator 4
	ldr	r1, [r7, #4]
	ldr	r1, [r1, #32]
	.loc 1 180 0 discriminator 4
	orrs	r0, r0, r1
	.loc 1 182 0 discriminator 4
	ldr	r1, [r7, #4]
	ldr	r1, [r1, #36]
	.loc 1 181 0 discriminator 4
	orrs	r0, r0, r1
	.loc 1 183 0 discriminator 4
	ldr	r1, [r7, #4]
	ldr	r1, [r1, #40]
	.loc 1 182 0 discriminator 4
	orrs	r0, r0, r1
	.loc 1 184 0 discriminator 4
	ldr	r1, [r7, #4]
	ldr	r1, [r1, #44]
	.loc 1 183 0 discriminator 4
	orrs	r0, r0, r1
	.loc 1 185 0 discriminator 4
	ldr	r1, [r7, #4]
	ldr	r1, [r1, #48]
	.loc 1 184 0 discriminator 4
	orrs	r1, r1, r0
	.loc 1 173 0 discriminator 4
	str	r1, [r3, r2, lsl #2]
	.loc 1 186 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #8]
	cmp	r3, #8
	bne	.L54
	.loc 1 188 0
	mov	r3, #-1610612736
	ldr	r2, [r7, #4]
	ldr	r2, [r2]
	mov	r1, #-1610612736
	ldr	r0, [r7, #4]
	ldr	r0, [r0]
	ldr	r1, [r1, r0, lsl #2]
	orr	r1, r1, #64
	str	r1, [r3, r2, lsl #2]
.L54:
	.loc 1 191 0
	mov	r3, #-1610612736
	ldr	r2, [r7, #4]
	ldr	r2, [r2]
	adds	r2, r2, #1
	.loc 1 192 0
	ldr	r1, [r7, #4]
	ldr	r1, [r1, #52]
	ldr	r0, [r1]
	.loc 1 193 0
	ldr	r1, [r7, #4]
	ldr	r1, [r1, #52]
	ldr	r1, [r1, #4]
	lsls	r1, r1, #4
	.loc 1 192 0
	orrs	r0, r0, r1
	.loc 1 194 0
	ldr	r1, [r7, #4]
	ldr	r1, [r1, #52]
	ldr	r1, [r1, #8]
	lsls	r1, r1, #8
	.loc 1 193 0
	orrs	r0, r0, r1
	.loc 1 195 0
	ldr	r1, [r7, #4]
	ldr	r1, [r1, #52]
	ldr	r1, [r1, #12]
	lsls	r1, r1, #16
	.loc 1 194 0
	orrs	r0, r0, r1
	.loc 1 196 0
	ldr	r1, [r7, #4]
	ldr	r1, [r1, #52]
	ldr	r1, [r1, #16]
	lsls	r1, r1, #20
	.loc 1 195 0
	orrs	r0, r0, r1
	.loc 1 197 0
	ldr	r1, [r7, #4]
	ldr	r1, [r1, #52]
	ldr	r1, [r1, #20]
	lsls	r1, r1, #24
	.loc 1 196 0
	orrs	r0, r0, r1
	.loc 1 198 0
	ldr	r1, [r7, #4]
	ldr	r1, [r1, #52]
	ldr	r1, [r1, #24]
	.loc 1 197 0
	orrs	r1, r1, r0
	.loc 1 191 0
	str	r1, [r3, r2, lsl #2]
	.loc 1 202 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #44]
	cmp	r3, #16384
	bne	.L55
	.loc 1 204 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #56]
	ldr	r3, [r3]
	cmp	r3, #15
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 205 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #56]
	ldr	r3, [r3, #4]
	cmp	r3, #15
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 206 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #56]
	ldr	r3, [r3, #8]
	cmp	r3, #0
	beq	.L56
	.loc 1 206 0 is_stmt 0 discriminator 1
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #56]
	ldr	r3, [r3, #8]
	cmp	r3, #255
	bhi	.L56
	.loc 1 206 0 discriminator 3
	movs	r3, #1
	b	.L57
.L56:
	.loc 1 206 0 discriminator 2
	movs	r3, #0
.L57:
	.loc 1 206 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 207 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #56]
	ldr	r3, [r3, #16]
	cmp	r3, #15
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 208 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #56]
	ldr	r3, [r3, #20]
	cmp	r3, #15
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 209 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #56]
	ldr	r3, [r3, #24]
	cmp	r3, #0
	beq	.L58
	.loc 1 209 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #56]
	ldr	r3, [r3, #24]
	cmp	r3, #268435456
	beq	.L58
	.loc 1 209 0 discriminator 1
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #56]
	ldr	r3, [r3, #24]
	cmp	r3, #536870912
	beq	.L58
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #56]
	ldr	r3, [r3, #24]
	cmp	r3, #805306368
	bne	.L59
.L58:
	movs	r3, #1
	b	.L60
.L59:
	.loc 1 209 0 discriminator 3
	movs	r3, #0
.L60:
	.loc 1 209 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 210 0 is_stmt 1 discriminator 4
	ldr	r3, .L62
	ldr	r2, [r7, #4]
	ldr	r2, [r2]
	.loc 1 211 0 discriminator 4
	ldr	r1, [r7, #4]
	ldr	r1, [r1, #56]
	ldr	r0, [r1]
	.loc 1 212 0 discriminator 4
	ldr	r1, [r7, #4]
	ldr	r1, [r1, #56]
	ldr	r1, [r1, #4]
	lsls	r1, r1, #4
	.loc 1 211 0 discriminator 4
	orrs	r0, r0, r1
	.loc 1 213 0 discriminator 4
	ldr	r1, [r7, #4]
	ldr	r1, [r1, #56]
	ldr	r1, [r1, #8]
	lsls	r1, r1, #8
	.loc 1 212 0 discriminator 4
	orrs	r0, r0, r1
	.loc 1 214 0 discriminator 4
	ldr	r1, [r7, #4]
	ldr	r1, [r1, #56]
	ldr	r1, [r1, #16]
	lsls	r1, r1, #20
	.loc 1 213 0 discriminator 4
	orrs	r0, r0, r1
	.loc 1 215 0 discriminator 4
	ldr	r1, [r7, #4]
	ldr	r1, [r1, #56]
	ldr	r1, [r1, #20]
	lsls	r1, r1, #24
	.loc 1 214 0 discriminator 4
	orrs	r0, r0, r1
	.loc 1 216 0 discriminator 4
	ldr	r1, [r7, #4]
	ldr	r1, [r1, #56]
	ldr	r1, [r1, #24]
	.loc 1 215 0 discriminator 4
	orrs	r1, r1, r0
	.loc 1 210 0 discriminator 4
	str	r1, [r3, r2, lsl #2]
	b	.L9
.L55:
	.loc 1 220 0
	ldr	r3, .L62
	ldr	r2, [r7, #4]
	ldr	r2, [r2]
	mvn	r1, #-268435456
	str	r1, [r3, r2, lsl #2]
.L9:
	.loc 1 222 0
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L63:
	.align	2
.L62:
	.word	-1610612476
.LFE112:
	.size	FSMC_NORSRAMInit, .-FSMC_NORSRAMInit
	.section	.text.FSMC_NORSRAMStructInit,"ax",%progbits
	.align	2
	.global	FSMC_NORSRAMStructInit
	.thumb
	.thumb_func
	.type	FSMC_NORSRAMStructInit, %function
FSMC_NORSRAMStructInit:
.LFB113:
	.loc 1 231 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7}
.LCFI6:
	sub	sp, sp, #12
.LCFI7:
	add	r7, sp, #0
.LCFI8:
	str	r0, [r7, #4]
	.loc 1 233 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	str	r2, [r3]
	.loc 1 234 0
	ldr	r3, [r7, #4]
	movs	r2, #2
	str	r2, [r3, #4]
	.loc 1 235 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	str	r2, [r3, #8]
	.loc 1 236 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	str	r2, [r3, #12]
	.loc 1 237 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	str	r2, [r3, #16]
	.loc 1 238 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	str	r2, [r3, #20]
	.loc 1 239 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	str	r2, [r3, #24]
	.loc 1 240 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	str	r2, [r3, #28]
	.loc 1 241 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	str	r2, [r3, #32]
	.loc 1 242 0
	ldr	r3, [r7, #4]
	mov	r2, #4096
	str	r2, [r3, #36]
	.loc 1 243 0
	ldr	r3, [r7, #4]
	mov	r2, #8192
	str	r2, [r3, #40]
	.loc 1 244 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	str	r2, [r3, #44]
	.loc 1 245 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	str	r2, [r3, #48]
	.loc 1 246 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #52]
	movs	r2, #15
	str	r2, [r3]
	.loc 1 247 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #52]
	movs	r2, #15
	str	r2, [r3, #4]
	.loc 1 248 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #52]
	movs	r2, #255
	str	r2, [r3, #8]
	.loc 1 249 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #52]
	movs	r2, #15
	str	r2, [r3, #12]
	.loc 1 250 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #52]
	movs	r2, #15
	str	r2, [r3, #16]
	.loc 1 251 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #52]
	movs	r2, #15
	str	r2, [r3, #20]
	.loc 1 252 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #52]
	movs	r2, #0
	str	r2, [r3, #24]
	.loc 1 253 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #56]
	movs	r2, #15
	str	r2, [r3]
	.loc 1 254 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #56]
	movs	r2, #15
	str	r2, [r3, #4]
	.loc 1 255 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #56]
	movs	r2, #255
	str	r2, [r3, #8]
	.loc 1 256 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #56]
	movs	r2, #15
	str	r2, [r3, #12]
	.loc 1 257 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #56]
	movs	r2, #15
	str	r2, [r3, #16]
	.loc 1 258 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #56]
	movs	r2, #15
	str	r2, [r3, #20]
	.loc 1 259 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #56]
	movs	r2, #0
	str	r2, [r3, #24]
	.loc 1 260 0
	adds	r7, r7, #12
	mov	sp, r7
	@ sp needed
	ldr	r7, [sp], #4
	bx	lr
.LFE113:
	.size	FSMC_NORSRAMStructInit, .-FSMC_NORSRAMStructInit
	.section	.text.FSMC_NORSRAMCmd,"ax",%progbits
	.align	2
	.global	FSMC_NORSRAMCmd
	.thumb
	.thumb_func
	.type	FSMC_NORSRAMCmd, %function
FSMC_NORSRAMCmd:
.LFB114:
	.loc 1 274 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI9:
	sub	sp, sp, #8
.LCFI10:
	add	r7, sp, #0
.LCFI11:
	str	r0, [r7, #4]
	mov	r3, r1
	strb	r3, [r7, #3]
	.loc 1 275 0
	ldr	r3, [r7, #4]
	cmp	r3, #0
	beq	.L66
	.loc 1 275 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #2
	beq	.L66
	.loc 1 275 0 discriminator 1
	ldr	r3, [r7, #4]
	cmp	r3, #4
	beq	.L66
	ldr	r3, [r7, #4]
	cmp	r3, #6
	bne	.L67
.L66:
	movs	r3, #1
	b	.L68
.L67:
	.loc 1 275 0 discriminator 3
	movs	r3, #0
.L68:
	.loc 1 275 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 276 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L69
	.loc 1 276 0 is_stmt 0 discriminator 2
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #1
	bne	.L70
.L69:
	.loc 1 276 0 discriminator 1
	movs	r3, #1
	b	.L71
.L70:
	.loc 1 276 0 discriminator 3
	movs	r3, #0
.L71:
	.loc 1 276 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 278 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L72
	.loc 1 281 0
	mov	r3, #-1610612736
	mov	r2, #-1610612736
	ldr	r1, [r7, #4]
	ldr	r2, [r2, r1, lsl #2]
	orr	r1, r2, #1
	ldr	r2, [r7, #4]
	str	r1, [r3, r2, lsl #2]
	b	.L65
.L72:
	.loc 1 286 0
	mov	r2, #-1610612736
	mov	r3, #-1610612736
	ldr	r1, [r7, #4]
	ldr	r1, [r3, r1, lsl #2]
	ldr	r3, .L74
	ands	r3, r3, r1
	ldr	r1, [r7, #4]
	str	r3, [r2, r1, lsl #2]
.L65:
	.loc 1 288 0
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L75:
	.align	2
.L74:
	.word	1048574
.LFE114:
	.size	FSMC_NORSRAMCmd, .-FSMC_NORSRAMCmd
	.section	.text.FSMC_NANDDeInit,"ax",%progbits
	.align	2
	.global	FSMC_NANDDeInit
	.thumb
	.thumb_func
	.type	FSMC_NANDDeInit, %function
FSMC_NANDDeInit:
.LFB115:
	.loc 1 347 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI12:
	sub	sp, sp, #8
.LCFI13:
	add	r7, sp, #0
.LCFI14:
	str	r0, [r7, #4]
	.loc 1 349 0
	ldr	r3, [r7, #4]
	cmp	r3, #16
	beq	.L77
	.loc 1 349 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #256
	bne	.L78
.L77:
	.loc 1 349 0 discriminator 1
	movs	r3, #1
	b	.L79
.L78:
	.loc 1 349 0 discriminator 3
	movs	r3, #0
.L79:
	.loc 1 349 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 351 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	cmp	r3, #16
	bne	.L80
	.loc 1 354 0
	ldr	r3, .L82
	movs	r2, #24
	str	r2, [r3]
	.loc 1 355 0
	ldr	r3, .L82
	movs	r2, #64
	str	r2, [r3, #4]
	.loc 1 356 0
	ldr	r3, .L82
	mov	r2, #-50529028
	str	r2, [r3, #8]
	.loc 1 357 0
	ldr	r3, .L82
	mov	r2, #-50529028
	str	r2, [r3, #12]
	b	.L76
.L80:
	.loc 1 363 0
	ldr	r3, .L82+4
	movs	r2, #24
	str	r2, [r3]
	.loc 1 364 0
	ldr	r3, .L82+4
	movs	r2, #64
	str	r2, [r3, #4]
	.loc 1 365 0
	ldr	r3, .L82+4
	mov	r2, #-50529028
	str	r2, [r3, #8]
	.loc 1 366 0
	ldr	r3, .L82+4
	mov	r2, #-50529028
	str	r2, [r3, #12]
.L76:
	.loc 1 368 0
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L83:
	.align	2
.L82:
	.word	-1610612640
	.word	-1610612608
.LFE115:
	.size	FSMC_NANDDeInit, .-FSMC_NANDDeInit
	.section	.text.FSMC_NANDInit,"ax",%progbits
	.align	2
	.global	FSMC_NANDInit
	.thumb
	.thumb_func
	.type	FSMC_NANDInit, %function
FSMC_NANDInit:
.LFB116:
	.loc 1 378 0
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI15:
	sub	sp, sp, #24
.LCFI16:
	add	r7, sp, #0
.LCFI17:
	str	r0, [r7, #4]
	.loc 1 379 0
	movs	r3, #0
	str	r3, [r7, #20]
	movs	r3, #0
	str	r3, [r7, #16]
	movs	r3, #0
	str	r3, [r7, #12]
	.loc 1 382 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3]
	cmp	r3, #16
	beq	.L85
	.loc 1 382 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	ldr	r3, [r3]
	cmp	r3, #256
	bne	.L86
.L85:
	.loc 1 382 0 discriminator 1
	movs	r3, #1
	b	.L87
.L86:
	.loc 1 382 0 discriminator 3
	movs	r3, #0
.L87:
	.loc 1 382 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 383 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #4]
	cmp	r3, #0
	beq	.L88
	.loc 1 383 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #4]
	cmp	r3, #2
	bne	.L89
.L88:
	.loc 1 383 0 discriminator 1
	movs	r3, #1
	b	.L90
.L89:
	.loc 1 383 0 discriminator 3
	movs	r3, #0
.L90:
	.loc 1 383 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 384 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #8]
	cmp	r3, #0
	beq	.L91
	.loc 1 384 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #8]
	cmp	r3, #16
	bne	.L92
.L91:
	.loc 1 384 0 discriminator 1
	movs	r3, #1
	b	.L93
.L92:
	.loc 1 384 0 discriminator 3
	movs	r3, #0
.L93:
	.loc 1 384 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 385 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #12]
	cmp	r3, #0
	beq	.L94
	.loc 1 385 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #12]
	cmp	r3, #64
	bne	.L95
.L94:
	.loc 1 385 0 discriminator 1
	movs	r3, #1
	b	.L96
.L95:
	.loc 1 385 0 discriminator 3
	movs	r3, #0
.L96:
	.loc 1 385 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 386 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #16]
	cmp	r3, #0
	beq	.L97
	.loc 1 386 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #16]
	cmp	r3, #131072
	beq	.L97
	.loc 1 386 0 discriminator 1
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #16]
	cmp	r3, #262144
	beq	.L97
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #16]
	cmp	r3, #393216
	beq	.L97
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #16]
	cmp	r3, #524288
	beq	.L97
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #16]
	cmp	r3, #655360
	bne	.L98
.L97:
	movs	r3, #1
	b	.L99
.L98:
	.loc 1 386 0 discriminator 3
	movs	r3, #0
.L99:
	.loc 1 386 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 387 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #20]
	cmp	r3, #255
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 388 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #24]
	cmp	r3, #255
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 389 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #28]
	ldr	r3, [r3]
	cmp	r3, #255
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 390 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #28]
	ldr	r3, [r3, #4]
	cmp	r3, #255
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 391 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #28]
	ldr	r3, [r3, #8]
	cmp	r3, #255
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 392 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #28]
	ldr	r3, [r3, #12]
	cmp	r3, #255
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 393 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #32]
	ldr	r3, [r3]
	cmp	r3, #255
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 394 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #32]
	ldr	r3, [r3, #4]
	cmp	r3, #255
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 395 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #32]
	ldr	r3, [r3, #8]
	cmp	r3, #255
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 396 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #32]
	ldr	r3, [r3, #12]
	cmp	r3, #255
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 399 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r2, [r3, #4]
	.loc 1 401 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #8]
	.loc 1 400 0 discriminator 4
	orrs	r2, r2, r3
	.loc 1 402 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #12]
	.loc 1 401 0 discriminator 4
	orrs	r2, r2, r3
	.loc 1 403 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #16]
	.loc 1 402 0 discriminator 4
	orrs	r2, r2, r3
	.loc 1 404 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #20]
	lsls	r3, r3, #9
	.loc 1 403 0 discriminator 4
	orrs	r2, r2, r3
	.loc 1 405 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #24]
	lsls	r3, r3, #13
	.loc 1 404 0 discriminator 4
	orrs	r3, r3, r2
	.loc 1 399 0 discriminator 4
	orr	r3, r3, #8
	str	r3, [r7, #20]
	.loc 1 408 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #28]
	ldr	r2, [r3]
	.loc 1 409 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #28]
	ldr	r3, [r3, #4]
	lsls	r3, r3, #8
	.loc 1 408 0 discriminator 4
	orrs	r2, r2, r3
	.loc 1 410 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #28]
	ldr	r3, [r3, #8]
	lsls	r3, r3, #16
	.loc 1 409 0 discriminator 4
	orrs	r2, r2, r3
	.loc 1 411 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #28]
	ldr	r3, [r3, #12]
	lsls	r3, r3, #24
	.loc 1 408 0 discriminator 4
	orrs	r3, r3, r2
	str	r3, [r7, #16]
	.loc 1 414 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #32]
	ldr	r2, [r3]
	.loc 1 415 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #32]
	ldr	r3, [r3, #4]
	lsls	r3, r3, #8
	.loc 1 414 0 discriminator 4
	orrs	r2, r2, r3
	.loc 1 416 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #32]
	ldr	r3, [r3, #8]
	lsls	r3, r3, #16
	.loc 1 415 0 discriminator 4
	orrs	r2, r2, r3
	.loc 1 417 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #32]
	ldr	r3, [r3, #12]
	lsls	r3, r3, #24
	.loc 1 414 0 discriminator 4
	orrs	r3, r3, r2
	str	r3, [r7, #12]
	.loc 1 419 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3]
	cmp	r3, #16
	bne	.L100
	.loc 1 422 0
	ldr	r3, .L102
	ldr	r2, [r7, #20]
	str	r2, [r3]
	.loc 1 423 0
	ldr	r3, .L102
	ldr	r2, [r7, #16]
	str	r2, [r3, #8]
	.loc 1 424 0
	ldr	r3, .L102
	ldr	r2, [r7, #12]
	str	r2, [r3, #12]
	b	.L84
.L100:
	.loc 1 429 0
	ldr	r3, .L102+4
	ldr	r2, [r7, #20]
	str	r2, [r3]
	.loc 1 430 0
	ldr	r3, .L102+4
	ldr	r2, [r7, #16]
	str	r2, [r3, #8]
	.loc 1 431 0
	ldr	r3, .L102+4
	ldr	r2, [r7, #12]
	str	r2, [r3, #12]
.L84:
	.loc 1 433 0
	adds	r7, r7, #24
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L103:
	.align	2
.L102:
	.word	-1610612640
	.word	-1610612608
.LFE116:
	.size	FSMC_NANDInit, .-FSMC_NANDInit
	.section	.text.FSMC_NANDStructInit,"ax",%progbits
	.align	2
	.global	FSMC_NANDStructInit
	.thumb
	.thumb_func
	.type	FSMC_NANDStructInit, %function
FSMC_NANDStructInit:
.LFB117:
	.loc 1 443 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7}
.LCFI18:
	sub	sp, sp, #12
.LCFI19:
	add	r7, sp, #0
.LCFI20:
	str	r0, [r7, #4]
	.loc 1 445 0
	ldr	r3, [r7, #4]
	movs	r2, #16
	str	r2, [r3]
	.loc 1 446 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	str	r2, [r3, #4]
	.loc 1 447 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	str	r2, [r3, #8]
	.loc 1 448 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	str	r2, [r3, #12]
	.loc 1 449 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	str	r2, [r3, #16]
	.loc 1 450 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	str	r2, [r3, #20]
	.loc 1 451 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	str	r2, [r3, #24]
	.loc 1 452 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #28]
	movs	r2, #252
	str	r2, [r3]
	.loc 1 453 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #28]
	movs	r2, #252
	str	r2, [r3, #4]
	.loc 1 454 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #28]
	movs	r2, #252
	str	r2, [r3, #8]
	.loc 1 455 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #28]
	movs	r2, #252
	str	r2, [r3, #12]
	.loc 1 456 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #32]
	movs	r2, #252
	str	r2, [r3]
	.loc 1 457 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #32]
	movs	r2, #252
	str	r2, [r3, #4]
	.loc 1 458 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #32]
	movs	r2, #252
	str	r2, [r3, #8]
	.loc 1 459 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #32]
	movs	r2, #252
	str	r2, [r3, #12]
	.loc 1 460 0
	adds	r7, r7, #12
	mov	sp, r7
	@ sp needed
	ldr	r7, [sp], #4
	bx	lr
.LFE117:
	.size	FSMC_NANDStructInit, .-FSMC_NANDStructInit
	.section	.text.FSMC_NANDCmd,"ax",%progbits
	.align	2
	.global	FSMC_NANDCmd
	.thumb
	.thumb_func
	.type	FSMC_NANDCmd, %function
FSMC_NANDCmd:
.LFB118:
	.loc 1 472 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI21:
	sub	sp, sp, #8
.LCFI22:
	add	r7, sp, #0
.LCFI23:
	str	r0, [r7, #4]
	mov	r3, r1
	strb	r3, [r7, #3]
	.loc 1 473 0
	ldr	r3, [r7, #4]
	cmp	r3, #16
	beq	.L106
	.loc 1 473 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #256
	bne	.L107
.L106:
	.loc 1 473 0 discriminator 1
	movs	r3, #1
	b	.L108
.L107:
	.loc 1 473 0 discriminator 3
	movs	r3, #0
.L108:
	.loc 1 473 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 474 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L109
	.loc 1 474 0 is_stmt 0 discriminator 2
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #1
	bne	.L110
.L109:
	.loc 1 474 0 discriminator 1
	movs	r3, #1
	b	.L111
.L110:
	.loc 1 474 0 discriminator 3
	movs	r3, #0
.L111:
	.loc 1 474 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 476 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L112
	.loc 1 479 0
	ldr	r3, [r7, #4]
	cmp	r3, #16
	bne	.L113
	.loc 1 481 0
	ldr	r3, .L117
	ldr	r2, .L117
	ldr	r2, [r2]
	orr	r2, r2, #4
	str	r2, [r3]
	b	.L105
.L113:
	.loc 1 485 0
	ldr	r3, .L117+4
	ldr	r2, .L117+4
	ldr	r2, [r2]
	orr	r2, r2, #4
	str	r2, [r3]
	b	.L105
.L112:
	.loc 1 491 0
	ldr	r3, [r7, #4]
	cmp	r3, #16
	bne	.L116
	.loc 1 493 0
	ldr	r2, .L117
	ldr	r3, .L117
	ldr	r1, [r3]
	ldr	r3, .L117+8
	ands	r3, r3, r1
	str	r3, [r2]
	b	.L105
.L116:
	.loc 1 497 0
	ldr	r2, .L117+4
	ldr	r3, .L117+4
	ldr	r1, [r3]
	ldr	r3, .L117+8
	ands	r3, r3, r1
	str	r3, [r2]
.L105:
	.loc 1 500 0
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L118:
	.align	2
.L117:
	.word	-1610612640
	.word	-1610612608
	.word	1048571
.LFE118:
	.size	FSMC_NANDCmd, .-FSMC_NANDCmd
	.section	.text.FSMC_NANDECCCmd,"ax",%progbits
	.align	2
	.global	FSMC_NANDECCCmd
	.thumb
	.thumb_func
	.type	FSMC_NANDECCCmd, %function
FSMC_NANDECCCmd:
.LFB119:
	.loc 1 512 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI24:
	sub	sp, sp, #8
.LCFI25:
	add	r7, sp, #0
.LCFI26:
	str	r0, [r7, #4]
	mov	r3, r1
	strb	r3, [r7, #3]
	.loc 1 513 0
	ldr	r3, [r7, #4]
	cmp	r3, #16
	beq	.L120
	.loc 1 513 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #256
	bne	.L121
.L120:
	.loc 1 513 0 discriminator 1
	movs	r3, #1
	b	.L122
.L121:
	.loc 1 513 0 discriminator 3
	movs	r3, #0
.L122:
	.loc 1 513 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 514 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L123
	.loc 1 514 0 is_stmt 0 discriminator 2
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #1
	bne	.L124
.L123:
	.loc 1 514 0 discriminator 1
	movs	r3, #1
	b	.L125
.L124:
	.loc 1 514 0 discriminator 3
	movs	r3, #0
.L125:
	.loc 1 514 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 516 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L126
	.loc 1 519 0
	ldr	r3, [r7, #4]
	cmp	r3, #16
	bne	.L127
	.loc 1 521 0
	ldr	r3, .L131
	ldr	r2, .L131
	ldr	r2, [r2]
	orr	r2, r2, #64
	str	r2, [r3]
	b	.L119
.L127:
	.loc 1 525 0
	ldr	r3, .L131+4
	ldr	r2, .L131+4
	ldr	r2, [r2]
	orr	r2, r2, #64
	str	r2, [r3]
	b	.L119
.L126:
	.loc 1 531 0
	ldr	r3, [r7, #4]
	cmp	r3, #16
	bne	.L130
	.loc 1 533 0
	ldr	r2, .L131
	ldr	r3, .L131
	ldr	r1, [r3]
	ldr	r3, .L131+8
	ands	r3, r3, r1
	str	r3, [r2]
	b	.L119
.L130:
	.loc 1 537 0
	ldr	r2, .L131+4
	ldr	r3, .L131+4
	ldr	r1, [r3]
	ldr	r3, .L131+8
	ands	r3, r3, r1
	str	r3, [r2]
.L119:
	.loc 1 540 0
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L132:
	.align	2
.L131:
	.word	-1610612640
	.word	-1610612608
	.word	1048511
.LFE119:
	.size	FSMC_NANDECCCmd, .-FSMC_NANDECCCmd
	.section	.text.FSMC_GetECC,"ax",%progbits
	.align	2
	.global	FSMC_GetECC
	.thumb
	.thumb_func
	.type	FSMC_GetECC, %function
FSMC_GetECC:
.LFB120:
	.loc 1 551 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7}
.LCFI27:
	sub	sp, sp, #20
.LCFI28:
	add	r7, sp, #0
.LCFI29:
	str	r0, [r7, #4]
	.loc 1 552 0
	movs	r3, #0
	str	r3, [r7, #12]
	.loc 1 554 0
	ldr	r3, [r7, #4]
	cmp	r3, #16
	bne	.L134
	.loc 1 557 0
	ldr	r3, .L137
	ldr	r3, [r3, #20]
	str	r3, [r7, #12]
	b	.L135
.L134:
	.loc 1 562 0
	ldr	r3, .L137+4
	ldr	r3, [r3, #20]
	str	r3, [r7, #12]
.L135:
	.loc 1 565 0
	ldr	r3, [r7, #12]
	.loc 1 566 0
	mov	r0, r3
	adds	r7, r7, #20
	mov	sp, r7
	@ sp needed
	ldr	r7, [sp], #4
	bx	lr
.L138:
	.align	2
.L137:
	.word	-1610612640
	.word	-1610612608
.LFE120:
	.size	FSMC_GetECC, .-FSMC_GetECC
	.section	.text.FSMC_PCCARDDeInit,"ax",%progbits
	.align	2
	.global	FSMC_PCCARDDeInit
	.thumb
	.thumb_func
	.type	FSMC_PCCARDDeInit, %function
FSMC_PCCARDDeInit:
.LFB121:
	.loc 1 615 0
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7}
.LCFI30:
	add	r7, sp, #0
.LCFI31:
	.loc 1 617 0
	ldr	r3, .L140
	movs	r2, #24
	str	r2, [r3]
	.loc 1 618 0
	ldr	r3, .L140
	movs	r2, #0
	str	r2, [r3, #4]
	.loc 1 619 0
	ldr	r3, .L140
	mov	r2, #-50529028
	str	r2, [r3, #8]
	.loc 1 620 0
	ldr	r3, .L140
	mov	r2, #-50529028
	str	r2, [r3, #12]
	.loc 1 621 0
	ldr	r3, .L140
	mov	r2, #-50529028
	str	r2, [r3, #16]
	.loc 1 622 0
	mov	sp, r7
	@ sp needed
	ldr	r7, [sp], #4
	bx	lr
.L141:
	.align	2
.L140:
	.word	-1610612576
.LFE121:
	.size	FSMC_PCCARDDeInit, .-FSMC_PCCARDDeInit
	.section	.text.FSMC_PCCARDInit,"ax",%progbits
	.align	2
	.global	FSMC_PCCARDInit
	.thumb
	.thumb_func
	.type	FSMC_PCCARDInit, %function
FSMC_PCCARDInit:
.LFB122:
	.loc 1 632 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI32:
	sub	sp, sp, #8
.LCFI33:
	add	r7, sp, #0
.LCFI34:
	str	r0, [r7, #4]
	.loc 1 634 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3]
	cmp	r3, #0
	beq	.L143
	.loc 1 634 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	ldr	r3, [r3]
	cmp	r3, #2
	bne	.L144
.L143:
	.loc 1 634 0 discriminator 1
	movs	r3, #1
	b	.L145
.L144:
	.loc 1 634 0 discriminator 3
	movs	r3, #0
.L145:
	.loc 1 634 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 635 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #4]
	cmp	r3, #255
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 636 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #8]
	cmp	r3, #255
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 638 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #12]
	ldr	r3, [r3]
	cmp	r3, #255
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 639 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #12]
	ldr	r3, [r3, #4]
	cmp	r3, #255
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 640 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #12]
	ldr	r3, [r3, #8]
	cmp	r3, #255
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 641 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #12]
	ldr	r3, [r3, #12]
	cmp	r3, #255
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 643 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #16]
	ldr	r3, [r3]
	cmp	r3, #255
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 644 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #16]
	ldr	r3, [r3, #4]
	cmp	r3, #255
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 645 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #16]
	ldr	r3, [r3, #8]
	cmp	r3, #255
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 646 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #16]
	ldr	r3, [r3, #12]
	cmp	r3, #255
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 647 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #20]
	ldr	r3, [r3]
	cmp	r3, #255
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 648 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #20]
	ldr	r3, [r3, #4]
	cmp	r3, #255
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 649 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #20]
	ldr	r3, [r3, #8]
	cmp	r3, #255
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 650 0 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #20]
	ldr	r3, [r3, #12]
	cmp	r3, #255
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 653 0 discriminator 4
	ldr	r3, .L146
	ldr	r2, [r7, #4]
	ldr	r1, [r2]
	.loc 1 655 0 discriminator 4
	ldr	r2, [r7, #4]
	ldr	r2, [r2, #4]
	lsls	r2, r2, #9
	.loc 1 654 0 discriminator 4
	orrs	r1, r1, r2
	.loc 1 656 0 discriminator 4
	ldr	r2, [r7, #4]
	ldr	r2, [r2, #8]
	lsls	r2, r2, #13
	.loc 1 655 0 discriminator 4
	orrs	r2, r2, r1
	orr	r2, r2, #16
	.loc 1 653 0 discriminator 4
	str	r2, [r3]
	.loc 1 659 0 discriminator 4
	ldr	r3, .L146
	ldr	r2, [r7, #4]
	ldr	r2, [r2, #12]
	ldr	r1, [r2]
	.loc 1 660 0 discriminator 4
	ldr	r2, [r7, #4]
	ldr	r2, [r2, #12]
	ldr	r2, [r2, #4]
	lsls	r2, r2, #8
	.loc 1 659 0 discriminator 4
	orrs	r1, r1, r2
	.loc 1 661 0 discriminator 4
	ldr	r2, [r7, #4]
	ldr	r2, [r2, #12]
	ldr	r2, [r2, #8]
	lsls	r2, r2, #16
	.loc 1 660 0 discriminator 4
	orrs	r1, r1, r2
	.loc 1 662 0 discriminator 4
	ldr	r2, [r7, #4]
	ldr	r2, [r2, #12]
	ldr	r2, [r2, #12]
	lsls	r2, r2, #24
	.loc 1 661 0 discriminator 4
	orrs	r2, r2, r1
	.loc 1 659 0 discriminator 4
	str	r2, [r3, #8]
	.loc 1 665 0 discriminator 4
	ldr	r3, .L146
	ldr	r2, [r7, #4]
	ldr	r2, [r2, #16]
	ldr	r1, [r2]
	.loc 1 666 0 discriminator 4
	ldr	r2, [r7, #4]
	ldr	r2, [r2, #16]
	ldr	r2, [r2, #4]
	lsls	r2, r2, #8
	.loc 1 665 0 discriminator 4
	orrs	r1, r1, r2
	.loc 1 667 0 discriminator 4
	ldr	r2, [r7, #4]
	ldr	r2, [r2, #16]
	ldr	r2, [r2, #8]
	lsls	r2, r2, #16
	.loc 1 666 0 discriminator 4
	orrs	r1, r1, r2
	.loc 1 668 0 discriminator 4
	ldr	r2, [r7, #4]
	ldr	r2, [r2, #16]
	ldr	r2, [r2, #12]
	lsls	r2, r2, #24
	.loc 1 667 0 discriminator 4
	orrs	r2, r2, r1
	.loc 1 665 0 discriminator 4
	str	r2, [r3, #12]
	.loc 1 671 0 discriminator 4
	ldr	r3, .L146
	ldr	r2, [r7, #4]
	ldr	r2, [r2, #20]
	ldr	r1, [r2]
	.loc 1 672 0 discriminator 4
	ldr	r2, [r7, #4]
	ldr	r2, [r2, #20]
	ldr	r2, [r2, #4]
	lsls	r2, r2, #8
	.loc 1 671 0 discriminator 4
	orrs	r1, r1, r2
	.loc 1 673 0 discriminator 4
	ldr	r2, [r7, #4]
	ldr	r2, [r2, #20]
	ldr	r2, [r2, #8]
	lsls	r2, r2, #16
	.loc 1 672 0 discriminator 4
	orrs	r1, r1, r2
	.loc 1 674 0 discriminator 4
	ldr	r2, [r7, #4]
	ldr	r2, [r2, #20]
	ldr	r2, [r2, #12]
	lsls	r2, r2, #24
	.loc 1 673 0 discriminator 4
	orrs	r2, r2, r1
	.loc 1 671 0 discriminator 4
	str	r2, [r3, #16]
	.loc 1 675 0 discriminator 4
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L147:
	.align	2
.L146:
	.word	-1610612576
.LFE122:
	.size	FSMC_PCCARDInit, .-FSMC_PCCARDInit
	.section	.text.FSMC_PCCARDStructInit,"ax",%progbits
	.align	2
	.global	FSMC_PCCARDStructInit
	.thumb
	.thumb_func
	.type	FSMC_PCCARDStructInit, %function
FSMC_PCCARDStructInit:
.LFB123:
	.loc 1 684 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7}
.LCFI35:
	sub	sp, sp, #12
.LCFI36:
	add	r7, sp, #0
.LCFI37:
	str	r0, [r7, #4]
	.loc 1 686 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	str	r2, [r3]
	.loc 1 687 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	str	r2, [r3, #4]
	.loc 1 688 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	str	r2, [r3, #8]
	.loc 1 689 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #12]
	movs	r2, #252
	str	r2, [r3]
	.loc 1 690 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #12]
	movs	r2, #252
	str	r2, [r3, #4]
	.loc 1 691 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #12]
	movs	r2, #252
	str	r2, [r3, #8]
	.loc 1 692 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #12]
	movs	r2, #252
	str	r2, [r3, #12]
	.loc 1 693 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #16]
	movs	r2, #252
	str	r2, [r3]
	.loc 1 694 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #16]
	movs	r2, #252
	str	r2, [r3, #4]
	.loc 1 695 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #16]
	movs	r2, #252
	str	r2, [r3, #8]
	.loc 1 696 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #16]
	movs	r2, #252
	str	r2, [r3, #12]
	.loc 1 697 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #20]
	movs	r2, #252
	str	r2, [r3]
	.loc 1 698 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #20]
	movs	r2, #252
	str	r2, [r3, #4]
	.loc 1 699 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #20]
	movs	r2, #252
	str	r2, [r3, #8]
	.loc 1 700 0
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #20]
	movs	r2, #252
	str	r2, [r3, #12]
	.loc 1 701 0
	adds	r7, r7, #12
	mov	sp, r7
	@ sp needed
	ldr	r7, [sp], #4
	bx	lr
.LFE123:
	.size	FSMC_PCCARDStructInit, .-FSMC_PCCARDStructInit
	.section	.text.FSMC_PCCARDCmd,"ax",%progbits
	.align	2
	.global	FSMC_PCCARDCmd
	.thumb
	.thumb_func
	.type	FSMC_PCCARDCmd, %function
FSMC_PCCARDCmd:
.LFB124:
	.loc 1 710 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI38:
	sub	sp, sp, #8
.LCFI39:
	add	r7, sp, #0
.LCFI40:
	mov	r3, r0
	strb	r3, [r7, #7]
	.loc 1 711 0
	ldrb	r3, [r7, #7]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L150
	.loc 1 711 0 is_stmt 0 discriminator 2
	ldrb	r3, [r7, #7]	@ zero_extendqisi2
	cmp	r3, #1
	bne	.L151
.L150:
	.loc 1 711 0 discriminator 1
	movs	r3, #1
	b	.L152
.L151:
	.loc 1 711 0 discriminator 3
	movs	r3, #0
.L152:
	.loc 1 711 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 713 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #7]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L153
	.loc 1 716 0
	ldr	r3, .L155
	ldr	r2, .L155
	ldr	r2, [r2]
	orr	r2, r2, #4
	str	r2, [r3]
	b	.L149
.L153:
	.loc 1 721 0
	ldr	r2, .L155
	ldr	r3, .L155
	ldr	r1, [r3]
	ldr	r3, .L155+4
	ands	r3, r3, r1
	str	r3, [r2]
.L149:
	.loc 1 723 0
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L156:
	.align	2
.L155:
	.word	-1610612576
	.word	1048571
.LFE124:
	.size	FSMC_PCCARDCmd, .-FSMC_PCCARDCmd
	.section	.text.FSMC_ITConfig,"ax",%progbits
	.align	2
	.global	FSMC_ITConfig
	.thumb
	.thumb_func
	.type	FSMC_ITConfig, %function
FSMC_ITConfig:
.LFB125:
	.loc 1 757 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI41:
	sub	sp, sp, #16
.LCFI42:
	add	r7, sp, #0
.LCFI43:
	str	r0, [r7, #12]
	str	r1, [r7, #8]
	mov	r3, r2
	strb	r3, [r7, #7]
	.loc 1 758 0
	ldr	r3, [r7, #12]
	cmp	r3, #16
	beq	.L158
	.loc 1 758 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #12]
	cmp	r3, #256
	beq	.L158
	.loc 1 758 0 discriminator 1
	ldr	r3, [r7, #12]
	cmp	r3, #4096
	bne	.L159
.L158:
	movs	r3, #1
	b	.L160
.L159:
	.loc 1 758 0 discriminator 3
	movs	r3, #0
.L160:
	.loc 1 758 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 759 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #8]
	bic	r3, r3, #56
	cmp	r3, #0
	bne	.L161
	.loc 1 759 0 is_stmt 0 discriminator 1
	ldr	r3, [r7, #8]
	cmp	r3, #0
	beq	.L161
	.loc 1 759 0 discriminator 3
	movs	r3, #1
	b	.L162
.L161:
	.loc 1 759 0 discriminator 2
	movs	r3, #0
.L162:
	.loc 1 759 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 760 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #7]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L163
	.loc 1 760 0 is_stmt 0 discriminator 2
	ldrb	r3, [r7, #7]	@ zero_extendqisi2
	cmp	r3, #1
	bne	.L164
.L163:
	.loc 1 760 0 discriminator 1
	movs	r3, #1
	b	.L165
.L164:
	.loc 1 760 0 discriminator 3
	movs	r3, #0
.L165:
	.loc 1 760 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 762 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #7]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L166
	.loc 1 765 0
	ldr	r3, [r7, #12]
	cmp	r3, #16
	bne	.L167
	.loc 1 767 0
	ldr	r3, .L173
	ldr	r2, .L173
	ldr	r1, [r2, #4]
	ldr	r2, [r7, #8]
	orrs	r2, r2, r1
	str	r2, [r3, #4]
	b	.L157
.L167:
	.loc 1 770 0
	ldr	r3, [r7, #12]
	cmp	r3, #256
	bne	.L169
	.loc 1 772 0
	ldr	r3, .L173+4
	ldr	r2, .L173+4
	ldr	r1, [r2, #4]
	ldr	r2, [r7, #8]
	orrs	r2, r2, r1
	str	r2, [r3, #4]
	b	.L157
.L169:
	.loc 1 777 0
	ldr	r3, .L173+8
	ldr	r2, .L173+8
	ldr	r1, [r2, #4]
	ldr	r2, [r7, #8]
	orrs	r2, r2, r1
	str	r2, [r3, #4]
	b	.L157
.L166:
	.loc 1 783 0
	ldr	r3, [r7, #12]
	cmp	r3, #16
	bne	.L171
	.loc 1 786 0
	ldr	r3, .L173
	ldr	r2, .L173
	ldr	r1, [r2, #4]
	ldr	r2, [r7, #8]
	mvns	r2, r2
	ands	r2, r2, r1
	str	r2, [r3, #4]
	b	.L157
.L171:
	.loc 1 789 0
	ldr	r3, [r7, #12]
	cmp	r3, #256
	bne	.L172
	.loc 1 791 0
	ldr	r3, .L173+4
	ldr	r2, .L173+4
	ldr	r1, [r2, #4]
	ldr	r2, [r7, #8]
	mvns	r2, r2
	ands	r2, r2, r1
	str	r2, [r3, #4]
	b	.L157
.L172:
	.loc 1 796 0
	ldr	r3, .L173+8
	ldr	r2, .L173+8
	ldr	r1, [r2, #4]
	ldr	r2, [r7, #8]
	mvns	r2, r2
	ands	r2, r2, r1
	str	r2, [r3, #4]
.L157:
	.loc 1 799 0
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L174:
	.align	2
.L173:
	.word	-1610612640
	.word	-1610612608
	.word	-1610612576
.LFE125:
	.size	FSMC_ITConfig, .-FSMC_ITConfig
	.section	.text.FSMC_GetFlagStatus,"ax",%progbits
	.align	2
	.global	FSMC_GetFlagStatus
	.thumb
	.thumb_func
	.type	FSMC_GetFlagStatus, %function
FSMC_GetFlagStatus:
.LFB126:
	.loc 1 817 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI44:
	sub	sp, sp, #16
.LCFI45:
	add	r7, sp, #0
.LCFI46:
	str	r0, [r7, #4]
	str	r1, [r7]
	.loc 1 818 0
	movs	r3, #0
	strb	r3, [r7, #15]
	.loc 1 819 0
	movs	r3, #0
	str	r3, [r7, #8]
	.loc 1 822 0
	ldr	r3, [r7, #4]
	cmp	r3, #16
	beq	.L176
	.loc 1 822 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #256
	beq	.L176
	.loc 1 822 0 discriminator 1
	ldr	r3, [r7, #4]
	cmp	r3, #4096
	bne	.L177
.L176:
	movs	r3, #1
	b	.L178
.L177:
	.loc 1 822 0 discriminator 3
	movs	r3, #0
.L178:
	.loc 1 822 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 823 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	cmp	r3, #1
	beq	.L179
	.loc 1 823 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	cmp	r3, #2
	beq	.L179
	.loc 1 823 0 discriminator 1
	ldr	r3, [r7]
	cmp	r3, #4
	beq	.L179
	ldr	r3, [r7]
	cmp	r3, #64
	bne	.L180
.L179:
	movs	r3, #1
	b	.L181
.L180:
	.loc 1 823 0 discriminator 3
	movs	r3, #0
.L181:
	.loc 1 823 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 825 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	cmp	r3, #16
	bne	.L182
	.loc 1 827 0
	ldr	r3, .L188
	ldr	r3, [r3, #4]
	str	r3, [r7, #8]
	b	.L183
.L182:
	.loc 1 829 0
	ldr	r3, [r7, #4]
	cmp	r3, #256
	bne	.L184
	.loc 1 831 0
	ldr	r3, .L188+4
	ldr	r3, [r3, #4]
	str	r3, [r7, #8]
	b	.L183
.L184:
	.loc 1 836 0
	ldr	r3, .L188+8
	ldr	r3, [r3, #4]
	str	r3, [r7, #8]
.L183:
	.loc 1 840 0
	ldr	r2, [r7, #8]
	ldr	r3, [r7]
	ands	r3, r3, r2
	cmp	r3, #0
	beq	.L185
	.loc 1 842 0
	movs	r3, #1
	strb	r3, [r7, #15]
	b	.L186
.L185:
	.loc 1 846 0
	movs	r3, #0
	strb	r3, [r7, #15]
.L186:
	.loc 1 849 0
	ldrb	r3, [r7, #15]	@ zero_extendqisi2
	.loc 1 850 0
	mov	r0, r3
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L189:
	.align	2
.L188:
	.word	-1610612640
	.word	-1610612608
	.word	-1610612576
.LFE126:
	.size	FSMC_GetFlagStatus, .-FSMC_GetFlagStatus
	.section	.text.FSMC_ClearFlag,"ax",%progbits
	.align	2
	.global	FSMC_ClearFlag
	.thumb
	.thumb_func
	.type	FSMC_ClearFlag, %function
FSMC_ClearFlag:
.LFB127:
	.loc 1 867 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI47:
	sub	sp, sp, #8
.LCFI48:
	add	r7, sp, #0
.LCFI49:
	str	r0, [r7, #4]
	str	r1, [r7]
	.loc 1 869 0
	ldr	r3, [r7, #4]
	cmp	r3, #16
	beq	.L191
	.loc 1 869 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #256
	beq	.L191
	.loc 1 869 0 discriminator 1
	ldr	r3, [r7, #4]
	cmp	r3, #4096
	bne	.L192
.L191:
	movs	r3, #1
	b	.L193
.L192:
	.loc 1 869 0 discriminator 3
	movs	r3, #0
.L193:
	.loc 1 869 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 870 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	bic	r3, r3, #7
	cmp	r3, #0
	bne	.L194
	.loc 1 870 0 is_stmt 0 discriminator 1
	ldr	r3, [r7]
	cmp	r3, #0
	beq	.L194
	.loc 1 870 0 discriminator 3
	movs	r3, #1
	b	.L195
.L194:
	.loc 1 870 0 discriminator 2
	movs	r3, #0
.L195:
	.loc 1 870 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 872 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	cmp	r3, #16
	bne	.L196
	.loc 1 874 0
	ldr	r3, .L199
	ldr	r2, .L199
	ldr	r1, [r2, #4]
	ldr	r2, [r7]
	mvns	r2, r2
	ands	r2, r2, r1
	str	r2, [r3, #4]
	b	.L190
.L196:
	.loc 1 876 0
	ldr	r3, [r7, #4]
	cmp	r3, #256
	bne	.L198
	.loc 1 878 0
	ldr	r3, .L199+4
	ldr	r2, .L199+4
	ldr	r1, [r2, #4]
	ldr	r2, [r7]
	mvns	r2, r2
	ands	r2, r2, r1
	str	r2, [r3, #4]
	b	.L190
.L198:
	.loc 1 883 0
	ldr	r3, .L199+8
	ldr	r2, .L199+8
	ldr	r1, [r2, #4]
	ldr	r2, [r7]
	mvns	r2, r2
	ands	r2, r2, r1
	str	r2, [r3, #4]
.L190:
	.loc 1 885 0
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L200:
	.align	2
.L199:
	.word	-1610612640
	.word	-1610612608
	.word	-1610612576
.LFE127:
	.size	FSMC_ClearFlag, .-FSMC_ClearFlag
	.section	.text.FSMC_GetITStatus,"ax",%progbits
	.align	2
	.global	FSMC_GetITStatus
	.thumb
	.thumb_func
	.type	FSMC_GetITStatus, %function
FSMC_GetITStatus:
.LFB128:
	.loc 1 902 0
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI50:
	sub	sp, sp, #24
.LCFI51:
	add	r7, sp, #0
.LCFI52:
	str	r0, [r7, #4]
	str	r1, [r7]
	.loc 1 903 0
	movs	r3, #0
	strb	r3, [r7, #23]
	.loc 1 904 0
	movs	r3, #0
	str	r3, [r7, #16]
	movs	r3, #0
	str	r3, [r7, #12]
	movs	r3, #0
	str	r3, [r7, #8]
	.loc 1 907 0
	ldr	r3, [r7, #4]
	cmp	r3, #16
	beq	.L202
	.loc 1 907 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #256
	beq	.L202
	.loc 1 907 0 discriminator 1
	ldr	r3, [r7, #4]
	cmp	r3, #4096
	bne	.L203
.L202:
	movs	r3, #1
	b	.L204
.L203:
	.loc 1 907 0 discriminator 3
	movs	r3, #0
.L204:
	.loc 1 907 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 908 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	cmp	r3, #8
	beq	.L205
	.loc 1 908 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	cmp	r3, #16
	beq	.L205
	.loc 1 908 0 discriminator 1
	ldr	r3, [r7]
	cmp	r3, #32
	bne	.L206
.L205:
	movs	r3, #1
	b	.L207
.L206:
	.loc 1 908 0 discriminator 3
	movs	r3, #0
.L207:
	.loc 1 908 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 910 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	cmp	r3, #16
	bne	.L208
	.loc 1 912 0
	ldr	r3, .L214
	ldr	r3, [r3, #4]
	str	r3, [r7, #16]
	b	.L209
.L208:
	.loc 1 914 0
	ldr	r3, [r7, #4]
	cmp	r3, #256
	bne	.L210
	.loc 1 916 0
	ldr	r3, .L214+4
	ldr	r3, [r3, #4]
	str	r3, [r7, #16]
	b	.L209
.L210:
	.loc 1 921 0
	ldr	r3, .L214+8
	ldr	r3, [r3, #4]
	str	r3, [r7, #16]
.L209:
	.loc 1 924 0
	ldr	r2, [r7, #16]
	ldr	r3, [r7]
	ands	r3, r3, r2
	str	r3, [r7, #12]
	.loc 1 926 0
	ldr	r3, [r7]
	lsrs	r2, r3, #3
	ldr	r3, [r7, #16]
	ands	r3, r3, r2
	str	r3, [r7, #8]
	.loc 1 927 0
	ldr	r3, [r7, #12]
	cmp	r3, #0
	beq	.L211
	.loc 1 927 0 is_stmt 0 discriminator 1
	ldr	r3, [r7, #8]
	cmp	r3, #0
	beq	.L211
	.loc 1 929 0 is_stmt 1
	movs	r3, #1
	strb	r3, [r7, #23]
	b	.L212
.L211:
	.loc 1 933 0
	movs	r3, #0
	strb	r3, [r7, #23]
.L212:
	.loc 1 935 0
	ldrb	r3, [r7, #23]	@ zero_extendqisi2
	.loc 1 936 0
	mov	r0, r3
	adds	r7, r7, #24
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L215:
	.align	2
.L214:
	.word	-1610612640
	.word	-1610612608
	.word	-1610612576
.LFE128:
	.size	FSMC_GetITStatus, .-FSMC_GetITStatus
	.section	.text.FSMC_ClearITPendingBit,"ax",%progbits
	.align	2
	.global	FSMC_ClearITPendingBit
	.thumb
	.thumb_func
	.type	FSMC_ClearITPendingBit, %function
FSMC_ClearITPendingBit:
.LFB129:
	.loc 1 953 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI53:
	sub	sp, sp, #8
.LCFI54:
	add	r7, sp, #0
.LCFI55:
	str	r0, [r7, #4]
	str	r1, [r7]
	.loc 1 955 0
	ldr	r3, [r7, #4]
	cmp	r3, #16
	beq	.L217
	.loc 1 955 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #256
	beq	.L217
	.loc 1 955 0 discriminator 1
	ldr	r3, [r7, #4]
	cmp	r3, #4096
	bne	.L218
.L217:
	movs	r3, #1
	b	.L219
.L218:
	.loc 1 955 0 discriminator 3
	movs	r3, #0
.L219:
	.loc 1 955 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 956 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	bic	r3, r3, #56
	cmp	r3, #0
	bne	.L220
	.loc 1 956 0 is_stmt 0 discriminator 1
	ldr	r3, [r7]
	cmp	r3, #0
	beq	.L220
	.loc 1 956 0 discriminator 3
	movs	r3, #1
	b	.L221
.L220:
	.loc 1 956 0 discriminator 2
	movs	r3, #0
.L221:
	.loc 1 956 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 958 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	cmp	r3, #16
	bne	.L222
	.loc 1 960 0
	ldr	r3, .L225
	ldr	r2, .L225
	ldr	r1, [r2, #4]
	ldr	r2, [r7]
	lsrs	r2, r2, #3
	mvns	r2, r2
	ands	r2, r2, r1
	str	r2, [r3, #4]
	b	.L216
.L222:
	.loc 1 962 0
	ldr	r3, [r7, #4]
	cmp	r3, #256
	bne	.L224
	.loc 1 964 0
	ldr	r3, .L225+4
	ldr	r2, .L225+4
	ldr	r1, [r2, #4]
	ldr	r2, [r7]
	lsrs	r2, r2, #3
	mvns	r2, r2
	ands	r2, r2, r1
	str	r2, [r3, #4]
	b	.L216
.L224:
	.loc 1 969 0
	ldr	r3, .L225+8
	ldr	r2, .L225+8
	ldr	r1, [r2, #4]
	ldr	r2, [r7]
	lsrs	r2, r2, #3
	mvns	r2, r2
	ands	r2, r2, r1
	str	r2, [r3, #4]
.L216:
	.loc 1 971 0
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L226:
	.align	2
.L225:
	.word	-1610612640
	.word	-1610612608
	.word	-1610612576
.LFE129:
	.size	FSMC_ClearITPendingBit, .-FSMC_ClearITPendingBit
	.section	.debug_frame,"",%progbits
.Lframe0:
	.4byte	.LECIE0-.LSCIE0
.LSCIE0:
	.4byte	0xffffffff
	.byte	0x3
	.ascii	"\000"
	.uleb128 0x1
	.sleb128 -4
	.uleb128 0xe
	.byte	0xc
	.uleb128 0xd
	.uleb128 0
	.align	2
.LECIE0:
.LSFDE0:
	.4byte	.LEFDE0-.LASFDE0
.LASFDE0:
	.4byte	.Lframe0
	.4byte	.LFB111
	.4byte	.LFE111-.LFB111
	.byte	0x4
	.4byte	.LCFI0-.LFB111
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI1-.LCFI0
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI2-.LCFI1
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE0:
.LSFDE2:
	.4byte	.LEFDE2-.LASFDE2
.LASFDE2:
	.4byte	.Lframe0
	.4byte	.LFB112
	.4byte	.LFE112-.LFB112
	.byte	0x4
	.4byte	.LCFI3-.LFB112
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI4-.LCFI3
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI5-.LCFI4
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE2:
.LSFDE4:
	.4byte	.LEFDE4-.LASFDE4
.LASFDE4:
	.4byte	.Lframe0
	.4byte	.LFB113
	.4byte	.LFE113-.LFB113
	.byte	0x4
	.4byte	.LCFI6-.LFB113
	.byte	0xe
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI7-.LCFI6
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI8-.LCFI7
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE4:
.LSFDE6:
	.4byte	.LEFDE6-.LASFDE6
.LASFDE6:
	.4byte	.Lframe0
	.4byte	.LFB114
	.4byte	.LFE114-.LFB114
	.byte	0x4
	.4byte	.LCFI9-.LFB114
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI10-.LCFI9
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI11-.LCFI10
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE6:
.LSFDE8:
	.4byte	.LEFDE8-.LASFDE8
.LASFDE8:
	.4byte	.Lframe0
	.4byte	.LFB115
	.4byte	.LFE115-.LFB115
	.byte	0x4
	.4byte	.LCFI12-.LFB115
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI13-.LCFI12
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI14-.LCFI13
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE8:
.LSFDE10:
	.4byte	.LEFDE10-.LASFDE10
.LASFDE10:
	.4byte	.Lframe0
	.4byte	.LFB116
	.4byte	.LFE116-.LFB116
	.byte	0x4
	.4byte	.LCFI15-.LFB116
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI16-.LCFI15
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.4byte	.LCFI17-.LCFI16
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE10:
.LSFDE12:
	.4byte	.LEFDE12-.LASFDE12
.LASFDE12:
	.4byte	.Lframe0
	.4byte	.LFB117
	.4byte	.LFE117-.LFB117
	.byte	0x4
	.4byte	.LCFI18-.LFB117
	.byte	0xe
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI19-.LCFI18
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI20-.LCFI19
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE12:
.LSFDE14:
	.4byte	.LEFDE14-.LASFDE14
.LASFDE14:
	.4byte	.Lframe0
	.4byte	.LFB118
	.4byte	.LFE118-.LFB118
	.byte	0x4
	.4byte	.LCFI21-.LFB118
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI22-.LCFI21
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI23-.LCFI22
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE14:
.LSFDE16:
	.4byte	.LEFDE16-.LASFDE16
.LASFDE16:
	.4byte	.Lframe0
	.4byte	.LFB119
	.4byte	.LFE119-.LFB119
	.byte	0x4
	.4byte	.LCFI24-.LFB119
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI25-.LCFI24
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI26-.LCFI25
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE16:
.LSFDE18:
	.4byte	.LEFDE18-.LASFDE18
.LASFDE18:
	.4byte	.Lframe0
	.4byte	.LFB120
	.4byte	.LFE120-.LFB120
	.byte	0x4
	.4byte	.LCFI27-.LFB120
	.byte	0xe
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI28-.LCFI27
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI29-.LCFI28
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE18:
.LSFDE20:
	.4byte	.LEFDE20-.LASFDE20
.LASFDE20:
	.4byte	.Lframe0
	.4byte	.LFB121
	.4byte	.LFE121-.LFB121
	.byte	0x4
	.4byte	.LCFI30-.LFB121
	.byte	0xe
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI31-.LCFI30
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE20:
.LSFDE22:
	.4byte	.LEFDE22-.LASFDE22
.LASFDE22:
	.4byte	.Lframe0
	.4byte	.LFB122
	.4byte	.LFE122-.LFB122
	.byte	0x4
	.4byte	.LCFI32-.LFB122
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI33-.LCFI32
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI34-.LCFI33
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE22:
.LSFDE24:
	.4byte	.LEFDE24-.LASFDE24
.LASFDE24:
	.4byte	.Lframe0
	.4byte	.LFB123
	.4byte	.LFE123-.LFB123
	.byte	0x4
	.4byte	.LCFI35-.LFB123
	.byte	0xe
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI36-.LCFI35
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI37-.LCFI36
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE24:
.LSFDE26:
	.4byte	.LEFDE26-.LASFDE26
.LASFDE26:
	.4byte	.Lframe0
	.4byte	.LFB124
	.4byte	.LFE124-.LFB124
	.byte	0x4
	.4byte	.LCFI38-.LFB124
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI39-.LCFI38
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI40-.LCFI39
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE26:
.LSFDE28:
	.4byte	.LEFDE28-.LASFDE28
.LASFDE28:
	.4byte	.Lframe0
	.4byte	.LFB125
	.4byte	.LFE125-.LFB125
	.byte	0x4
	.4byte	.LCFI41-.LFB125
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI42-.LCFI41
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI43-.LCFI42
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE28:
.LSFDE30:
	.4byte	.LEFDE30-.LASFDE30
.LASFDE30:
	.4byte	.Lframe0
	.4byte	.LFB126
	.4byte	.LFE126-.LFB126
	.byte	0x4
	.4byte	.LCFI44-.LFB126
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI45-.LCFI44
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI46-.LCFI45
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE30:
.LSFDE32:
	.4byte	.LEFDE32-.LASFDE32
.LASFDE32:
	.4byte	.Lframe0
	.4byte	.LFB127
	.4byte	.LFE127-.LFB127
	.byte	0x4
	.4byte	.LCFI47-.LFB127
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI48-.LCFI47
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI49-.LCFI48
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE32:
.LSFDE34:
	.4byte	.LEFDE34-.LASFDE34
.LASFDE34:
	.4byte	.Lframe0
	.4byte	.LFB128
	.4byte	.LFE128-.LFB128
	.byte	0x4
	.4byte	.LCFI50-.LFB128
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI51-.LCFI50
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.4byte	.LCFI52-.LCFI51
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE34:
.LSFDE36:
	.4byte	.LEFDE36-.LASFDE36
.LASFDE36:
	.4byte	.Lframe0
	.4byte	.LFB129
	.4byte	.LFE129-.LFB129
	.byte	0x4
	.4byte	.LCFI53-.LFB129
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI54-.LCFI53
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI55-.LCFI54
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE36:
	.text
.Letext0:
	.file 2 "/usr/share/crossworks_for_arm_3.3/include/stdint.h"
	.file 3 "../../../chip/stm32/stm32f407/lib/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
	.file 4 "../../../chip/stm32/stm32f407/lib/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_fsmc.h"
	.file 5 "../../../chip/stm32/stm32f407/lib/CMSIS/Include/core_cm4.h"
	.section	.debug_info,"",%progbits
.Ldebug_info0:
	.4byte	0x98a
	.2byte	0x4
	.4byte	.Ldebug_abbrev0
	.byte	0x4
	.uleb128 0x1
	.4byte	.LASF111
	.byte	0x1
	.4byte	.LASF112
	.4byte	.LASF113
	.4byte	.Ldebug_ranges0+0
	.4byte	0
	.4byte	.Ldebug_line0
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.4byte	.LASF0
	.uleb128 0x2
	.byte	0x1
	.byte	0x8
	.4byte	.LASF1
	.uleb128 0x2
	.byte	0x2
	.byte	0x5
	.4byte	.LASF2
	.uleb128 0x3
	.4byte	.LASF4
	.byte	0x2
	.byte	0x15
	.4byte	0x45
	.uleb128 0x2
	.byte	0x2
	.byte	0x7
	.4byte	.LASF3
	.uleb128 0x3
	.4byte	.LASF5
	.byte	0x2
	.byte	0x16
	.4byte	0x57
	.uleb128 0x4
	.byte	0x4
	.byte	0x5
	.ascii	"int\000"
	.uleb128 0x3
	.4byte	.LASF6
	.byte	0x2
	.byte	0x17
	.4byte	0x69
	.uleb128 0x2
	.byte	0x4
	.byte	0x7
	.4byte	.LASF7
	.uleb128 0x2
	.byte	0x8
	.byte	0x5
	.4byte	.LASF8
	.uleb128 0x2
	.byte	0x8
	.byte	0x7
	.4byte	.LASF9
	.uleb128 0x5
	.4byte	0x5e
	.4byte	0x8e
	.uleb128 0x6
	.4byte	0x8e
	.byte	0x7
	.byte	0
	.uleb128 0x2
	.byte	0x4
	.byte	0x7
	.4byte	.LASF10
	.uleb128 0x7
	.4byte	0x5e
	.uleb128 0x7
	.4byte	0x4c
	.uleb128 0x8
	.byte	0x1
	.byte	0x3
	.2byte	0x12d
	.4byte	0xb5
	.uleb128 0x9
	.4byte	.LASF11
	.sleb128 0
	.uleb128 0xa
	.ascii	"SET\000"
	.sleb128 1
	.byte	0
	.uleb128 0xb
	.4byte	.LASF12
	.byte	0x3
	.2byte	0x12d
	.4byte	0x9f
	.uleb128 0xb
	.4byte	.LASF13
	.byte	0x3
	.2byte	0x12d
	.4byte	0x9f
	.uleb128 0x8
	.byte	0x1
	.byte	0x3
	.2byte	0x12f
	.4byte	0xe3
	.uleb128 0x9
	.4byte	.LASF14
	.sleb128 0
	.uleb128 0x9
	.4byte	.LASF15
	.sleb128 1
	.byte	0
	.uleb128 0xb
	.4byte	.LASF16
	.byte	0x3
	.2byte	0x12f
	.4byte	0xcd
	.uleb128 0xc
	.byte	0x20
	.byte	0x3
	.2byte	0x264
	.4byte	0x106
	.uleb128 0xd
	.4byte	.LASF18
	.byte	0x3
	.2byte	0x266
	.4byte	0x106
	.byte	0
	.byte	0
	.uleb128 0x7
	.4byte	0x7e
	.uleb128 0xb
	.4byte	.LASF17
	.byte	0x3
	.2byte	0x267
	.4byte	0xef
	.uleb128 0xc
	.byte	0x1c
	.byte	0x3
	.2byte	0x26d
	.4byte	0x12e
	.uleb128 0xd
	.4byte	.LASF19
	.byte	0x3
	.2byte	0x26f
	.4byte	0x13e
	.byte	0
	.byte	0
	.uleb128 0x5
	.4byte	0x5e
	.4byte	0x13e
	.uleb128 0x6
	.4byte	0x8e
	.byte	0x6
	.byte	0
	.uleb128 0x7
	.4byte	0x12e
	.uleb128 0xb
	.4byte	.LASF20
	.byte	0x3
	.2byte	0x270
	.4byte	0x117
	.uleb128 0xc
	.byte	0x18
	.byte	0x3
	.2byte	0x276
	.4byte	0x1a7
	.uleb128 0xd
	.4byte	.LASF21
	.byte	0x3
	.2byte	0x278
	.4byte	0x95
	.byte	0
	.uleb128 0xe
	.ascii	"SR2\000"
	.byte	0x3
	.2byte	0x279
	.4byte	0x95
	.byte	0x4
	.uleb128 0xd
	.4byte	.LASF22
	.byte	0x3
	.2byte	0x27a
	.4byte	0x95
	.byte	0x8
	.uleb128 0xd
	.4byte	.LASF23
	.byte	0x3
	.2byte	0x27b
	.4byte	0x95
	.byte	0xc
	.uleb128 0xd
	.4byte	.LASF24
	.byte	0x3
	.2byte	0x27c
	.4byte	0x5e
	.byte	0x10
	.uleb128 0xd
	.4byte	.LASF25
	.byte	0x3
	.2byte	0x27d
	.4byte	0x95
	.byte	0x14
	.byte	0
	.uleb128 0xb
	.4byte	.LASF26
	.byte	0x3
	.2byte	0x27e
	.4byte	0x14f
	.uleb128 0xc
	.byte	0x18
	.byte	0x3
	.2byte	0x284
	.4byte	0x20b
	.uleb128 0xd
	.4byte	.LASF27
	.byte	0x3
	.2byte	0x286
	.4byte	0x95
	.byte	0
	.uleb128 0xe
	.ascii	"SR3\000"
	.byte	0x3
	.2byte	0x287
	.4byte	0x95
	.byte	0x4
	.uleb128 0xd
	.4byte	.LASF28
	.byte	0x3
	.2byte	0x288
	.4byte	0x95
	.byte	0x8
	.uleb128 0xd
	.4byte	.LASF29
	.byte	0x3
	.2byte	0x289
	.4byte	0x95
	.byte	0xc
	.uleb128 0xd
	.4byte	.LASF24
	.byte	0x3
	.2byte	0x28a
	.4byte	0x5e
	.byte	0x10
	.uleb128 0xd
	.4byte	.LASF30
	.byte	0x3
	.2byte	0x28b
	.4byte	0x95
	.byte	0x14
	.byte	0
	.uleb128 0xb
	.4byte	.LASF31
	.byte	0x3
	.2byte	0x28c
	.4byte	0x1b3
	.uleb128 0xc
	.byte	0x14
	.byte	0x3
	.2byte	0x292
	.4byte	0x262
	.uleb128 0xd
	.4byte	.LASF32
	.byte	0x3
	.2byte	0x294
	.4byte	0x95
	.byte	0
	.uleb128 0xe
	.ascii	"SR4\000"
	.byte	0x3
	.2byte	0x295
	.4byte	0x95
	.byte	0x4
	.uleb128 0xd
	.4byte	.LASF33
	.byte	0x3
	.2byte	0x296
	.4byte	0x95
	.byte	0x8
	.uleb128 0xd
	.4byte	.LASF34
	.byte	0x3
	.2byte	0x297
	.4byte	0x95
	.byte	0xc
	.uleb128 0xd
	.4byte	.LASF35
	.byte	0x3
	.2byte	0x298
	.4byte	0x95
	.byte	0x10
	.byte	0
	.uleb128 0xb
	.4byte	.LASF36
	.byte	0x3
	.2byte	0x299
	.4byte	0x217
	.uleb128 0x2
	.byte	0x4
	.byte	0x5
	.4byte	.LASF37
	.uleb128 0x2
	.byte	0x1
	.byte	0x8
	.4byte	.LASF38
	.uleb128 0xf
	.byte	0x1c
	.byte	0x4
	.byte	0x35
	.4byte	0x2d9
	.uleb128 0x10
	.4byte	.LASF39
	.byte	0x4
	.byte	0x37
	.4byte	0x5e
	.byte	0
	.uleb128 0x10
	.4byte	.LASF40
	.byte	0x4
	.byte	0x3c
	.4byte	0x5e
	.byte	0x4
	.uleb128 0x10
	.4byte	.LASF41
	.byte	0x4
	.byte	0x41
	.4byte	0x5e
	.byte	0x8
	.uleb128 0x10
	.4byte	.LASF42
	.byte	0x4
	.byte	0x46
	.4byte	0x5e
	.byte	0xc
	.uleb128 0x10
	.4byte	.LASF43
	.byte	0x4
	.byte	0x4b
	.4byte	0x5e
	.byte	0x10
	.uleb128 0x10
	.4byte	.LASF44
	.byte	0x4
	.byte	0x4f
	.4byte	0x5e
	.byte	0x14
	.uleb128 0x10
	.4byte	.LASF45
	.byte	0x4
	.byte	0x57
	.4byte	0x5e
	.byte	0x18
	.byte	0
	.uleb128 0x3
	.4byte	.LASF46
	.byte	0x4
	.byte	0x59
	.4byte	0x27c
	.uleb128 0xf
	.byte	0x3c
	.byte	0x4
	.byte	0x5e
	.4byte	0x3a1
	.uleb128 0x10
	.4byte	.LASF47
	.byte	0x4
	.byte	0x60
	.4byte	0x5e
	.byte	0
	.uleb128 0x10
	.4byte	.LASF48
	.byte	0x4
	.byte	0x63
	.4byte	0x5e
	.byte	0x4
	.uleb128 0x10
	.4byte	.LASF49
	.byte	0x4
	.byte	0x67
	.4byte	0x5e
	.byte	0x8
	.uleb128 0x10
	.4byte	.LASF50
	.byte	0x4
	.byte	0x6b
	.4byte	0x5e
	.byte	0xc
	.uleb128 0x10
	.4byte	.LASF51
	.byte	0x4
	.byte	0x6e
	.4byte	0x5e
	.byte	0x10
	.uleb128 0x10
	.4byte	.LASF52
	.byte	0x4
	.byte	0x72
	.4byte	0x5e
	.byte	0x14
	.uleb128 0x10
	.4byte	.LASF53
	.byte	0x4
	.byte	0x76
	.4byte	0x5e
	.byte	0x18
	.uleb128 0x10
	.4byte	.LASF54
	.byte	0x4
	.byte	0x7a
	.4byte	0x5e
	.byte	0x1c
	.uleb128 0x10
	.4byte	.LASF55
	.byte	0x4
	.byte	0x7e
	.4byte	0x5e
	.byte	0x20
	.uleb128 0x10
	.4byte	.LASF56
	.byte	0x4
	.byte	0x83
	.4byte	0x5e
	.byte	0x24
	.uleb128 0x10
	.4byte	.LASF57
	.byte	0x4
	.byte	0x86
	.4byte	0x5e
	.byte	0x28
	.uleb128 0x10
	.4byte	.LASF58
	.byte	0x4
	.byte	0x8a
	.4byte	0x5e
	.byte	0x2c
	.uleb128 0x10
	.4byte	.LASF59
	.byte	0x4
	.byte	0x8d
	.4byte	0x5e
	.byte	0x30
	.uleb128 0x10
	.4byte	.LASF60
	.byte	0x4
	.byte	0x90
	.4byte	0x3a1
	.byte	0x34
	.uleb128 0x10
	.4byte	.LASF61
	.byte	0x4
	.byte	0x92
	.4byte	0x3a1
	.byte	0x38
	.byte	0
	.uleb128 0x11
	.byte	0x4
	.4byte	0x2d9
	.uleb128 0x3
	.4byte	.LASF62
	.byte	0x4
	.byte	0x93
	.4byte	0x2e4
	.uleb128 0xf
	.byte	0x10
	.byte	0x4
	.byte	0x98
	.4byte	0x3eb
	.uleb128 0x10
	.4byte	.LASF63
	.byte	0x4
	.byte	0x9a
	.4byte	0x5e
	.byte	0
	.uleb128 0x10
	.4byte	.LASF64
	.byte	0x4
	.byte	0xa0
	.4byte	0x5e
	.byte	0x4
	.uleb128 0x10
	.4byte	.LASF65
	.byte	0x4
	.byte	0xa6
	.4byte	0x5e
	.byte	0x8
	.uleb128 0x10
	.4byte	.LASF66
	.byte	0x4
	.byte	0xad
	.4byte	0x5e
	.byte	0xc
	.byte	0
	.uleb128 0x3
	.4byte	.LASF67
	.byte	0x4
	.byte	0xb2
	.4byte	0x3b2
	.uleb128 0xf
	.byte	0x24
	.byte	0x4
	.byte	0xb7
	.4byte	0x46b
	.uleb128 0x10
	.4byte	.LASF47
	.byte	0x4
	.byte	0xb9
	.4byte	0x5e
	.byte	0
	.uleb128 0x10
	.4byte	.LASF68
	.byte	0x4
	.byte	0xbc
	.4byte	0x5e
	.byte	0x4
	.uleb128 0x10
	.4byte	.LASF50
	.byte	0x4
	.byte	0xbf
	.4byte	0x5e
	.byte	0x8
	.uleb128 0x10
	.4byte	.LASF69
	.byte	0x4
	.byte	0xc2
	.4byte	0x5e
	.byte	0xc
	.uleb128 0x10
	.4byte	.LASF70
	.byte	0x4
	.byte	0xc5
	.4byte	0x5e
	.byte	0x10
	.uleb128 0x10
	.4byte	.LASF71
	.byte	0x4
	.byte	0xc8
	.4byte	0x5e
	.byte	0x14
	.uleb128 0x10
	.4byte	.LASF72
	.byte	0x4
	.byte	0xcc
	.4byte	0x5e
	.byte	0x18
	.uleb128 0x10
	.4byte	.LASF73
	.byte	0x4
	.byte	0xd0
	.4byte	0x46b
	.byte	0x1c
	.uleb128 0x10
	.4byte	.LASF74
	.byte	0x4
	.byte	0xd2
	.4byte	0x46b
	.byte	0x20
	.byte	0
	.uleb128 0x11
	.byte	0x4
	.4byte	0x3eb
	.uleb128 0x3
	.4byte	.LASF75
	.byte	0x4
	.byte	0xd3
	.4byte	0x3f6
	.uleb128 0xf
	.byte	0x18
	.byte	0x4
	.byte	0xd9
	.4byte	0x4cd
	.uleb128 0x10
	.4byte	.LASF68
	.byte	0x4
	.byte	0xdb
	.4byte	0x5e
	.byte	0
	.uleb128 0x10
	.4byte	.LASF71
	.byte	0x4
	.byte	0xde
	.4byte	0x5e
	.byte	0x4
	.uleb128 0x10
	.4byte	.LASF72
	.byte	0x4
	.byte	0xe2
	.4byte	0x5e
	.byte	0x8
	.uleb128 0x10
	.4byte	.LASF73
	.byte	0x4
	.byte	0xe7
	.4byte	0x46b
	.byte	0xc
	.uleb128 0x10
	.4byte	.LASF74
	.byte	0x4
	.byte	0xe9
	.4byte	0x46b
	.byte	0x10
	.uleb128 0x10
	.4byte	.LASF76
	.byte	0x4
	.byte	0xeb
	.4byte	0x46b
	.byte	0x14
	.byte	0
	.uleb128 0x3
	.4byte	.LASF77
	.byte	0x4
	.byte	0xec
	.4byte	0x47c
	.uleb128 0x12
	.4byte	.LASF78
	.byte	0x1
	.byte	0x79
	.4byte	.LFB111
	.4byte	.LFE111-.LFB111
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x509
	.uleb128 0x13
	.4byte	.LASF47
	.byte	0x1
	.byte	0x79
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x14
	.4byte	.LASF81
	.byte	0x1
	.byte	0x7c
	.4byte	0x57
	.uleb128 0x15
	.byte	0
	.byte	0
	.uleb128 0x12
	.4byte	.LASF79
	.byte	0x1
	.byte	0x94
	.4byte	.LFB112
	.4byte	.LFE112-.LFB112
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x53a
	.uleb128 0x13
	.4byte	.LASF80
	.byte	0x1
	.byte	0x94
	.4byte	0x53a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x14
	.4byte	.LASF81
	.byte	0x1
	.byte	0x7c
	.4byte	0x57
	.uleb128 0x15
	.byte	0
	.byte	0
	.uleb128 0x11
	.byte	0x4
	.4byte	0x3a7
	.uleb128 0x16
	.4byte	.LASF82
	.byte	0x1
	.byte	0xe6
	.4byte	.LFB113
	.4byte	.LFE113-.LFB113
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x564
	.uleb128 0x13
	.4byte	.LASF80
	.byte	0x1
	.byte	0xe6
	.4byte	0x53a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0x17
	.4byte	.LASF83
	.byte	0x1
	.2byte	0x111
	.4byte	.LFB114
	.4byte	.LFE114-.LFB114
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x5a6
	.uleb128 0x18
	.4byte	.LASF47
	.byte	0x1
	.2byte	0x111
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x18
	.4byte	.LASF84
	.byte	0x1
	.2byte	0x111
	.4byte	0xe3
	.uleb128 0x2
	.byte	0x91
	.sleb128 -13
	.uleb128 0x14
	.4byte	.LASF81
	.byte	0x1
	.byte	0x7c
	.4byte	0x57
	.uleb128 0x15
	.byte	0
	.byte	0
	.uleb128 0x17
	.4byte	.LASF85
	.byte	0x1
	.2byte	0x15a
	.4byte	.LFB115
	.4byte	.LFE115-.LFB115
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x5d9
	.uleb128 0x18
	.4byte	.LASF47
	.byte	0x1
	.2byte	0x15a
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x14
	.4byte	.LASF81
	.byte	0x1
	.byte	0x7c
	.4byte	0x57
	.uleb128 0x15
	.byte	0
	.byte	0
	.uleb128 0x17
	.4byte	.LASF86
	.byte	0x1
	.2byte	0x179
	.4byte	.LFB116
	.4byte	.LFE116-.LFB116
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x639
	.uleb128 0x18
	.4byte	.LASF87
	.byte	0x1
	.2byte	0x179
	.4byte	0x639
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x19
	.4byte	.LASF88
	.byte	0x1
	.2byte	0x17b
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x19
	.4byte	.LASF89
	.byte	0x1
	.2byte	0x17b
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x19
	.4byte	.LASF90
	.byte	0x1
	.2byte	0x17b
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x14
	.4byte	.LASF81
	.byte	0x1
	.byte	0x7c
	.4byte	0x57
	.uleb128 0x15
	.byte	0
	.byte	0
	.uleb128 0x11
	.byte	0x4
	.4byte	0x471
	.uleb128 0x1a
	.4byte	.LASF91
	.byte	0x1
	.2byte	0x1ba
	.4byte	.LFB117
	.4byte	.LFE117-.LFB117
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x665
	.uleb128 0x18
	.4byte	.LASF87
	.byte	0x1
	.2byte	0x1ba
	.4byte	0x639
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0x17
	.4byte	.LASF92
	.byte	0x1
	.2byte	0x1d7
	.4byte	.LFB118
	.4byte	.LFE118-.LFB118
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x6a7
	.uleb128 0x18
	.4byte	.LASF47
	.byte	0x1
	.2byte	0x1d7
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x18
	.4byte	.LASF84
	.byte	0x1
	.2byte	0x1d7
	.4byte	0xe3
	.uleb128 0x2
	.byte	0x91
	.sleb128 -13
	.uleb128 0x14
	.4byte	.LASF81
	.byte	0x1
	.byte	0x7c
	.4byte	0x57
	.uleb128 0x15
	.byte	0
	.byte	0
	.uleb128 0x17
	.4byte	.LASF93
	.byte	0x1
	.2byte	0x1ff
	.4byte	.LFB119
	.4byte	.LFE119-.LFB119
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x6e9
	.uleb128 0x18
	.4byte	.LASF47
	.byte	0x1
	.2byte	0x1ff
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x18
	.4byte	.LASF84
	.byte	0x1
	.2byte	0x1ff
	.4byte	0xe3
	.uleb128 0x2
	.byte	0x91
	.sleb128 -13
	.uleb128 0x14
	.4byte	.LASF81
	.byte	0x1
	.byte	0x7c
	.4byte	0x57
	.uleb128 0x15
	.byte	0
	.byte	0
	.uleb128 0x1b
	.4byte	.LASF101
	.byte	0x1
	.2byte	0x226
	.4byte	0x5e
	.4byte	.LFB120
	.4byte	.LFE120-.LFB120
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x722
	.uleb128 0x18
	.4byte	.LASF47
	.byte	0x1
	.2byte	0x226
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x19
	.4byte	.LASF94
	.byte	0x1
	.2byte	0x228
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0x1c
	.4byte	.LASF114
	.byte	0x1
	.2byte	0x266
	.4byte	.LFB121
	.4byte	.LFE121-.LFB121
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x17
	.4byte	.LASF95
	.byte	0x1
	.2byte	0x277
	.4byte	.LFB122
	.4byte	.LFE122-.LFB122
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x767
	.uleb128 0x18
	.4byte	.LASF96
	.byte	0x1
	.2byte	0x277
	.4byte	0x767
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x14
	.4byte	.LASF81
	.byte	0x1
	.byte	0x7c
	.4byte	0x57
	.uleb128 0x15
	.byte	0
	.byte	0
	.uleb128 0x11
	.byte	0x4
	.4byte	0x4cd
	.uleb128 0x1a
	.4byte	.LASF97
	.byte	0x1
	.2byte	0x2ab
	.4byte	.LFB123
	.4byte	.LFE123-.LFB123
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x793
	.uleb128 0x18
	.4byte	.LASF96
	.byte	0x1
	.2byte	0x2ab
	.4byte	0x767
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0x17
	.4byte	.LASF98
	.byte	0x1
	.2byte	0x2c5
	.4byte	.LFB124
	.4byte	.LFE124-.LFB124
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x7c6
	.uleb128 0x18
	.4byte	.LASF84
	.byte	0x1
	.2byte	0x2c5
	.4byte	0xe3
	.uleb128 0x2
	.byte	0x91
	.sleb128 -9
	.uleb128 0x14
	.4byte	.LASF81
	.byte	0x1
	.byte	0x7c
	.4byte	0x57
	.uleb128 0x15
	.byte	0
	.byte	0
	.uleb128 0x17
	.4byte	.LASF99
	.byte	0x1
	.2byte	0x2f4
	.4byte	.LFB125
	.4byte	.LFE125-.LFB125
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x817
	.uleb128 0x18
	.4byte	.LASF47
	.byte	0x1
	.2byte	0x2f4
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x18
	.4byte	.LASF100
	.byte	0x1
	.2byte	0x2f4
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x18
	.4byte	.LASF84
	.byte	0x1
	.2byte	0x2f4
	.4byte	0xe3
	.uleb128 0x2
	.byte	0x91
	.sleb128 -17
	.uleb128 0x14
	.4byte	.LASF81
	.byte	0x1
	.byte	0x7c
	.4byte	0x57
	.uleb128 0x15
	.byte	0
	.byte	0
	.uleb128 0x1d
	.4byte	.LASF102
	.byte	0x1
	.2byte	0x330
	.4byte	0xb5
	.4byte	.LFB126
	.4byte	.LFE126-.LFB126
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x87b
	.uleb128 0x18
	.4byte	.LASF47
	.byte	0x1
	.2byte	0x330
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x18
	.4byte	.LASF103
	.byte	0x1
	.2byte	0x330
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x19
	.4byte	.LASF104
	.byte	0x1
	.2byte	0x332
	.4byte	0xb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -9
	.uleb128 0x19
	.4byte	.LASF105
	.byte	0x1
	.2byte	0x333
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x14
	.4byte	.LASF81
	.byte	0x1
	.byte	0x7c
	.4byte	0x57
	.uleb128 0x15
	.byte	0
	.byte	0
	.uleb128 0x17
	.4byte	.LASF106
	.byte	0x1
	.2byte	0x362
	.4byte	.LFB127
	.4byte	.LFE127-.LFB127
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x8bd
	.uleb128 0x18
	.4byte	.LASF47
	.byte	0x1
	.2byte	0x362
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x18
	.4byte	.LASF103
	.byte	0x1
	.2byte	0x362
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x14
	.4byte	.LASF81
	.byte	0x1
	.byte	0x7c
	.4byte	0x57
	.uleb128 0x15
	.byte	0
	.byte	0
	.uleb128 0x1d
	.4byte	.LASF107
	.byte	0x1
	.2byte	0x385
	.4byte	0xc1
	.4byte	.LFB128
	.4byte	.LFE128-.LFB128
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x93f
	.uleb128 0x18
	.4byte	.LASF47
	.byte	0x1
	.2byte	0x385
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x18
	.4byte	.LASF100
	.byte	0x1
	.2byte	0x385
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x19
	.4byte	.LASF104
	.byte	0x1
	.2byte	0x387
	.4byte	0xc1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -9
	.uleb128 0x19
	.4byte	.LASF105
	.byte	0x1
	.2byte	0x388
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x19
	.4byte	.LASF108
	.byte	0x1
	.2byte	0x388
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x19
	.4byte	.LASF109
	.byte	0x1
	.2byte	0x388
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x14
	.4byte	.LASF81
	.byte	0x1
	.byte	0x7c
	.4byte	0x57
	.uleb128 0x15
	.byte	0
	.byte	0
	.uleb128 0x17
	.4byte	.LASF110
	.byte	0x1
	.2byte	0x3b8
	.4byte	.LFB129
	.4byte	.LFE129-.LFB129
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x981
	.uleb128 0x18
	.4byte	.LASF47
	.byte	0x1
	.2byte	0x3b8
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x18
	.4byte	.LASF100
	.byte	0x1
	.2byte	0x3b8
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x14
	.4byte	.LASF81
	.byte	0x1
	.byte	0x7c
	.4byte	0x57
	.uleb128 0x15
	.byte	0
	.byte	0
	.uleb128 0x1e
	.4byte	.LASF115
	.byte	0x5
	.2byte	0x698
	.4byte	0x9a
	.byte	0
	.section	.debug_abbrev,"",%progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0xe
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1b
	.uleb128 0xe
	.uleb128 0x55
	.uleb128 0x17
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x35
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0x4
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1c
	.uleb128 0xd
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x1c
	.uleb128 0xd
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x15
	.uleb128 0x18
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x16
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x17
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x18
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x19
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x1a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1c
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x1d
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1e
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_aranges,"",%progbits
	.4byte	0xac
	.2byte	0x2
	.4byte	.Ldebug_info0
	.byte	0x4
	.byte	0
	.2byte	0
	.2byte	0
	.4byte	.LFB111
	.4byte	.LFE111-.LFB111
	.4byte	.LFB112
	.4byte	.LFE112-.LFB112
	.4byte	.LFB113
	.4byte	.LFE113-.LFB113
	.4byte	.LFB114
	.4byte	.LFE114-.LFB114
	.4byte	.LFB115
	.4byte	.LFE115-.LFB115
	.4byte	.LFB116
	.4byte	.LFE116-.LFB116
	.4byte	.LFB117
	.4byte	.LFE117-.LFB117
	.4byte	.LFB118
	.4byte	.LFE118-.LFB118
	.4byte	.LFB119
	.4byte	.LFE119-.LFB119
	.4byte	.LFB120
	.4byte	.LFE120-.LFB120
	.4byte	.LFB121
	.4byte	.LFE121-.LFB121
	.4byte	.LFB122
	.4byte	.LFE122-.LFB122
	.4byte	.LFB123
	.4byte	.LFE123-.LFB123
	.4byte	.LFB124
	.4byte	.LFE124-.LFB124
	.4byte	.LFB125
	.4byte	.LFE125-.LFB125
	.4byte	.LFB126
	.4byte	.LFE126-.LFB126
	.4byte	.LFB127
	.4byte	.LFE127-.LFB127
	.4byte	.LFB128
	.4byte	.LFE128-.LFB128
	.4byte	.LFB129
	.4byte	.LFE129-.LFB129
	.4byte	0
	.4byte	0
	.section	.debug_ranges,"",%progbits
.Ldebug_ranges0:
	.4byte	.LFB111
	.4byte	.LFE111
	.4byte	.LFB112
	.4byte	.LFE112
	.4byte	.LFB113
	.4byte	.LFE113
	.4byte	.LFB114
	.4byte	.LFE114
	.4byte	.LFB115
	.4byte	.LFE115
	.4byte	.LFB116
	.4byte	.LFE116
	.4byte	.LFB117
	.4byte	.LFE117
	.4byte	.LFB118
	.4byte	.LFE118
	.4byte	.LFB119
	.4byte	.LFE119
	.4byte	.LFB120
	.4byte	.LFE120
	.4byte	.LFB121
	.4byte	.LFE121
	.4byte	.LFB122
	.4byte	.LFE122
	.4byte	.LFB123
	.4byte	.LFE123
	.4byte	.LFB124
	.4byte	.LFE124
	.4byte	.LFB125
	.4byte	.LFE125
	.4byte	.LFB126
	.4byte	.LFE126
	.4byte	.LFB127
	.4byte	.LFE127
	.4byte	.LFB128
	.4byte	.LFE128
	.4byte	.LFB129
	.4byte	.LFE129
	.4byte	0
	.4byte	0
	.section	.debug_line,"",%progbits
.Ldebug_line0:
	.section	.debug_str,"MS",%progbits,1
.LASF6:
	.ascii	"uint32_t\000"
.LASF55:
	.ascii	"FSMC_WaitSignalActive\000"
.LASF39:
	.ascii	"FSMC_AddressSetupTime\000"
.LASF107:
	.ascii	"FSMC_GetITStatus\000"
.LASF68:
	.ascii	"FSMC_Waitfeature\000"
.LASF70:
	.ascii	"FSMC_ECCPageSize\000"
.LASF73:
	.ascii	"FSMC_CommonSpaceTimingStruct\000"
.LASF47:
	.ascii	"FSMC_Bank\000"
.LASF65:
	.ascii	"FSMC_HoldSetupTime\000"
.LASF10:
	.ascii	"sizetype\000"
.LASF64:
	.ascii	"FSMC_WaitSetupTime\000"
.LASF100:
	.ascii	"FSMC_IT\000"
.LASF54:
	.ascii	"FSMC_WrapMode\000"
.LASF86:
	.ascii	"FSMC_NANDInit\000"
.LASF42:
	.ascii	"FSMC_BusTurnAroundDuration\000"
.LASF52:
	.ascii	"FSMC_AsynchronousWait\000"
.LASF71:
	.ascii	"FSMC_TCLRSetupTime\000"
.LASF12:
	.ascii	"FlagStatus\000"
.LASF96:
	.ascii	"FSMC_PCCARDInitStruct\000"
.LASF49:
	.ascii	"FSMC_MemoryType\000"
.LASF88:
	.ascii	"tmppcr\000"
.LASF2:
	.ascii	"short int\000"
.LASF101:
	.ascii	"FSMC_GetECC\000"
.LASF20:
	.ascii	"FSMC_Bank1E_TypeDef\000"
.LASF77:
	.ascii	"FSMC_PCCARDInitTypeDef\000"
.LASF72:
	.ascii	"FSMC_TARSetupTime\000"
.LASF35:
	.ascii	"PIO4\000"
.LASF81:
	.ascii	"assert_param\000"
.LASF92:
	.ascii	"FSMC_NANDCmd\000"
.LASF18:
	.ascii	"BTCR\000"
.LASF103:
	.ascii	"FSMC_FLAG\000"
.LASF78:
	.ascii	"FSMC_NORSRAMDeInit\000"
.LASF89:
	.ascii	"tmppmem\000"
.LASF14:
	.ascii	"DISABLE\000"
.LASF111:
	.ascii	"GNU C 4.8.4 20140725 (release) [ARM/embedded-4_8-br"
	.ascii	"anch revision 213147] -fmessage-length=0 -mtp=soft "
	.ascii	"-mcpu=cortex-m4 -mlittle-endian -mfloat-abi=softfp "
	.ascii	"-mfpu=fpv4-sp-d16 -mthumb -g2 -std=gnu99 -fno-dwarf"
	.ascii	"2-cfi-asm -fno-builtin -ffunction-sections -fdata-s"
	.ascii	"ections -fshort-double -fshort-enums -fno-common\000"
.LASF67:
	.ascii	"FSMC_NAND_PCCARDTimingInitTypeDef\000"
.LASF99:
	.ascii	"FSMC_ITConfig\000"
.LASF8:
	.ascii	"long long int\000"
.LASF27:
	.ascii	"PCR3\000"
.LASF50:
	.ascii	"FSMC_MemoryDataWidth\000"
.LASF45:
	.ascii	"FSMC_AccessMode\000"
.LASF13:
	.ascii	"ITStatus\000"
.LASF37:
	.ascii	"long int\000"
.LASF36:
	.ascii	"FSMC_Bank4_TypeDef\000"
.LASF87:
	.ascii	"FSMC_NANDInitStruct\000"
.LASF40:
	.ascii	"FSMC_AddressHoldTime\000"
.LASF63:
	.ascii	"FSMC_SetupTime\000"
.LASF104:
	.ascii	"bitstatus\000"
.LASF57:
	.ascii	"FSMC_WaitSignal\000"
.LASF110:
	.ascii	"FSMC_ClearITPendingBit\000"
.LASF91:
	.ascii	"FSMC_NANDStructInit\000"
.LASF84:
	.ascii	"NewState\000"
.LASF44:
	.ascii	"FSMC_DataLatency\000"
.LASF97:
	.ascii	"FSMC_PCCARDStructInit\000"
.LASF1:
	.ascii	"unsigned char\000"
.LASF46:
	.ascii	"FSMC_NORSRAMTimingInitTypeDef\000"
.LASF69:
	.ascii	"FSMC_ECC\000"
.LASF95:
	.ascii	"FSMC_PCCARDInit\000"
.LASF0:
	.ascii	"signed char\000"
.LASF9:
	.ascii	"long long unsigned int\000"
.LASF51:
	.ascii	"FSMC_BurstAccessMode\000"
.LASF58:
	.ascii	"FSMC_ExtendedMode\000"
.LASF7:
	.ascii	"unsigned int\000"
.LASF56:
	.ascii	"FSMC_WriteOperation\000"
.LASF26:
	.ascii	"FSMC_Bank2_TypeDef\000"
.LASF102:
	.ascii	"FSMC_GetFlagStatus\000"
.LASF41:
	.ascii	"FSMC_DataSetupTime\000"
.LASF113:
	.ascii	"/home/mike/Documents/caribou-rtos/branches/0.9/cari"
	.ascii	"bou/target/board/xcore407i/crossworks\000"
.LASF60:
	.ascii	"FSMC_ReadWriteTimingStruct\000"
.LASF76:
	.ascii	"FSMC_IOSpaceTimingStruct\000"
.LASF66:
	.ascii	"FSMC_HiZSetupTime\000"
.LASF114:
	.ascii	"FSMC_PCCARDDeInit\000"
.LASF98:
	.ascii	"FSMC_PCCARDCmd\000"
.LASF83:
	.ascii	"FSMC_NORSRAMCmd\000"
.LASF38:
	.ascii	"char\000"
.LASF4:
	.ascii	"uint16_t\000"
.LASF82:
	.ascii	"FSMC_NORSRAMStructInit\000"
.LASF31:
	.ascii	"FSMC_Bank3_TypeDef\000"
.LASF62:
	.ascii	"FSMC_NORSRAMInitTypeDef\000"
.LASF5:
	.ascii	"int32_t\000"
.LASF105:
	.ascii	"tmpsr\000"
.LASF94:
	.ascii	"eccval\000"
.LASF90:
	.ascii	"tmppatt\000"
.LASF109:
	.ascii	"itenable\000"
.LASF93:
	.ascii	"FSMC_NANDECCCmd\000"
.LASF80:
	.ascii	"FSMC_NORSRAMInitStruct\000"
.LASF112:
	.ascii	"/home/mike/Documents/caribou-rtos/branches/0.9/cari"
	.ascii	"bou/target/board/xcore407i/crossworks/../../../chip"
	.ascii	"/stm32/stm32f407/lib/STM32F4xx_StdPeriph_Driver/src"
	.ascii	"/stm32f4xx_fsmc.c\000"
.LASF24:
	.ascii	"RESERVED0\000"
.LASF21:
	.ascii	"PCR2\000"
.LASF48:
	.ascii	"FSMC_DataAddressMux\000"
.LASF32:
	.ascii	"PCR4\000"
.LASF85:
	.ascii	"FSMC_NANDDeInit\000"
.LASF59:
	.ascii	"FSMC_WriteBurst\000"
.LASF16:
	.ascii	"FunctionalState\000"
.LASF3:
	.ascii	"short unsigned int\000"
.LASF61:
	.ascii	"FSMC_WriteTimingStruct\000"
.LASF43:
	.ascii	"FSMC_CLKDivision\000"
.LASF22:
	.ascii	"PMEM2\000"
.LASF28:
	.ascii	"PMEM3\000"
.LASF33:
	.ascii	"PMEM4\000"
.LASF11:
	.ascii	"RESET\000"
.LASF23:
	.ascii	"PATT2\000"
.LASF29:
	.ascii	"PATT3\000"
.LASF34:
	.ascii	"PATT4\000"
.LASF79:
	.ascii	"FSMC_NORSRAMInit\000"
.LASF75:
	.ascii	"FSMC_NANDInitTypeDef\000"
.LASF74:
	.ascii	"FSMC_AttributeSpaceTimingStruct\000"
.LASF17:
	.ascii	"FSMC_Bank1_TypeDef\000"
.LASF19:
	.ascii	"BWTR\000"
.LASF115:
	.ascii	"ITM_RxBuffer\000"
.LASF25:
	.ascii	"ECCR2\000"
.LASF30:
	.ascii	"ECCR3\000"
.LASF106:
	.ascii	"FSMC_ClearFlag\000"
.LASF53:
	.ascii	"FSMC_WaitSignalPolarity\000"
.LASF15:
	.ascii	"ENABLE\000"
.LASF108:
	.ascii	"itstatus\000"
	.ident	"GCC: (GNU) 4.8.4 20140725 (release) [ARM/embedded-4_8-branch revision 213147]"
