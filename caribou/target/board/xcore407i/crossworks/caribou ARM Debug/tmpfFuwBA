	.syntax unified
	.cpu cortex-m4
	.eabi_attribute 27, 3
	.fpu fpv4-sp-d16
	.eabi_attribute 20, 1
	.eabi_attribute 21, 1
	.eabi_attribute 23, 3
	.eabi_attribute 24, 1
	.eabi_attribute 25, 1
	.eabi_attribute 26, 1
	.eabi_attribute 30, 6
	.eabi_attribute 34, 1
	.eabi_attribute 18, 4
	.thumb
	.file	"stm32f4xx_dcmi.c"
	.text
.Ltext0:
	.section	.text.DCMI_DeInit,"ax",%progbits
	.align	2
	.global	DCMI_DeInit
	.thumb
	.thumb_func
	.type	DCMI_DeInit, %function
DCMI_DeInit:
.LFB111:
	.file 1 "/home/mike/Documents/caribou-rtos/branches/0.9/caribou/target/board/xcore407i/crossworks/../../../chip/stm32/stm32f407/lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c"
	.loc 1 127 0
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7}
.LCFI0:
	add	r7, sp, #0
.LCFI1:
	.loc 1 128 0
	ldr	r3, .L2
	movs	r2, #0
	str	r2, [r3]
	.loc 1 129 0
	ldr	r3, .L2
	movs	r2, #0
	str	r2, [r3, #12]
	.loc 1 130 0
	ldr	r3, .L2
	movs	r2, #31
	str	r2, [r3, #20]
	.loc 1 131 0
	ldr	r3, .L2
	movs	r2, #0
	str	r2, [r3, #24]
	.loc 1 132 0
	ldr	r3, .L2
	movs	r2, #0
	str	r2, [r3, #28]
	.loc 1 133 0
	ldr	r3, .L2
	movs	r2, #0
	str	r2, [r3, #32]
	.loc 1 134 0
	ldr	r3, .L2
	movs	r2, #0
	str	r2, [r3, #36]
	.loc 1 135 0
	mov	sp, r7
	@ sp needed
	ldr	r7, [sp], #4
	bx	lr
.L3:
	.align	2
.L2:
	.word	1342504960
.LFE111:
	.size	DCMI_DeInit, .-DCMI_DeInit
	.section	.text.DCMI_Init,"ax",%progbits
	.align	2
	.global	DCMI_Init
	.thumb
	.thumb_func
	.type	DCMI_Init, %function
DCMI_Init:
.LFB112:
	.loc 1 144 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI2:
	sub	sp, sp, #16
.LCFI3:
	add	r7, sp, #0
.LCFI4:
	str	r0, [r7, #4]
	.loc 1 145 0
	movs	r3, #0
	str	r3, [r7, #12]
	.loc 1 148 0
	ldr	r3, [r7, #4]
	ldrh	r3, [r3]
	cmp	r3, #0
	beq	.L5
	.loc 1 148 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	ldrh	r3, [r3]
	cmp	r3, #2
	bne	.L6
.L5:
	.loc 1 148 0 discriminator 1
	movs	r3, #1
	b	.L7
.L6:
	.loc 1 148 0 discriminator 3
	movs	r3, #0
.L7:
	.loc 1 148 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 149 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #2]
	cmp	r3, #0
	beq	.L8
	.loc 1 149 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #2]
	cmp	r3, #16
	bne	.L9
.L8:
	.loc 1 149 0 discriminator 1
	movs	r3, #1
	b	.L10
.L9:
	.loc 1 149 0 discriminator 3
	movs	r3, #0
.L10:
	.loc 1 149 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 150 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #4]
	cmp	r3, #0
	beq	.L11
	.loc 1 150 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #4]
	cmp	r3, #32
	bne	.L12
.L11:
	.loc 1 150 0 discriminator 1
	movs	r3, #1
	b	.L13
.L12:
	.loc 1 150 0 discriminator 3
	movs	r3, #0
.L13:
	.loc 1 150 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 151 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #6]
	cmp	r3, #0
	beq	.L14
	.loc 1 151 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #6]
	cmp	r3, #128
	bne	.L15
.L14:
	.loc 1 151 0 discriminator 1
	movs	r3, #1
	b	.L16
.L15:
	.loc 1 151 0 discriminator 3
	movs	r3, #0
.L16:
	.loc 1 151 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 152 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #8]
	cmp	r3, #0
	beq	.L17
	.loc 1 152 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #8]
	cmp	r3, #64
	bne	.L18
.L17:
	.loc 1 152 0 discriminator 1
	movs	r3, #1
	b	.L19
.L18:
	.loc 1 152 0 discriminator 3
	movs	r3, #0
.L19:
	.loc 1 152 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 153 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #10]
	cmp	r3, #0
	beq	.L20
	.loc 1 153 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #10]
	cmp	r3, #256
	beq	.L20
	.loc 1 153 0 discriminator 1
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #10]
	cmp	r3, #512
	bne	.L21
.L20:
	movs	r3, #1
	b	.L22
.L21:
	.loc 1 153 0 discriminator 3
	movs	r3, #0
.L22:
	.loc 1 153 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 154 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #12]
	cmp	r3, #0
	beq	.L23
	.loc 1 154 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #12]
	cmp	r3, #1024
	beq	.L23
	.loc 1 154 0 discriminator 1
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #12]
	cmp	r3, #2048
	beq	.L23
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #12]
	cmp	r3, #3072
	bne	.L24
.L23:
	movs	r3, #1
	b	.L25
.L24:
	.loc 1 154 0 discriminator 3
	movs	r3, #0
.L25:
	.loc 1 154 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 158 0 is_stmt 1 discriminator 4
	ldr	r2, .L26
	ldr	r3, .L26
	ldr	r3, [r3]
	bic	r3, r3, #16384
	bic	r3, r3, #1
	str	r3, [r2]
	.loc 1 161 0 discriminator 4
	ldr	r3, .L26
	ldr	r3, [r3]
	str	r3, [r7, #12]
	.loc 1 163 0 discriminator 4
	ldr	r3, [r7, #12]
	bic	r3, r3, #4080
	bic	r3, r3, #2
	str	r3, [r7, #12]
	.loc 1 168 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r2, [r3]
	.loc 1 169 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #2]
	.loc 1 173 0 discriminator 4
	orrs	r3, r3, r2
	uxth	r2, r3
	.loc 1 170 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #4]
	.loc 1 173 0 discriminator 4
	orrs	r3, r3, r2
	uxth	r2, r3
	.loc 1 171 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #6]
	.loc 1 173 0 discriminator 4
	orrs	r3, r3, r2
	uxth	r2, r3
	.loc 1 172 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #8]
	.loc 1 173 0 discriminator 4
	orrs	r3, r3, r2
	uxth	r2, r3
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #10]
	orrs	r3, r3, r2
	uxth	r2, r3
	.loc 1 174 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #12]
	.loc 1 173 0 discriminator 4
	orrs	r3, r3, r2
	uxth	r3, r3
	.loc 1 168 0 discriminator 4
	ldr	r2, [r7, #12]
	orrs	r3, r3, r2
	str	r3, [r7, #12]
	.loc 1 176 0 discriminator 4
	ldr	r3, .L26
	ldr	r2, [r7, #12]
	str	r2, [r3]
	.loc 1 177 0 discriminator 4
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L27:
	.align	2
.L26:
	.word	1342504960
.LFE112:
	.size	DCMI_Init, .-DCMI_Init
	.section	.text.DCMI_StructInit,"ax",%progbits
	.align	2
	.global	DCMI_StructInit
	.thumb
	.thumb_func
	.type	DCMI_StructInit, %function
DCMI_StructInit:
.LFB113:
	.loc 1 186 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7}
.LCFI5:
	sub	sp, sp, #12
.LCFI6:
	add	r7, sp, #0
.LCFI7:
	str	r0, [r7, #4]
	.loc 1 188 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	strh	r2, [r3]	@ movhi
	.loc 1 189 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	strh	r2, [r3, #2]	@ movhi
	.loc 1 190 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	strh	r2, [r3, #4]	@ movhi
	.loc 1 191 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	strh	r2, [r3, #6]	@ movhi
	.loc 1 192 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	strh	r2, [r3, #8]	@ movhi
	.loc 1 193 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	strh	r2, [r3, #10]	@ movhi
	.loc 1 194 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	strh	r2, [r3, #12]	@ movhi
	.loc 1 195 0
	adds	r7, r7, #12
	mov	sp, r7
	@ sp needed
	ldr	r7, [sp], #4
	bx	lr
.LFE113:
	.size	DCMI_StructInit, .-DCMI_StructInit
	.section	.text.DCMI_CROPConfig,"ax",%progbits
	.align	2
	.global	DCMI_CROPConfig
	.thumb
	.thumb_func
	.type	DCMI_CROPConfig, %function
DCMI_CROPConfig:
.LFB114:
	.loc 1 206 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7}
.LCFI8:
	sub	sp, sp, #12
.LCFI9:
	add	r7, sp, #0
.LCFI10:
	str	r0, [r7, #4]
	.loc 1 208 0
	ldr	r3, .L30
	ldr	r2, [r7, #4]
	ldrh	r2, [r2, #2]
	mov	r1, r2
	.loc 1 209 0
	ldr	r2, [r7, #4]
	ldrh	r2, [r2]
	lsls	r2, r2, #16
	.loc 1 208 0
	orrs	r2, r2, r1
	str	r2, [r3, #32]
	.loc 1 212 0
	ldr	r3, .L30
	ldr	r2, [r7, #4]
	ldrh	r2, [r2, #6]
	mov	r1, r2
	.loc 1 213 0
	ldr	r2, [r7, #4]
	ldrh	r2, [r2, #4]
	lsls	r2, r2, #16
	.loc 1 212 0
	orrs	r2, r2, r1
	str	r2, [r3, #36]
	.loc 1 214 0
	adds	r7, r7, #12
	mov	sp, r7
	@ sp needed
	ldr	r7, [sp], #4
	bx	lr
.L31:
	.align	2
.L30:
	.word	1342504960
.LFE114:
	.size	DCMI_CROPConfig, .-DCMI_CROPConfig
	.section	.text.DCMI_CROPCmd,"ax",%progbits
	.align	2
	.global	DCMI_CROPCmd
	.thumb
	.thumb_func
	.type	DCMI_CROPCmd, %function
DCMI_CROPCmd:
.LFB115:
	.loc 1 224 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI11:
	sub	sp, sp, #8
.LCFI12:
	add	r7, sp, #0
.LCFI13:
	mov	r3, r0
	strb	r3, [r7, #7]
	.loc 1 226 0
	ldrb	r3, [r7, #7]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L33
	.loc 1 226 0 is_stmt 0 discriminator 2
	ldrb	r3, [r7, #7]	@ zero_extendqisi2
	cmp	r3, #1
	bne	.L34
.L33:
	.loc 1 226 0 discriminator 1
	movs	r3, #1
	b	.L35
.L34:
	.loc 1 226 0 discriminator 3
	movs	r3, #0
.L35:
	.loc 1 226 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 228 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #7]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L36
	.loc 1 231 0
	ldr	r3, .L38
	ldr	r2, .L38
	ldr	r2, [r2]
	orr	r2, r2, #4
	str	r2, [r3]
	b	.L32
.L36:
	.loc 1 236 0
	ldr	r3, .L38
	ldr	r2, .L38
	ldr	r2, [r2]
	bic	r2, r2, #4
	str	r2, [r3]
.L32:
	.loc 1 238 0
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L39:
	.align	2
.L38:
	.word	1342504960
.LFE115:
	.size	DCMI_CROPCmd, .-DCMI_CROPCmd
	.section	.text.DCMI_SetEmbeddedSynchroCodes,"ax",%progbits
	.align	2
	.global	DCMI_SetEmbeddedSynchroCodes
	.thumb
	.thumb_func
	.type	DCMI_SetEmbeddedSynchroCodes, %function
DCMI_SetEmbeddedSynchroCodes:
.LFB116:
	.loc 1 247 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7}
.LCFI14:
	sub	sp, sp, #12
.LCFI15:
	add	r7, sp, #0
.LCFI16:
	str	r0, [r7, #4]
	.loc 1 248 0
	ldr	r3, .L41
	ldr	r2, [r7, #4]
	ldrb	r2, [r2]	@ zero_extendqisi2
	mov	r1, r2
	.loc 1 249 0
	ldr	r2, [r7, #4]
	ldrb	r2, [r2, #1]	@ zero_extendqisi2
	lsls	r2, r2, #8
	.loc 1 248 0
	orrs	r1, r1, r2
	.loc 1 250 0
	ldr	r2, [r7, #4]
	ldrb	r2, [r2, #2]	@ zero_extendqisi2
	lsls	r2, r2, #16
	.loc 1 249 0
	orrs	r1, r1, r2
	.loc 1 251 0
	ldr	r2, [r7, #4]
	ldrb	r2, [r2, #3]	@ zero_extendqisi2
	lsls	r2, r2, #24
	.loc 1 248 0
	orrs	r2, r2, r1
	str	r2, [r3, #24]
	.loc 1 252 0
	adds	r7, r7, #12
	mov	sp, r7
	@ sp needed
	ldr	r7, [sp], #4
	bx	lr
.L42:
	.align	2
.L41:
	.word	1342504960
.LFE116:
	.size	DCMI_SetEmbeddedSynchroCodes, .-DCMI_SetEmbeddedSynchroCodes
	.section	.text.DCMI_JPEGCmd,"ax",%progbits
	.align	2
	.global	DCMI_JPEGCmd
	.thumb
	.thumb_func
	.type	DCMI_JPEGCmd, %function
DCMI_JPEGCmd:
.LFB117:
	.loc 1 262 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI17:
	sub	sp, sp, #8
.LCFI18:
	add	r7, sp, #0
.LCFI19:
	mov	r3, r0
	strb	r3, [r7, #7]
	.loc 1 264 0
	ldrb	r3, [r7, #7]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L44
	.loc 1 264 0 is_stmt 0 discriminator 2
	ldrb	r3, [r7, #7]	@ zero_extendqisi2
	cmp	r3, #1
	bne	.L45
.L44:
	.loc 1 264 0 discriminator 1
	movs	r3, #1
	b	.L46
.L45:
	.loc 1 264 0 discriminator 3
	movs	r3, #0
.L46:
	.loc 1 264 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 266 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #7]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L47
	.loc 1 269 0
	ldr	r3, .L49
	ldr	r2, .L49
	ldr	r2, [r2]
	orr	r2, r2, #8
	str	r2, [r3]
	b	.L43
.L47:
	.loc 1 274 0
	ldr	r3, .L49
	ldr	r2, .L49
	ldr	r2, [r2]
	bic	r2, r2, #8
	str	r2, [r3]
.L43:
	.loc 1 276 0
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L50:
	.align	2
.L49:
	.word	1342504960
.LFE117:
	.size	DCMI_JPEGCmd, .-DCMI_JPEGCmd
	.section	.text.DCMI_Cmd,"ax",%progbits
	.align	2
	.global	DCMI_Cmd
	.thumb
	.thumb_func
	.type	DCMI_Cmd, %function
DCMI_Cmd:
.LFB118:
	.loc 1 300 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI20:
	sub	sp, sp, #8
.LCFI21:
	add	r7, sp, #0
.LCFI22:
	mov	r3, r0
	strb	r3, [r7, #7]
	.loc 1 302 0
	ldrb	r3, [r7, #7]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L52
	.loc 1 302 0 is_stmt 0 discriminator 2
	ldrb	r3, [r7, #7]	@ zero_extendqisi2
	cmp	r3, #1
	bne	.L53
.L52:
	.loc 1 302 0 discriminator 1
	movs	r3, #1
	b	.L54
.L53:
	.loc 1 302 0 discriminator 3
	movs	r3, #0
.L54:
	.loc 1 302 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 304 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #7]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L55
	.loc 1 307 0
	ldr	r3, .L57
	ldr	r2, .L57
	ldr	r2, [r2]
	orr	r2, r2, #16384
	str	r2, [r3]
	b	.L51
.L55:
	.loc 1 312 0
	ldr	r3, .L57
	ldr	r2, .L57
	ldr	r2, [r2]
	bic	r2, r2, #16384
	str	r2, [r3]
.L51:
	.loc 1 314 0
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L58:
	.align	2
.L57:
	.word	1342504960
.LFE118:
	.size	DCMI_Cmd, .-DCMI_Cmd
	.section	.text.DCMI_CaptureCmd,"ax",%progbits
	.align	2
	.global	DCMI_CaptureCmd
	.thumb
	.thumb_func
	.type	DCMI_CaptureCmd, %function
DCMI_CaptureCmd:
.LFB119:
	.loc 1 323 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI23:
	sub	sp, sp, #8
.LCFI24:
	add	r7, sp, #0
.LCFI25:
	mov	r3, r0
	strb	r3, [r7, #7]
	.loc 1 325 0
	ldrb	r3, [r7, #7]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L60
	.loc 1 325 0 is_stmt 0 discriminator 2
	ldrb	r3, [r7, #7]	@ zero_extendqisi2
	cmp	r3, #1
	bne	.L61
.L60:
	.loc 1 325 0 discriminator 1
	movs	r3, #1
	b	.L62
.L61:
	.loc 1 325 0 discriminator 3
	movs	r3, #0
.L62:
	.loc 1 325 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 327 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #7]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L63
	.loc 1 330 0
	ldr	r3, .L65
	ldr	r2, .L65
	ldr	r2, [r2]
	orr	r2, r2, #1
	str	r2, [r3]
	b	.L59
.L63:
	.loc 1 335 0
	ldr	r3, .L65
	ldr	r2, .L65
	ldr	r2, [r2]
	bic	r2, r2, #1
	str	r2, [r3]
.L59:
	.loc 1 337 0
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L66:
	.align	2
.L65:
	.word	1342504960
.LFE119:
	.size	DCMI_CaptureCmd, .-DCMI_CaptureCmd
	.section	.text.DCMI_ReadData,"ax",%progbits
	.align	2
	.global	DCMI_ReadData
	.thumb
	.thumb_func
	.type	DCMI_ReadData, %function
DCMI_ReadData:
.LFB120:
	.loc 1 345 0
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7}
.LCFI26:
	add	r7, sp, #0
.LCFI27:
	.loc 1 346 0
	ldr	r3, .L69
	ldr	r3, [r3, #40]
	.loc 1 347 0
	mov	r0, r3
	mov	sp, r7
	@ sp needed
	ldr	r7, [sp], #4
	bx	lr
.L70:
	.align	2
.L69:
	.word	1342504960
.LFE120:
	.size	DCMI_ReadData, .-DCMI_ReadData
	.section	.text.DCMI_ITConfig,"ax",%progbits
	.align	2
	.global	DCMI_ITConfig
	.thumb
	.thumb_func
	.type	DCMI_ITConfig, %function
DCMI_ITConfig:
.LFB121:
	.loc 1 378 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI28:
	sub	sp, sp, #8
.LCFI29:
	add	r7, sp, #0
.LCFI30:
	mov	r2, r0
	mov	r3, r1
	strh	r2, [r7, #6]	@ movhi
	strb	r3, [r7, #5]
	.loc 1 380 0
	ldrh	r2, [r7, #6]
	movw	r3, #65504
	ands	r3, r3, r2
	cmp	r3, #0
	bne	.L72
	.loc 1 380 0 is_stmt 0 discriminator 1
	ldrh	r3, [r7, #6]
	cmp	r3, #0
	beq	.L72
	.loc 1 380 0 discriminator 3
	movs	r3, #1
	b	.L73
.L72:
	.loc 1 380 0 discriminator 2
	movs	r3, #0
.L73:
	.loc 1 380 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 381 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #5]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L74
	.loc 1 381 0 is_stmt 0 discriminator 2
	ldrb	r3, [r7, #5]	@ zero_extendqisi2
	cmp	r3, #1
	bne	.L75
.L74:
	.loc 1 381 0 discriminator 1
	movs	r3, #1
	b	.L76
.L75:
	.loc 1 381 0 discriminator 3
	movs	r3, #0
.L76:
	.loc 1 381 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 383 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #5]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L77
	.loc 1 386 0
	ldr	r3, .L79
	ldr	r2, .L79
	ldr	r1, [r2, #12]
	ldrh	r2, [r7, #6]
	orrs	r2, r2, r1
	str	r2, [r3, #12]
	b	.L71
.L77:
	.loc 1 391 0
	ldr	r3, .L79
	ldr	r2, .L79
	ldr	r1, [r2, #12]
	ldrh	r2, [r7, #6]	@ movhi
	mvns	r2, r2
	uxth	r2, r2
	ands	r2, r2, r1
	str	r2, [r3, #12]
.L71:
	.loc 1 393 0
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L80:
	.align	2
.L79:
	.word	1342504960
.LFE121:
	.size	DCMI_ITConfig, .-DCMI_ITConfig
	.section	.text.DCMI_GetFlagStatus,"ax",%progbits
	.align	2
	.global	DCMI_GetFlagStatus
	.thumb
	.thumb_func
	.type	DCMI_GetFlagStatus, %function
DCMI_GetFlagStatus:
.LFB122:
	.loc 1 415 0
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI31:
	sub	sp, sp, #24
.LCFI32:
	add	r7, sp, #0
.LCFI33:
	mov	r3, r0
	strh	r3, [r7, #6]	@ movhi
	.loc 1 416 0
	movs	r3, #0
	strb	r3, [r7, #23]
	.loc 1 417 0
	movs	r3, #0
	str	r3, [r7, #16]
	.loc 1 420 0
	ldrh	r2, [r7, #6]
	movw	r3, #8193
	cmp	r2, r3
	beq	.L82
	.loc 1 420 0 is_stmt 0 discriminator 2
	ldrh	r2, [r7, #6]
	movw	r3, #8194
	cmp	r2, r3
	beq	.L82
	.loc 1 420 0 discriminator 1
	ldrh	r2, [r7, #6]
	movw	r3, #8196
	cmp	r2, r3
	beq	.L82
	ldrh	r3, [r7, #6]
	cmp	r3, #1
	beq	.L82
	ldrh	r3, [r7, #6]
	cmp	r3, #2
	beq	.L82
	ldrh	r3, [r7, #6]
	cmp	r3, #4
	beq	.L82
	ldrh	r3, [r7, #6]
	cmp	r3, #8
	beq	.L82
	ldrh	r3, [r7, #6]
	cmp	r3, #16
	beq	.L82
	ldrh	r2, [r7, #6]
	movw	r3, #4097
	cmp	r2, r3
	beq	.L82
	ldrh	r2, [r7, #6]
	movw	r3, #4098
	cmp	r2, r3
	beq	.L82
	ldrh	r2, [r7, #6]
	movw	r3, #4100
	cmp	r2, r3
	beq	.L82
	ldrh	r2, [r7, #6]
	movw	r3, #4104
	cmp	r2, r3
	beq	.L82
	ldrh	r2, [r7, #6]
	movw	r3, #4112
	cmp	r2, r3
	bne	.L83
.L82:
	movs	r3, #1
	b	.L84
.L83:
	.loc 1 420 0 discriminator 3
	movs	r3, #0
.L84:
	.loc 1 420 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 423 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #6]
	lsrs	r3, r3, #12
	uxth	r3, r3
	str	r3, [r7, #12]
	.loc 1 425 0 discriminator 4
	ldr	r3, [r7, #12]
	cmp	r3, #0
	bne	.L85
	.loc 1 427 0
	ldr	r3, .L91
	ldr	r3, [r3, #8]
	str	r3, [r7, #16]
	b	.L86
.L85:
	.loc 1 429 0
	ldr	r3, [r7, #12]
	cmp	r3, #2
	bne	.L87
	.loc 1 431 0
	ldr	r3, .L91
	ldr	r3, [r3, #4]
	str	r3, [r7, #16]
	b	.L86
.L87:
	.loc 1 435 0
	ldr	r3, .L91
	ldr	r3, [r3, #16]
	str	r3, [r7, #16]
.L86:
	.loc 1 438 0
	ldrh	r2, [r7, #6]
	ldr	r3, [r7, #16]
	ands	r3, r3, r2
	cmp	r3, #0
	beq	.L88
	.loc 1 440 0
	movs	r3, #1
	strb	r3, [r7, #23]
	b	.L89
.L88:
	.loc 1 444 0
	movs	r3, #0
	strb	r3, [r7, #23]
.L89:
	.loc 1 447 0
	ldrb	r3, [r7, #23]	@ zero_extendqisi2
	.loc 1 448 0
	mov	r0, r3
	adds	r7, r7, #24
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L92:
	.align	2
.L91:
	.word	1342504960
.LFE122:
	.size	DCMI_GetFlagStatus, .-DCMI_GetFlagStatus
	.section	.text.DCMI_ClearFlag,"ax",%progbits
	.align	2
	.global	DCMI_ClearFlag
	.thumb
	.thumb_func
	.type	DCMI_ClearFlag, %function
DCMI_ClearFlag:
.LFB123:
	.loc 1 462 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI34:
	sub	sp, sp, #8
.LCFI35:
	add	r7, sp, #0
.LCFI36:
	mov	r3, r0
	strh	r3, [r7, #6]	@ movhi
	.loc 1 464 0
	ldrh	r2, [r7, #6]
	movw	r3, #65504
	ands	r3, r3, r2
	cmp	r3, #0
	bne	.L94
	.loc 1 464 0 is_stmt 0 discriminator 1
	ldrh	r3, [r7, #6]
	cmp	r3, #0
	beq	.L94
	.loc 1 464 0 discriminator 3
	movs	r3, #1
	b	.L95
.L94:
	.loc 1 464 0 discriminator 2
	movs	r3, #0
.L95:
	.loc 1 464 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 469 0 is_stmt 1 discriminator 4
	ldr	r3, .L96
	ldrh	r2, [r7, #6]
	str	r2, [r3, #20]
	.loc 1 470 0 discriminator 4
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L97:
	.align	2
.L96:
	.word	1342504960
.LFE123:
	.size	DCMI_ClearFlag, .-DCMI_ClearFlag
	.section	.text.DCMI_GetITStatus,"ax",%progbits
	.align	2
	.global	DCMI_GetITStatus
	.thumb
	.thumb_func
	.type	DCMI_GetITStatus, %function
DCMI_GetITStatus:
.LFB124:
	.loc 1 484 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI37:
	sub	sp, sp, #16
.LCFI38:
	add	r7, sp, #0
.LCFI39:
	mov	r3, r0
	strh	r3, [r7, #6]	@ movhi
	.loc 1 485 0
	movs	r3, #0
	strb	r3, [r7, #15]
	.loc 1 486 0
	movs	r3, #0
	str	r3, [r7, #8]
	.loc 1 489 0
	ldrh	r3, [r7, #6]
	cmp	r3, #1
	beq	.L99
	.loc 1 489 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #6]
	cmp	r3, #2
	beq	.L99
	.loc 1 489 0 discriminator 1
	ldrh	r3, [r7, #6]
	cmp	r3, #4
	beq	.L99
	ldrh	r3, [r7, #6]
	cmp	r3, #8
	beq	.L99
	ldrh	r3, [r7, #6]
	cmp	r3, #16
	bne	.L100
.L99:
	movs	r3, #1
	b	.L101
.L100:
	.loc 1 489 0 discriminator 3
	movs	r3, #0
.L101:
	.loc 1 489 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 491 0 is_stmt 1 discriminator 4
	ldr	r3, .L105
	ldr	r2, [r3, #16]
	ldrh	r3, [r7, #6]
	ands	r3, r3, r2
	str	r3, [r7, #8]
	.loc 1 493 0 discriminator 4
	ldr	r3, [r7, #8]
	cmp	r3, #0
	beq	.L102
	.loc 1 495 0
	movs	r3, #1
	strb	r3, [r7, #15]
	b	.L103
.L102:
	.loc 1 499 0
	movs	r3, #0
	strb	r3, [r7, #15]
.L103:
	.loc 1 501 0
	ldrb	r3, [r7, #15]	@ zero_extendqisi2
	.loc 1 502 0
	mov	r0, r3
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L106:
	.align	2
.L105:
	.word	1342504960
.LFE124:
	.size	DCMI_GetITStatus, .-DCMI_GetITStatus
	.section	.text.DCMI_ClearITPendingBit,"ax",%progbits
	.align	2
	.global	DCMI_ClearITPendingBit
	.thumb
	.thumb_func
	.type	DCMI_ClearITPendingBit, %function
DCMI_ClearITPendingBit:
.LFB125:
	.loc 1 516 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7}
.LCFI40:
	sub	sp, sp, #12
.LCFI41:
	add	r7, sp, #0
.LCFI42:
	mov	r3, r0
	strh	r3, [r7, #6]	@ movhi
	.loc 1 520 0
	ldr	r3, .L108
	ldrh	r2, [r7, #6]
	str	r2, [r3, #20]
	.loc 1 521 0
	adds	r7, r7, #12
	mov	sp, r7
	@ sp needed
	ldr	r7, [sp], #4
	bx	lr
.L109:
	.align	2
.L108:
	.word	1342504960
.LFE125:
	.size	DCMI_ClearITPendingBit, .-DCMI_ClearITPendingBit
	.section	.debug_frame,"",%progbits
.Lframe0:
	.4byte	.LECIE0-.LSCIE0
.LSCIE0:
	.4byte	0xffffffff
	.byte	0x3
	.ascii	"\000"
	.uleb128 0x1
	.sleb128 -4
	.uleb128 0xe
	.byte	0xc
	.uleb128 0xd
	.uleb128 0
	.align	2
.LECIE0:
.LSFDE0:
	.4byte	.LEFDE0-.LASFDE0
.LASFDE0:
	.4byte	.Lframe0
	.4byte	.LFB111
	.4byte	.LFE111-.LFB111
	.byte	0x4
	.4byte	.LCFI0-.LFB111
	.byte	0xe
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI1-.LCFI0
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE0:
.LSFDE2:
	.4byte	.LEFDE2-.LASFDE2
.LASFDE2:
	.4byte	.Lframe0
	.4byte	.LFB112
	.4byte	.LFE112-.LFB112
	.byte	0x4
	.4byte	.LCFI2-.LFB112
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI3-.LCFI2
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI4-.LCFI3
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE2:
.LSFDE4:
	.4byte	.LEFDE4-.LASFDE4
.LASFDE4:
	.4byte	.Lframe0
	.4byte	.LFB113
	.4byte	.LFE113-.LFB113
	.byte	0x4
	.4byte	.LCFI5-.LFB113
	.byte	0xe
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI6-.LCFI5
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI7-.LCFI6
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE4:
.LSFDE6:
	.4byte	.LEFDE6-.LASFDE6
.LASFDE6:
	.4byte	.Lframe0
	.4byte	.LFB114
	.4byte	.LFE114-.LFB114
	.byte	0x4
	.4byte	.LCFI8-.LFB114
	.byte	0xe
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI9-.LCFI8
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI10-.LCFI9
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE6:
.LSFDE8:
	.4byte	.LEFDE8-.LASFDE8
.LASFDE8:
	.4byte	.Lframe0
	.4byte	.LFB115
	.4byte	.LFE115-.LFB115
	.byte	0x4
	.4byte	.LCFI11-.LFB115
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI12-.LCFI11
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI13-.LCFI12
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE8:
.LSFDE10:
	.4byte	.LEFDE10-.LASFDE10
.LASFDE10:
	.4byte	.Lframe0
	.4byte	.LFB116
	.4byte	.LFE116-.LFB116
	.byte	0x4
	.4byte	.LCFI14-.LFB116
	.byte	0xe
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI15-.LCFI14
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI16-.LCFI15
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE10:
.LSFDE12:
	.4byte	.LEFDE12-.LASFDE12
.LASFDE12:
	.4byte	.Lframe0
	.4byte	.LFB117
	.4byte	.LFE117-.LFB117
	.byte	0x4
	.4byte	.LCFI17-.LFB117
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI18-.LCFI17
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI19-.LCFI18
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE12:
.LSFDE14:
	.4byte	.LEFDE14-.LASFDE14
.LASFDE14:
	.4byte	.Lframe0
	.4byte	.LFB118
	.4byte	.LFE118-.LFB118
	.byte	0x4
	.4byte	.LCFI20-.LFB118
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI21-.LCFI20
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI22-.LCFI21
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE14:
.LSFDE16:
	.4byte	.LEFDE16-.LASFDE16
.LASFDE16:
	.4byte	.Lframe0
	.4byte	.LFB119
	.4byte	.LFE119-.LFB119
	.byte	0x4
	.4byte	.LCFI23-.LFB119
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI24-.LCFI23
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI25-.LCFI24
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE16:
.LSFDE18:
	.4byte	.LEFDE18-.LASFDE18
.LASFDE18:
	.4byte	.Lframe0
	.4byte	.LFB120
	.4byte	.LFE120-.LFB120
	.byte	0x4
	.4byte	.LCFI26-.LFB120
	.byte	0xe
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI27-.LCFI26
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE18:
.LSFDE20:
	.4byte	.LEFDE20-.LASFDE20
.LASFDE20:
	.4byte	.Lframe0
	.4byte	.LFB121
	.4byte	.LFE121-.LFB121
	.byte	0x4
	.4byte	.LCFI28-.LFB121
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI29-.LCFI28
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI30-.LCFI29
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE20:
.LSFDE22:
	.4byte	.LEFDE22-.LASFDE22
.LASFDE22:
	.4byte	.Lframe0
	.4byte	.LFB122
	.4byte	.LFE122-.LFB122
	.byte	0x4
	.4byte	.LCFI31-.LFB122
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI32-.LCFI31
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.4byte	.LCFI33-.LCFI32
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE22:
.LSFDE24:
	.4byte	.LEFDE24-.LASFDE24
.LASFDE24:
	.4byte	.Lframe0
	.4byte	.LFB123
	.4byte	.LFE123-.LFB123
	.byte	0x4
	.4byte	.LCFI34-.LFB123
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI35-.LCFI34
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI36-.LCFI35
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE24:
.LSFDE26:
	.4byte	.LEFDE26-.LASFDE26
.LASFDE26:
	.4byte	.Lframe0
	.4byte	.LFB124
	.4byte	.LFE124-.LFB124
	.byte	0x4
	.4byte	.LCFI37-.LFB124
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI38-.LCFI37
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI39-.LCFI38
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE26:
.LSFDE28:
	.4byte	.LEFDE28-.LASFDE28
.LASFDE28:
	.4byte	.Lframe0
	.4byte	.LFB125
	.4byte	.LFE125-.LFB125
	.byte	0x4
	.4byte	.LCFI40-.LFB125
	.byte	0xe
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI41-.LCFI40
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI42-.LCFI41
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE28:
	.text
.Letext0:
	.file 2 "/usr/share/crossworks_for_arm_3.3/include/stdint.h"
	.file 3 "../../../chip/stm32/stm32f407/lib/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
	.file 4 "../../../chip/stm32/stm32f407/lib/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dcmi.h"
	.file 5 "../../../chip/stm32/stm32f407/lib/CMSIS/Include/core_cm4.h"
	.section	.debug_info,"",%progbits
.Ldebug_info0:
	.4byte	0x595
	.2byte	0x4
	.4byte	.Ldebug_abbrev0
	.byte	0x4
	.uleb128 0x1
	.4byte	.LASF70
	.byte	0x1
	.4byte	.LASF71
	.4byte	.LASF72
	.4byte	.Ldebug_ranges0+0
	.4byte	0
	.4byte	.Ldebug_line0
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.4byte	.LASF0
	.uleb128 0x3
	.4byte	.LASF3
	.byte	0x2
	.byte	0xf
	.4byte	0x37
	.uleb128 0x2
	.byte	0x1
	.byte	0x8
	.4byte	.LASF1
	.uleb128 0x2
	.byte	0x2
	.byte	0x5
	.4byte	.LASF2
	.uleb128 0x3
	.4byte	.LASF4
	.byte	0x2
	.byte	0x15
	.4byte	0x50
	.uleb128 0x2
	.byte	0x2
	.byte	0x7
	.4byte	.LASF5
	.uleb128 0x3
	.4byte	.LASF6
	.byte	0x2
	.byte	0x16
	.4byte	0x62
	.uleb128 0x4
	.byte	0x4
	.byte	0x5
	.ascii	"int\000"
	.uleb128 0x3
	.4byte	.LASF7
	.byte	0x2
	.byte	0x17
	.4byte	0x74
	.uleb128 0x2
	.byte	0x4
	.byte	0x7
	.4byte	.LASF8
	.uleb128 0x2
	.byte	0x8
	.byte	0x5
	.4byte	.LASF9
	.uleb128 0x2
	.byte	0x8
	.byte	0x7
	.4byte	.LASF10
	.uleb128 0x2
	.byte	0x4
	.byte	0x7
	.4byte	.LASF11
	.uleb128 0x5
	.4byte	0x69
	.uleb128 0x5
	.4byte	0x57
	.uleb128 0x6
	.byte	0x1
	.byte	0x3
	.2byte	0x12d
	.4byte	0xb0
	.uleb128 0x7
	.4byte	.LASF12
	.sleb128 0
	.uleb128 0x8
	.ascii	"SET\000"
	.sleb128 1
	.byte	0
	.uleb128 0x9
	.4byte	.LASF13
	.byte	0x3
	.2byte	0x12d
	.4byte	0x9a
	.uleb128 0x9
	.4byte	.LASF14
	.byte	0x3
	.2byte	0x12d
	.4byte	0x9a
	.uleb128 0x6
	.byte	0x1
	.byte	0x3
	.2byte	0x12f
	.4byte	0xde
	.uleb128 0x7
	.4byte	.LASF15
	.sleb128 0
	.uleb128 0x7
	.4byte	.LASF16
	.sleb128 1
	.byte	0
	.uleb128 0x9
	.4byte	.LASF17
	.byte	0x3
	.2byte	0x12f
	.4byte	0xc8
	.uleb128 0xa
	.byte	0x2c
	.byte	0x3
	.2byte	0x1d4
	.4byte	0x180
	.uleb128 0xb
	.ascii	"CR\000"
	.byte	0x3
	.2byte	0x1d6
	.4byte	0x90
	.byte	0
	.uleb128 0xb
	.ascii	"SR\000"
	.byte	0x3
	.2byte	0x1d7
	.4byte	0x90
	.byte	0x4
	.uleb128 0xc
	.4byte	.LASF18
	.byte	0x3
	.2byte	0x1d8
	.4byte	0x90
	.byte	0x8
	.uleb128 0xb
	.ascii	"IER\000"
	.byte	0x3
	.2byte	0x1d9
	.4byte	0x90
	.byte	0xc
	.uleb128 0xc
	.4byte	.LASF19
	.byte	0x3
	.2byte	0x1da
	.4byte	0x90
	.byte	0x10
	.uleb128 0xb
	.ascii	"ICR\000"
	.byte	0x3
	.2byte	0x1db
	.4byte	0x90
	.byte	0x14
	.uleb128 0xc
	.4byte	.LASF20
	.byte	0x3
	.2byte	0x1dc
	.4byte	0x90
	.byte	0x18
	.uleb128 0xc
	.4byte	.LASF21
	.byte	0x3
	.2byte	0x1dd
	.4byte	0x90
	.byte	0x1c
	.uleb128 0xc
	.4byte	.LASF22
	.byte	0x3
	.2byte	0x1de
	.4byte	0x90
	.byte	0x20
	.uleb128 0xc
	.4byte	.LASF23
	.byte	0x3
	.2byte	0x1df
	.4byte	0x90
	.byte	0x24
	.uleb128 0xb
	.ascii	"DR\000"
	.byte	0x3
	.2byte	0x1e0
	.4byte	0x90
	.byte	0x28
	.byte	0
	.uleb128 0x9
	.4byte	.LASF24
	.byte	0x3
	.2byte	0x1e1
	.4byte	0xea
	.uleb128 0x2
	.byte	0x4
	.byte	0x5
	.4byte	.LASF25
	.uleb128 0x2
	.byte	0x1
	.byte	0x8
	.4byte	.LASF26
	.uleb128 0xd
	.byte	0xe
	.byte	0x4
	.byte	0x33
	.4byte	0x1f7
	.uleb128 0xe
	.4byte	.LASF27
	.byte	0x4
	.byte	0x35
	.4byte	0x45
	.byte	0
	.uleb128 0xe
	.4byte	.LASF28
	.byte	0x4
	.byte	0x38
	.4byte	0x45
	.byte	0x2
	.uleb128 0xe
	.4byte	.LASF29
	.byte	0x4
	.byte	0x3b
	.4byte	0x45
	.byte	0x4
	.uleb128 0xe
	.4byte	.LASF30
	.byte	0x4
	.byte	0x3e
	.4byte	0x45
	.byte	0x6
	.uleb128 0xe
	.4byte	.LASF31
	.byte	0x4
	.byte	0x41
	.4byte	0x45
	.byte	0x8
	.uleb128 0xe
	.4byte	.LASF32
	.byte	0x4
	.byte	0x44
	.4byte	0x45
	.byte	0xa
	.uleb128 0xe
	.4byte	.LASF33
	.byte	0x4
	.byte	0x47
	.4byte	0x45
	.byte	0xc
	.byte	0
	.uleb128 0x3
	.4byte	.LASF34
	.byte	0x4
	.byte	0x49
	.4byte	0x19a
	.uleb128 0xd
	.byte	0x8
	.byte	0x4
	.byte	0x4e
	.4byte	0x23b
	.uleb128 0xe
	.4byte	.LASF35
	.byte	0x4
	.byte	0x50
	.4byte	0x45
	.byte	0
	.uleb128 0xe
	.4byte	.LASF36
	.byte	0x4
	.byte	0x53
	.4byte	0x45
	.byte	0x2
	.uleb128 0xe
	.4byte	.LASF37
	.byte	0x4
	.byte	0x56
	.4byte	0x45
	.byte	0x4
	.uleb128 0xe
	.4byte	.LASF38
	.byte	0x4
	.byte	0x59
	.4byte	0x45
	.byte	0x6
	.byte	0
	.uleb128 0x3
	.4byte	.LASF39
	.byte	0x4
	.byte	0x5c
	.4byte	0x202
	.uleb128 0xd
	.byte	0x4
	.byte	0x4
	.byte	0x61
	.4byte	0x27f
	.uleb128 0xe
	.4byte	.LASF40
	.byte	0x4
	.byte	0x63
	.4byte	0x2c
	.byte	0
	.uleb128 0xe
	.4byte	.LASF41
	.byte	0x4
	.byte	0x64
	.4byte	0x2c
	.byte	0x1
	.uleb128 0xe
	.4byte	.LASF42
	.byte	0x4
	.byte	0x65
	.4byte	0x2c
	.byte	0x2
	.uleb128 0xe
	.4byte	.LASF43
	.byte	0x4
	.byte	0x66
	.4byte	0x2c
	.byte	0x3
	.byte	0
	.uleb128 0x3
	.4byte	.LASF44
	.byte	0x4
	.byte	0x67
	.4byte	0x246
	.uleb128 0xf
	.4byte	.LASF73
	.byte	0x1
	.byte	0x7e
	.4byte	.LFB111
	.4byte	.LFE111-.LFB111
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x10
	.4byte	.LASF45
	.byte	0x1
	.byte	0x8f
	.4byte	.LFB112
	.4byte	.LFE112-.LFB112
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x2da
	.uleb128 0x11
	.4byte	.LASF47
	.byte	0x1
	.byte	0x8f
	.4byte	0x2da
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x12
	.4byte	.LASF61
	.byte	0x1
	.byte	0x91
	.4byte	0x69
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x13
	.4byte	.LASF52
	.byte	0x1
	.byte	0x94
	.4byte	0x62
	.uleb128 0x14
	.byte	0
	.byte	0
	.uleb128 0x15
	.byte	0x4
	.4byte	0x1f7
	.uleb128 0x16
	.4byte	.LASF46
	.byte	0x1
	.byte	0xb9
	.4byte	.LFB113
	.4byte	.LFE113-.LFB113
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x304
	.uleb128 0x11
	.4byte	.LASF47
	.byte	0x1
	.byte	0xb9
	.4byte	0x2da
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0x16
	.4byte	.LASF48
	.byte	0x1
	.byte	0xcd
	.4byte	.LFB114
	.4byte	.LFE114-.LFB114
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x328
	.uleb128 0x11
	.4byte	.LASF49
	.byte	0x1
	.byte	0xcd
	.4byte	0x328
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0x15
	.byte	0x4
	.4byte	0x23b
	.uleb128 0x10
	.4byte	.LASF50
	.byte	0x1
	.byte	0xdf
	.4byte	.LFB115
	.4byte	.LFE115-.LFB115
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x35f
	.uleb128 0x11
	.4byte	.LASF51
	.byte	0x1
	.byte	0xdf
	.4byte	0xde
	.uleb128 0x2
	.byte	0x91
	.sleb128 -9
	.uleb128 0x13
	.4byte	.LASF52
	.byte	0x1
	.byte	0x94
	.4byte	0x62
	.uleb128 0x14
	.byte	0
	.byte	0
	.uleb128 0x16
	.4byte	.LASF53
	.byte	0x1
	.byte	0xf6
	.4byte	.LFB116
	.4byte	.LFE116-.LFB116
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x383
	.uleb128 0x11
	.4byte	.LASF54
	.byte	0x1
	.byte	0xf6
	.4byte	0x383
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0x15
	.byte	0x4
	.4byte	0x27f
	.uleb128 0x17
	.4byte	.LASF55
	.byte	0x1
	.2byte	0x105
	.4byte	.LFB117
	.4byte	.LFE117-.LFB117
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x3bc
	.uleb128 0x18
	.4byte	.LASF51
	.byte	0x1
	.2byte	0x105
	.4byte	0xde
	.uleb128 0x2
	.byte	0x91
	.sleb128 -9
	.uleb128 0x13
	.4byte	.LASF52
	.byte	0x1
	.byte	0x94
	.4byte	0x62
	.uleb128 0x14
	.byte	0
	.byte	0
	.uleb128 0x17
	.4byte	.LASF56
	.byte	0x1
	.2byte	0x12b
	.4byte	.LFB118
	.4byte	.LFE118-.LFB118
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x3ef
	.uleb128 0x18
	.4byte	.LASF51
	.byte	0x1
	.2byte	0x12b
	.4byte	0xde
	.uleb128 0x2
	.byte	0x91
	.sleb128 -9
	.uleb128 0x13
	.4byte	.LASF52
	.byte	0x1
	.byte	0x94
	.4byte	0x62
	.uleb128 0x14
	.byte	0
	.byte	0
	.uleb128 0x17
	.4byte	.LASF57
	.byte	0x1
	.2byte	0x142
	.4byte	.LFB119
	.4byte	.LFE119-.LFB119
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x422
	.uleb128 0x18
	.4byte	.LASF51
	.byte	0x1
	.2byte	0x142
	.4byte	0xde
	.uleb128 0x2
	.byte	0x91
	.sleb128 -9
	.uleb128 0x13
	.4byte	.LASF52
	.byte	0x1
	.byte	0x94
	.4byte	0x62
	.uleb128 0x14
	.byte	0
	.byte	0
	.uleb128 0x19
	.4byte	.LASF74
	.byte	0x1
	.2byte	0x158
	.4byte	0x69
	.4byte	.LFB120
	.4byte	.LFE120-.LFB120
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x17
	.4byte	.LASF58
	.byte	0x1
	.2byte	0x179
	.4byte	.LFB121
	.4byte	.LFE121-.LFB121
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x47a
	.uleb128 0x18
	.4byte	.LASF59
	.byte	0x1
	.2byte	0x179
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x18
	.4byte	.LASF51
	.byte	0x1
	.2byte	0x179
	.4byte	0xde
	.uleb128 0x2
	.byte	0x91
	.sleb128 -11
	.uleb128 0x13
	.4byte	.LASF52
	.byte	0x1
	.byte	0x94
	.4byte	0x62
	.uleb128 0x14
	.byte	0
	.byte	0
	.uleb128 0x1a
	.4byte	.LASF66
	.byte	0x1
	.2byte	0x19e
	.4byte	0xb0
	.4byte	.LFB122
	.4byte	.LFE122-.LFB122
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x4de
	.uleb128 0x18
	.4byte	.LASF60
	.byte	0x1
	.2byte	0x19e
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -26
	.uleb128 0x1b
	.4byte	.LASF62
	.byte	0x1
	.2byte	0x1a0
	.4byte	0xb0
	.uleb128 0x2
	.byte	0x91
	.sleb128 -9
	.uleb128 0x1b
	.4byte	.LASF63
	.byte	0x1
	.2byte	0x1a1
	.4byte	0x69
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x1b
	.4byte	.LASF64
	.byte	0x1
	.2byte	0x1a1
	.4byte	0x69
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x13
	.4byte	.LASF52
	.byte	0x1
	.byte	0x94
	.4byte	0x62
	.uleb128 0x14
	.byte	0
	.byte	0
	.uleb128 0x17
	.4byte	.LASF65
	.byte	0x1
	.2byte	0x1cd
	.4byte	.LFB123
	.4byte	.LFE123-.LFB123
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x511
	.uleb128 0x18
	.4byte	.LASF60
	.byte	0x1
	.2byte	0x1cd
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x13
	.4byte	.LASF52
	.byte	0x1
	.byte	0x94
	.4byte	0x62
	.uleb128 0x14
	.byte	0
	.byte	0
	.uleb128 0x1a
	.4byte	.LASF67
	.byte	0x1
	.2byte	0x1e3
	.4byte	0xbc
	.4byte	.LFB124
	.4byte	.LFE124-.LFB124
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x566
	.uleb128 0x18
	.4byte	.LASF59
	.byte	0x1
	.2byte	0x1e3
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -18
	.uleb128 0x1b
	.4byte	.LASF62
	.byte	0x1
	.2byte	0x1e5
	.4byte	0xbc
	.uleb128 0x2
	.byte	0x91
	.sleb128 -9
	.uleb128 0x1b
	.4byte	.LASF68
	.byte	0x1
	.2byte	0x1e6
	.4byte	0x69
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x13
	.4byte	.LASF52
	.byte	0x1
	.byte	0x94
	.4byte	0x62
	.uleb128 0x14
	.byte	0
	.byte	0
	.uleb128 0x1c
	.4byte	.LASF69
	.byte	0x1
	.2byte	0x203
	.4byte	.LFB125
	.4byte	.LFE125-.LFB125
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x58c
	.uleb128 0x18
	.4byte	.LASF59
	.byte	0x1
	.2byte	0x203
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.byte	0
	.uleb128 0x1d
	.4byte	.LASF75
	.byte	0x5
	.2byte	0x698
	.4byte	0x95
	.byte	0
	.section	.debug_abbrev,"",%progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0xe
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1b
	.uleb128 0xe
	.uleb128 0x55
	.uleb128 0x17
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0x35
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0x4
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1c
	.uleb128 0xd
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x1c
	.uleb128 0xd
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x18
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x15
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x16
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x17
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x18
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x19
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x1a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1b
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x1c
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1d
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_aranges,"",%progbits
	.4byte	0x8c
	.2byte	0x2
	.4byte	.Ldebug_info0
	.byte	0x4
	.byte	0
	.2byte	0
	.2byte	0
	.4byte	.LFB111
	.4byte	.LFE111-.LFB111
	.4byte	.LFB112
	.4byte	.LFE112-.LFB112
	.4byte	.LFB113
	.4byte	.LFE113-.LFB113
	.4byte	.LFB114
	.4byte	.LFE114-.LFB114
	.4byte	.LFB115
	.4byte	.LFE115-.LFB115
	.4byte	.LFB116
	.4byte	.LFE116-.LFB116
	.4byte	.LFB117
	.4byte	.LFE117-.LFB117
	.4byte	.LFB118
	.4byte	.LFE118-.LFB118
	.4byte	.LFB119
	.4byte	.LFE119-.LFB119
	.4byte	.LFB120
	.4byte	.LFE120-.LFB120
	.4byte	.LFB121
	.4byte	.LFE121-.LFB121
	.4byte	.LFB122
	.4byte	.LFE122-.LFB122
	.4byte	.LFB123
	.4byte	.LFE123-.LFB123
	.4byte	.LFB124
	.4byte	.LFE124-.LFB124
	.4byte	.LFB125
	.4byte	.LFE125-.LFB125
	.4byte	0
	.4byte	0
	.section	.debug_ranges,"",%progbits
.Ldebug_ranges0:
	.4byte	.LFB111
	.4byte	.LFE111
	.4byte	.LFB112
	.4byte	.LFE112
	.4byte	.LFB113
	.4byte	.LFE113
	.4byte	.LFB114
	.4byte	.LFE114
	.4byte	.LFB115
	.4byte	.LFE115
	.4byte	.LFB116
	.4byte	.LFE116
	.4byte	.LFB117
	.4byte	.LFE117
	.4byte	.LFB118
	.4byte	.LFE118
	.4byte	.LFB119
	.4byte	.LFE119
	.4byte	.LFB120
	.4byte	.LFE120
	.4byte	.LFB121
	.4byte	.LFE121
	.4byte	.LFB122
	.4byte	.LFE122
	.4byte	.LFB123
	.4byte	.LFE123
	.4byte	.LFB124
	.4byte	.LFE124
	.4byte	.LFB125
	.4byte	.LFE125
	.4byte	0
	.4byte	0
	.section	.debug_line,"",%progbits
.Ldebug_line0:
	.section	.debug_str,"MS",%progbits,1
.LASF73:
	.ascii	"DCMI_DeInit\000"
.LASF27:
	.ascii	"DCMI_CaptureMode\000"
.LASF29:
	.ascii	"DCMI_PCKPolarity\000"
.LASF38:
	.ascii	"DCMI_CaptureCount\000"
.LASF30:
	.ascii	"DCMI_VSPolarity\000"
.LASF11:
	.ascii	"sizetype\000"
.LASF60:
	.ascii	"DCMI_FLAG\000"
.LASF23:
	.ascii	"CWSIZER\000"
.LASF46:
	.ascii	"DCMI_StructInit\000"
.LASF57:
	.ascii	"DCMI_CaptureCmd\000"
.LASF20:
	.ascii	"ESCR\000"
.LASF19:
	.ascii	"MISR\000"
.LASF13:
	.ascii	"FlagStatus\000"
.LASF35:
	.ascii	"DCMI_VerticalStartLine\000"
.LASF42:
	.ascii	"DCMI_LineEndCode\000"
.LASF2:
	.ascii	"short int\000"
.LASF59:
	.ascii	"DCMI_IT\000"
.LASF32:
	.ascii	"DCMI_CaptureRate\000"
.LASF40:
	.ascii	"DCMI_FrameStartCode\000"
.LASF3:
	.ascii	"uint8_t\000"
.LASF54:
	.ascii	"DCMI_CodesInitStruct\000"
.LASF52:
	.ascii	"assert_param\000"
.LASF28:
	.ascii	"DCMI_SynchroMode\000"
.LASF51:
	.ascii	"NewState\000"
.LASF15:
	.ascii	"DISABLE\000"
.LASF55:
	.ascii	"DCMI_JPEGCmd\000"
.LASF33:
	.ascii	"DCMI_ExtendedDataMode\000"
.LASF56:
	.ascii	"DCMI_Cmd\000"
.LASF9:
	.ascii	"long long int\000"
.LASF43:
	.ascii	"DCMI_FrameEndCode\000"
.LASF14:
	.ascii	"ITStatus\000"
.LASF45:
	.ascii	"DCMI_Init\000"
.LASF25:
	.ascii	"long int\000"
.LASF36:
	.ascii	"DCMI_HorizontalOffsetCount\000"
.LASF65:
	.ascii	"DCMI_ClearFlag\000"
.LASF39:
	.ascii	"DCMI_CROPInitTypeDef\000"
.LASF71:
	.ascii	"/home/mike/Documents/caribou-rtos/branches/0.9/cari"
	.ascii	"bou/target/board/xcore407i/crossworks/../../../chip"
	.ascii	"/stm32/stm32f407/lib/STM32F4xx_StdPeriph_Driver/src"
	.ascii	"/stm32f4xx_dcmi.c\000"
.LASF62:
	.ascii	"bitstatus\000"
.LASF1:
	.ascii	"unsigned char\000"
.LASF66:
	.ascii	"DCMI_GetFlagStatus\000"
.LASF0:
	.ascii	"signed char\000"
.LASF10:
	.ascii	"long long unsigned int\000"
.LASF74:
	.ascii	"DCMI_ReadData\000"
.LASF7:
	.ascii	"uint32_t\000"
.LASF24:
	.ascii	"DCMI_TypeDef\000"
.LASF49:
	.ascii	"DCMI_CROPInitStruct\000"
.LASF4:
	.ascii	"uint16_t\000"
.LASF61:
	.ascii	"temp\000"
.LASF47:
	.ascii	"DCMI_InitStruct\000"
.LASF72:
	.ascii	"/home/mike/Documents/caribou-rtos/branches/0.9/cari"
	.ascii	"bou/target/board/xcore407i/crossworks\000"
.LASF5:
	.ascii	"short unsigned int\000"
.LASF26:
	.ascii	"char\000"
.LASF6:
	.ascii	"int32_t\000"
.LASF58:
	.ascii	"DCMI_ITConfig\000"
.LASF37:
	.ascii	"DCMI_VerticalLineCount\000"
.LASF64:
	.ascii	"tempreg\000"
.LASF53:
	.ascii	"DCMI_SetEmbeddedSynchroCodes\000"
.LASF70:
	.ascii	"GNU C 4.8.4 20140725 (release) [ARM/embedded-4_8-br"
	.ascii	"anch revision 213147] -fmessage-length=0 -mtp=soft "
	.ascii	"-mcpu=cortex-m4 -mlittle-endian -mfloat-abi=softfp "
	.ascii	"-mfpu=fpv4-sp-d16 -mthumb -g2 -std=gnu99 -fno-dwarf"
	.ascii	"2-cfi-asm -fno-builtin -ffunction-sections -fdata-s"
	.ascii	"ections -fshort-double -fshort-enums -fno-common\000"
.LASF48:
	.ascii	"DCMI_CROPConfig\000"
.LASF17:
	.ascii	"FunctionalState\000"
.LASF34:
	.ascii	"DCMI_InitTypeDef\000"
.LASF50:
	.ascii	"DCMI_CROPCmd\000"
.LASF12:
	.ascii	"RESET\000"
.LASF44:
	.ascii	"DCMI_CodesInitTypeDef\000"
.LASF69:
	.ascii	"DCMI_ClearITPendingBit\000"
.LASF67:
	.ascii	"DCMI_GetITStatus\000"
.LASF41:
	.ascii	"DCMI_LineStartCode\000"
.LASF63:
	.ascii	"dcmireg\000"
.LASF22:
	.ascii	"CWSTRTR\000"
.LASF75:
	.ascii	"ITM_RxBuffer\000"
.LASF8:
	.ascii	"unsigned int\000"
.LASF18:
	.ascii	"RISR\000"
.LASF21:
	.ascii	"ESUR\000"
.LASF31:
	.ascii	"DCMI_HSPolarity\000"
.LASF16:
	.ascii	"ENABLE\000"
.LASF68:
	.ascii	"itstatus\000"
	.ident	"GCC: (GNU) 4.8.4 20140725 (release) [ARM/embedded-4_8-branch revision 213147]"
