	.syntax unified
	.cpu cortex-m4
	.eabi_attribute 27, 3
	.fpu fpv4-sp-d16
	.eabi_attribute 20, 1
	.eabi_attribute 21, 1
	.eabi_attribute 23, 3
	.eabi_attribute 24, 1
	.eabi_attribute 25, 1
	.eabi_attribute 26, 1
	.eabi_attribute 30, 6
	.eabi_attribute 34, 1
	.eabi_attribute 18, 4
	.thumb
	.file	"stm32f4xx_dbgmcu.c"
	.text
.Ltext0:
	.section	.text.DBGMCU_GetREVID,"ax",%progbits
	.align	2
	.global	DBGMCU_GetREVID
	.thumb
	.thumb_func
	.type	DBGMCU_GetREVID, %function
DBGMCU_GetREVID:
.LFB111:
	.file 1 "/home/mike/Documents/caribou-rtos/branches/0.9/caribou/target/board/xcore407i/crossworks/../../../chip/stm32/stm32f407/lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dbgmcu.c"
	.loc 1 59 0
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7}
.LCFI0:
	add	r7, sp, #0
.LCFI1:
	.loc 1 60 0
	ldr	r3, .L3
	ldr	r3, [r3]
	lsrs	r3, r3, #16
	.loc 1 61 0
	mov	r0, r3
	mov	sp, r7
	@ sp needed
	ldr	r7, [sp], #4
	bx	lr
.L4:
	.align	2
.L3:
	.word	-536600576
.LFE111:
	.size	DBGMCU_GetREVID, .-DBGMCU_GetREVID
	.section	.text.DBGMCU_GetDEVID,"ax",%progbits
	.align	2
	.global	DBGMCU_GetDEVID
	.thumb
	.thumb_func
	.type	DBGMCU_GetDEVID, %function
DBGMCU_GetDEVID:
.LFB112:
	.loc 1 69 0
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7}
.LCFI2:
	add	r7, sp, #0
.LCFI3:
	.loc 1 70 0
	ldr	r3, .L7
	ldr	r3, [r3]
	ubfx	r3, r3, #0, #12
	.loc 1 71 0
	mov	r0, r3
	mov	sp, r7
	@ sp needed
	ldr	r7, [sp], #4
	bx	lr
.L8:
	.align	2
.L7:
	.word	-536600576
.LFE112:
	.size	DBGMCU_GetDEVID, .-DBGMCU_GetDEVID
	.section	.text.DBGMCU_Config,"ax",%progbits
	.align	2
	.global	DBGMCU_Config
	.thumb
	.thumb_func
	.type	DBGMCU_Config, %function
DBGMCU_Config:
.LFB113:
	.loc 1 85 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI4:
	sub	sp, sp, #8
.LCFI5:
	add	r7, sp, #0
.LCFI6:
	str	r0, [r7, #4]
	mov	r3, r1
	strb	r3, [r7, #3]
	.loc 1 87 0
	ldr	r3, [r7, #4]
	bic	r3, r3, #7
	cmp	r3, #0
	bne	.L10
	.loc 1 87 0 is_stmt 0 discriminator 1
	ldr	r3, [r7, #4]
	cmp	r3, #0
	beq	.L10
	.loc 1 87 0 discriminator 3
	movs	r3, #1
	b	.L11
.L10:
	.loc 1 87 0 discriminator 2
	movs	r3, #0
.L11:
	.loc 1 87 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 88 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L12
	.loc 1 88 0 is_stmt 0 discriminator 2
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #1
	bne	.L13
.L12:
	.loc 1 88 0 discriminator 1
	movs	r3, #1
	b	.L14
.L13:
	.loc 1 88 0 discriminator 3
	movs	r3, #0
.L14:
	.loc 1 88 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 89 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L15
	.loc 1 91 0
	ldr	r3, .L17
	ldr	r2, .L17
	ldr	r1, [r2, #4]
	ldr	r2, [r7, #4]
	orrs	r2, r2, r1
	str	r2, [r3, #4]
	b	.L9
.L15:
	.loc 1 95 0
	ldr	r3, .L17
	ldr	r2, .L17
	ldr	r1, [r2, #4]
	ldr	r2, [r7, #4]
	mvns	r2, r2
	ands	r2, r2, r1
	str	r2, [r3, #4]
.L9:
	.loc 1 97 0
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L18:
	.align	2
.L17:
	.word	-536600576
.LFE113:
	.size	DBGMCU_Config, .-DBGMCU_Config
	.section	.text.DBGMCU_APB1PeriphConfig,"ax",%progbits
	.align	2
	.global	DBGMCU_APB1PeriphConfig
	.thumb
	.thumb_func
	.type	DBGMCU_APB1PeriphConfig, %function
DBGMCU_APB1PeriphConfig:
.LFB114:
	.loc 1 124 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI7:
	sub	sp, sp, #8
.LCFI8:
	add	r7, sp, #0
.LCFI9:
	str	r0, [r7, #4]
	mov	r3, r1
	strb	r3, [r7, #3]
	.loc 1 126 0
	ldr	r2, [r7, #4]
	ldr	r3, .L27
	ands	r3, r3, r2
	cmp	r3, #0
	bne	.L20
	.loc 1 126 0 is_stmt 0 discriminator 1
	ldr	r3, [r7, #4]
	cmp	r3, #0
	beq	.L20
	.loc 1 126 0 discriminator 3
	movs	r3, #1
	b	.L21
.L20:
	.loc 1 126 0 discriminator 2
	movs	r3, #0
.L21:
	.loc 1 126 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 127 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L22
	.loc 1 127 0 is_stmt 0 discriminator 2
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #1
	bne	.L23
.L22:
	.loc 1 127 0 discriminator 1
	movs	r3, #1
	b	.L24
.L23:
	.loc 1 127 0 discriminator 3
	movs	r3, #0
.L24:
	.loc 1 127 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 129 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L25
	.loc 1 131 0
	ldr	r3, .L27+4
	ldr	r2, .L27+4
	ldr	r1, [r2, #8]
	ldr	r2, [r7, #4]
	orrs	r2, r2, r1
	str	r2, [r3, #8]
	b	.L19
.L25:
	.loc 1 135 0
	ldr	r3, .L27+4
	ldr	r2, .L27+4
	ldr	r1, [r2, #8]
	ldr	r2, [r7, #4]
	mvns	r2, r2
	ands	r2, r2, r1
	str	r2, [r3, #8]
.L19:
	.loc 1 137 0
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L28:
	.align	2
.L27:
	.word	-115351040
	.word	-536600576
.LFE114:
	.size	DBGMCU_APB1PeriphConfig, .-DBGMCU_APB1PeriphConfig
	.section	.text.DBGMCU_APB2PeriphConfig,"ax",%progbits
	.align	2
	.global	DBGMCU_APB2PeriphConfig
	.thumb
	.thumb_func
	.type	DBGMCU_APB2PeriphConfig, %function
DBGMCU_APB2PeriphConfig:
.LFB115:
	.loc 1 153 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI10:
	sub	sp, sp, #8
.LCFI11:
	add	r7, sp, #0
.LCFI12:
	str	r0, [r7, #4]
	mov	r3, r1
	strb	r3, [r7, #3]
	.loc 1 155 0
	ldr	r3, [r7, #4]
	bic	r3, r3, #458752
	bic	r3, r3, #3
	cmp	r3, #0
	bne	.L30
	.loc 1 155 0 is_stmt 0 discriminator 1
	ldr	r3, [r7, #4]
	cmp	r3, #0
	beq	.L30
	.loc 1 155 0 discriminator 3
	movs	r3, #1
	b	.L31
.L30:
	.loc 1 155 0 discriminator 2
	movs	r3, #0
.L31:
	.loc 1 155 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 156 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L32
	.loc 1 156 0 is_stmt 0 discriminator 2
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #1
	bne	.L33
.L32:
	.loc 1 156 0 discriminator 1
	movs	r3, #1
	b	.L34
.L33:
	.loc 1 156 0 discriminator 3
	movs	r3, #0
.L34:
	.loc 1 156 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 158 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L35
	.loc 1 160 0
	ldr	r3, .L37
	ldr	r2, .L37
	ldr	r1, [r2, #12]
	ldr	r2, [r7, #4]
	orrs	r2, r2, r1
	str	r2, [r3, #12]
	b	.L29
.L35:
	.loc 1 164 0
	ldr	r3, .L37
	ldr	r2, .L37
	ldr	r1, [r2, #12]
	ldr	r2, [r7, #4]
	mvns	r2, r2
	ands	r2, r2, r1
	str	r2, [r3, #12]
.L29:
	.loc 1 166 0
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L38:
	.align	2
.L37:
	.word	-536600576
.LFE115:
	.size	DBGMCU_APB2PeriphConfig, .-DBGMCU_APB2PeriphConfig
	.section	.debug_frame,"",%progbits
.Lframe0:
	.4byte	.LECIE0-.LSCIE0
.LSCIE0:
	.4byte	0xffffffff
	.byte	0x3
	.ascii	"\000"
	.uleb128 0x1
	.sleb128 -4
	.uleb128 0xe
	.byte	0xc
	.uleb128 0xd
	.uleb128 0
	.align	2
.LECIE0:
.LSFDE0:
	.4byte	.LEFDE0-.LASFDE0
.LASFDE0:
	.4byte	.Lframe0
	.4byte	.LFB111
	.4byte	.LFE111-.LFB111
	.byte	0x4
	.4byte	.LCFI0-.LFB111
	.byte	0xe
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI1-.LCFI0
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE0:
.LSFDE2:
	.4byte	.LEFDE2-.LASFDE2
.LASFDE2:
	.4byte	.Lframe0
	.4byte	.LFB112
	.4byte	.LFE112-.LFB112
	.byte	0x4
	.4byte	.LCFI2-.LFB112
	.byte	0xe
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI3-.LCFI2
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE2:
.LSFDE4:
	.4byte	.LEFDE4-.LASFDE4
.LASFDE4:
	.4byte	.Lframe0
	.4byte	.LFB113
	.4byte	.LFE113-.LFB113
	.byte	0x4
	.4byte	.LCFI4-.LFB113
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI5-.LCFI4
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI6-.LCFI5
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE4:
.LSFDE6:
	.4byte	.LEFDE6-.LASFDE6
.LASFDE6:
	.4byte	.Lframe0
	.4byte	.LFB114
	.4byte	.LFE114-.LFB114
	.byte	0x4
	.4byte	.LCFI7-.LFB114
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI8-.LCFI7
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI9-.LCFI8
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE6:
.LSFDE8:
	.4byte	.LEFDE8-.LASFDE8
.LASFDE8:
	.4byte	.Lframe0
	.4byte	.LFB115
	.4byte	.LFE115-.LFB115
	.byte	0x4
	.4byte	.LCFI10-.LFB115
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI11-.LCFI10
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI12-.LCFI11
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE8:
	.text
.Letext0:
	.file 2 "/usr/share/crossworks_for_arm_3.3/include/stdint.h"
	.file 3 "../../../chip/stm32/stm32f407/lib/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
	.file 4 "../../../chip/stm32/stm32f407/lib/CMSIS/Include/core_cm4.h"
	.section	.debug_info,"",%progbits
.Ldebug_info0:
	.4byte	0x1ed
	.2byte	0x4
	.4byte	.Ldebug_abbrev0
	.byte	0x4
	.uleb128 0x1
	.4byte	.LASF27
	.byte	0x1
	.4byte	.LASF28
	.4byte	.LASF29
	.4byte	.Ldebug_ranges0+0
	.4byte	0
	.4byte	.Ldebug_line0
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.4byte	.LASF0
	.uleb128 0x2
	.byte	0x1
	.byte	0x8
	.4byte	.LASF1
	.uleb128 0x2
	.byte	0x2
	.byte	0x5
	.4byte	.LASF2
	.uleb128 0x2
	.byte	0x2
	.byte	0x7
	.4byte	.LASF3
	.uleb128 0x3
	.4byte	.LASF4
	.byte	0x2
	.byte	0x16
	.4byte	0x4c
	.uleb128 0x4
	.byte	0x4
	.byte	0x5
	.ascii	"int\000"
	.uleb128 0x3
	.4byte	.LASF5
	.byte	0x2
	.byte	0x17
	.4byte	0x5e
	.uleb128 0x2
	.byte	0x4
	.byte	0x7
	.4byte	.LASF6
	.uleb128 0x2
	.byte	0x8
	.byte	0x5
	.4byte	.LASF7
	.uleb128 0x2
	.byte	0x8
	.byte	0x7
	.4byte	.LASF8
	.uleb128 0x2
	.byte	0x4
	.byte	0x7
	.4byte	.LASF9
	.uleb128 0x5
	.4byte	0x53
	.uleb128 0x5
	.4byte	0x41
	.uleb128 0x6
	.byte	0x1
	.byte	0x3
	.2byte	0x12f
	.4byte	0x9a
	.uleb128 0x7
	.4byte	.LASF10
	.sleb128 0
	.uleb128 0x7
	.4byte	.LASF11
	.sleb128 1
	.byte	0
	.uleb128 0x8
	.4byte	.LASF12
	.byte	0x3
	.2byte	0x12f
	.4byte	0x84
	.uleb128 0x9
	.byte	0x10
	.byte	0x3
	.2byte	0x1c8
	.4byte	0xe3
	.uleb128 0xa
	.4byte	.LASF13
	.byte	0x3
	.2byte	0x1ca
	.4byte	0x7a
	.byte	0
	.uleb128 0xb
	.ascii	"CR\000"
	.byte	0x3
	.2byte	0x1cb
	.4byte	0x7a
	.byte	0x4
	.uleb128 0xa
	.4byte	.LASF14
	.byte	0x3
	.2byte	0x1cc
	.4byte	0x7a
	.byte	0x8
	.uleb128 0xa
	.4byte	.LASF15
	.byte	0x3
	.2byte	0x1cd
	.4byte	0x7a
	.byte	0xc
	.byte	0
	.uleb128 0x8
	.4byte	.LASF16
	.byte	0x3
	.2byte	0x1ce
	.4byte	0xa6
	.uleb128 0x2
	.byte	0x4
	.byte	0x5
	.4byte	.LASF17
	.uleb128 0x2
	.byte	0x1
	.byte	0x8
	.4byte	.LASF18
	.uleb128 0xc
	.4byte	.LASF19
	.byte	0x1
	.byte	0x3a
	.4byte	0x53
	.4byte	.LFB111
	.4byte	.LFE111-.LFB111
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0xc
	.4byte	.LASF20
	.byte	0x1
	.byte	0x44
	.4byte	0x53
	.4byte	.LFB112
	.4byte	.LFE112-.LFB112
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0xd
	.4byte	.LASF23
	.byte	0x1
	.byte	0x54
	.4byte	.LFB113
	.4byte	.LFE113-.LFB113
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x166
	.uleb128 0xe
	.4byte	.LASF21
	.byte	0x1
	.byte	0x54
	.4byte	0x53
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0xe
	.4byte	.LASF22
	.byte	0x1
	.byte	0x54
	.4byte	0x9a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -13
	.uleb128 0xf
	.4byte	.LASF25
	.byte	0x1
	.byte	0x57
	.4byte	0x4c
	.uleb128 0x10
	.byte	0
	.byte	0
	.uleb128 0xd
	.4byte	.LASF24
	.byte	0x1
	.byte	0x7b
	.4byte	.LFB114
	.4byte	.LFE114-.LFB114
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1a5
	.uleb128 0xe
	.4byte	.LASF21
	.byte	0x1
	.byte	0x7b
	.4byte	0x53
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0xe
	.4byte	.LASF22
	.byte	0x1
	.byte	0x7b
	.4byte	0x9a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -13
	.uleb128 0xf
	.4byte	.LASF25
	.byte	0x1
	.byte	0x57
	.4byte	0x4c
	.uleb128 0x10
	.byte	0
	.byte	0
	.uleb128 0xd
	.4byte	.LASF26
	.byte	0x1
	.byte	0x98
	.4byte	.LFB115
	.4byte	.LFE115-.LFB115
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1e4
	.uleb128 0xe
	.4byte	.LASF21
	.byte	0x1
	.byte	0x98
	.4byte	0x53
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0xe
	.4byte	.LASF22
	.byte	0x1
	.byte	0x98
	.4byte	0x9a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -13
	.uleb128 0xf
	.4byte	.LASF25
	.byte	0x1
	.byte	0x57
	.4byte	0x4c
	.uleb128 0x10
	.byte	0
	.byte	0
	.uleb128 0x11
	.4byte	.LASF30
	.byte	0x4
	.2byte	0x698
	.4byte	0x7f
	.byte	0
	.section	.debug_abbrev,"",%progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0xe
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1b
	.uleb128 0xe
	.uleb128 0x55
	.uleb128 0x17
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0x35
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0x4
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1c
	.uleb128 0xd
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0x18
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_aranges,"",%progbits
	.4byte	0x3c
	.2byte	0x2
	.4byte	.Ldebug_info0
	.byte	0x4
	.byte	0
	.2byte	0
	.2byte	0
	.4byte	.LFB111
	.4byte	.LFE111-.LFB111
	.4byte	.LFB112
	.4byte	.LFE112-.LFB112
	.4byte	.LFB113
	.4byte	.LFE113-.LFB113
	.4byte	.LFB114
	.4byte	.LFE114-.LFB114
	.4byte	.LFB115
	.4byte	.LFE115-.LFB115
	.4byte	0
	.4byte	0
	.section	.debug_ranges,"",%progbits
.Ldebug_ranges0:
	.4byte	.LFB111
	.4byte	.LFE111
	.4byte	.LFB112
	.4byte	.LFE112
	.4byte	.LFB113
	.4byte	.LFE113
	.4byte	.LFB114
	.4byte	.LFE114
	.4byte	.LFB115
	.4byte	.LFE115
	.4byte	0
	.4byte	0
	.section	.debug_line,"",%progbits
.Ldebug_line0:
	.section	.debug_str,"MS",%progbits,1
.LASF25:
	.ascii	"assert_param\000"
.LASF21:
	.ascii	"DBGMCU_Periph\000"
.LASF12:
	.ascii	"FunctionalState\000"
.LASF24:
	.ascii	"DBGMCU_APB1PeriphConfig\000"
.LASF29:
	.ascii	"/home/mike/Documents/caribou-rtos/branches/0.9/cari"
	.ascii	"bou/target/board/xcore407i/crossworks\000"
.LASF15:
	.ascii	"APB2FZ\000"
.LASF11:
	.ascii	"ENABLE\000"
.LASF8:
	.ascii	"long long unsigned int\000"
.LASF1:
	.ascii	"unsigned char\000"
.LASF19:
	.ascii	"DBGMCU_GetREVID\000"
.LASF3:
	.ascii	"short unsigned int\000"
.LASF20:
	.ascii	"DBGMCU_GetDEVID\000"
.LASF23:
	.ascii	"DBGMCU_Config\000"
.LASF10:
	.ascii	"DISABLE\000"
.LASF30:
	.ascii	"ITM_RxBuffer\000"
.LASF26:
	.ascii	"DBGMCU_APB2PeriphConfig\000"
.LASF27:
	.ascii	"GNU C 4.8.4 20140725 (release) [ARM/embedded-4_8-br"
	.ascii	"anch revision 213147] -fmessage-length=0 -mtp=soft "
	.ascii	"-mcpu=cortex-m4 -mlittle-endian -mfloat-abi=softfp "
	.ascii	"-mfpu=fpv4-sp-d16 -mthumb -g2 -std=gnu99 -fno-dwarf"
	.ascii	"2-cfi-asm -fno-builtin -ffunction-sections -fdata-s"
	.ascii	"ections -fshort-double -fshort-enums -fno-common\000"
.LASF16:
	.ascii	"DBGMCU_TypeDef\000"
.LASF6:
	.ascii	"unsigned int\000"
.LASF18:
	.ascii	"char\000"
.LASF4:
	.ascii	"int32_t\000"
.LASF9:
	.ascii	"sizetype\000"
.LASF7:
	.ascii	"long long int\000"
.LASF2:
	.ascii	"short int\000"
.LASF22:
	.ascii	"NewState\000"
.LASF13:
	.ascii	"IDCODE\000"
.LASF5:
	.ascii	"uint32_t\000"
.LASF17:
	.ascii	"long int\000"
.LASF0:
	.ascii	"signed char\000"
.LASF14:
	.ascii	"APB1FZ\000"
.LASF28:
	.ascii	"/home/mike/Documents/caribou-rtos/branches/0.9/cari"
	.ascii	"bou/target/board/xcore407i/crossworks/../../../chip"
	.ascii	"/stm32/stm32f407/lib/STM32F4xx_StdPeriph_Driver/src"
	.ascii	"/stm32f4xx_dbgmcu.c\000"
	.ident	"GCC: (GNU) 4.8.4 20140725 (release) [ARM/embedded-4_8-branch revision 213147]"
