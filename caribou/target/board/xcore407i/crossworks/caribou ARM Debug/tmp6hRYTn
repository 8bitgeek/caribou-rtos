	.syntax unified
	.cpu cortex-m4
	.eabi_attribute 27, 3
	.fpu fpv4-sp-d16
	.eabi_attribute 20, 1
	.eabi_attribute 21, 1
	.eabi_attribute 23, 3
	.eabi_attribute 24, 1
	.eabi_attribute 25, 1
	.eabi_attribute 26, 1
	.eabi_attribute 30, 6
	.eabi_attribute 34, 1
	.eabi_attribute 18, 4
	.thumb
	.file	"stm32f4xx_tim.c"
	.text
.Ltext0:
	.section	.text.TIM_DeInit,"ax",%progbits
	.align	2
	.global	TIM_DeInit
	.thumb
	.thumb_func
	.type	TIM_DeInit, %function
TIM_DeInit:
.LFB111:
	.file 1 "/home/mike/Documents/caribou-rtos/branches/0.9/caribou/target/board/xcore407i/crossworks/../../../chip/stm32/stm32f407/lib/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c"
	.loc 1 201 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI0:
	sub	sp, sp, #8
.LCFI1:
	add	r7, sp, #0
.LCFI2:
	str	r0, [r7, #4]
	.loc 1 203 0
	ldr	r2, [r7, #4]
	ldr	r3, .L19
	cmp	r2, r3
	beq	.L2
	.loc 1 203 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L2
	.loc 1 203 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L19+4
	cmp	r2, r3
	beq	.L2
	ldr	r2, [r7, #4]
	ldr	r3, .L19+8
	cmp	r2, r3
	beq	.L2
	ldr	r2, [r7, #4]
	ldr	r3, .L19+12
	cmp	r2, r3
	beq	.L2
	ldr	r2, [r7, #4]
	ldr	r3, .L19+16
	cmp	r2, r3
	beq	.L2
	ldr	r2, [r7, #4]
	ldr	r3, .L19+20
	cmp	r2, r3
	beq	.L2
	ldr	r2, [r7, #4]
	ldr	r3, .L19+24
	cmp	r2, r3
	beq	.L2
	ldr	r2, [r7, #4]
	ldr	r3, .L19+28
	cmp	r2, r3
	beq	.L2
	ldr	r2, [r7, #4]
	ldr	r3, .L19+32
	cmp	r2, r3
	beq	.L2
	ldr	r2, [r7, #4]
	ldr	r3, .L19+36
	cmp	r2, r3
	beq	.L2
	ldr	r2, [r7, #4]
	ldr	r3, .L19+40
	cmp	r2, r3
	beq	.L2
	ldr	r2, [r7, #4]
	ldr	r3, .L19+44
	cmp	r2, r3
	beq	.L2
	.loc 1 203 0 discriminator 3
	ldr	r2, [r7, #4]
	ldr	r3, .L19+48
	cmp	r2, r3
	bne	.L3
.L2:
	.loc 1 203 0 discriminator 1
	movs	r3, #1
	b	.L4
.L3:
	movs	r3, #0
.L4:
	.loc 1 203 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 205 0 is_stmt 1 discriminator 4
	ldr	r2, [r7, #4]
	ldr	r3, .L19
	cmp	r2, r3
	bne	.L5
	.loc 1 207 0
	movs	r0, #1
	movs	r1, #1
	bl	RCC_APB2PeriphResetCmd
	.loc 1 208 0
	movs	r0, #1
	movs	r1, #0
	bl	RCC_APB2PeriphResetCmd
	b	.L1
.L5:
	.loc 1 210 0
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	bne	.L7
	.loc 1 212 0
	movs	r0, #1
	movs	r1, #1
	bl	RCC_APB1PeriphResetCmd
	.loc 1 213 0
	movs	r0, #1
	movs	r1, #0
	bl	RCC_APB1PeriphResetCmd
	b	.L1
.L7:
	.loc 1 215 0
	ldr	r2, [r7, #4]
	ldr	r3, .L19+4
	cmp	r2, r3
	bne	.L8
	.loc 1 217 0
	movs	r0, #2
	movs	r1, #1
	bl	RCC_APB1PeriphResetCmd
	.loc 1 218 0
	movs	r0, #2
	movs	r1, #0
	bl	RCC_APB1PeriphResetCmd
	b	.L1
.L8:
	.loc 1 220 0
	ldr	r2, [r7, #4]
	ldr	r3, .L19+8
	cmp	r2, r3
	bne	.L9
	.loc 1 222 0
	movs	r0, #4
	movs	r1, #1
	bl	RCC_APB1PeriphResetCmd
	.loc 1 223 0
	movs	r0, #4
	movs	r1, #0
	bl	RCC_APB1PeriphResetCmd
	b	.L1
.L9:
	.loc 1 225 0
	ldr	r2, [r7, #4]
	ldr	r3, .L19+12
	cmp	r2, r3
	bne	.L10
	.loc 1 227 0
	movs	r0, #8
	movs	r1, #1
	bl	RCC_APB1PeriphResetCmd
	.loc 1 228 0
	movs	r0, #8
	movs	r1, #0
	bl	RCC_APB1PeriphResetCmd
	b	.L1
.L10:
	.loc 1 230 0
	ldr	r2, [r7, #4]
	ldr	r3, .L19+16
	cmp	r2, r3
	bne	.L11
	.loc 1 232 0
	movs	r0, #16
	movs	r1, #1
	bl	RCC_APB1PeriphResetCmd
	.loc 1 233 0
	movs	r0, #16
	movs	r1, #0
	bl	RCC_APB1PeriphResetCmd
	b	.L1
.L11:
	.loc 1 235 0
	ldr	r2, [r7, #4]
	ldr	r3, .L19+20
	cmp	r2, r3
	bne	.L12
	.loc 1 237 0
	movs	r0, #32
	movs	r1, #1
	bl	RCC_APB1PeriphResetCmd
	.loc 1 238 0
	movs	r0, #32
	movs	r1, #0
	bl	RCC_APB1PeriphResetCmd
	b	.L1
.L12:
	.loc 1 240 0
	ldr	r2, [r7, #4]
	ldr	r3, .L19+24
	cmp	r2, r3
	bne	.L13
	.loc 1 242 0
	movs	r0, #2
	movs	r1, #1
	bl	RCC_APB2PeriphResetCmd
	.loc 1 243 0
	movs	r0, #2
	movs	r1, #0
	bl	RCC_APB2PeriphResetCmd
	b	.L1
.L13:
	.loc 1 245 0
	ldr	r2, [r7, #4]
	ldr	r3, .L19+28
	cmp	r2, r3
	bne	.L14
	.loc 1 247 0
	mov	r0, #65536
	movs	r1, #1
	bl	RCC_APB2PeriphResetCmd
	.loc 1 248 0
	mov	r0, #65536
	movs	r1, #0
	bl	RCC_APB2PeriphResetCmd
	b	.L1
.L14:
	.loc 1 250 0
	ldr	r2, [r7, #4]
	ldr	r3, .L19+32
	cmp	r2, r3
	bne	.L15
	.loc 1 252 0
	mov	r0, #131072
	movs	r1, #1
	bl	RCC_APB2PeriphResetCmd
	.loc 1 253 0
	mov	r0, #131072
	movs	r1, #0
	bl	RCC_APB2PeriphResetCmd
	b	.L1
.L15:
	.loc 1 255 0
	ldr	r2, [r7, #4]
	ldr	r3, .L19+36
	cmp	r2, r3
	bne	.L16
	.loc 1 257 0
	mov	r0, #262144
	movs	r1, #1
	bl	RCC_APB2PeriphResetCmd
	.loc 1 258 0
	mov	r0, #262144
	movs	r1, #0
	bl	RCC_APB2PeriphResetCmd
	b	.L1
.L16:
	.loc 1 260 0
	ldr	r2, [r7, #4]
	ldr	r3, .L19+40
	cmp	r2, r3
	bne	.L17
	.loc 1 262 0
	movs	r0, #64
	movs	r1, #1
	bl	RCC_APB1PeriphResetCmd
	.loc 1 263 0
	movs	r0, #64
	movs	r1, #0
	bl	RCC_APB1PeriphResetCmd
	b	.L1
.L17:
	.loc 1 265 0
	ldr	r2, [r7, #4]
	ldr	r3, .L19+44
	cmp	r2, r3
	bne	.L18
	.loc 1 267 0
	movs	r0, #128
	movs	r1, #1
	bl	RCC_APB1PeriphResetCmd
	.loc 1 268 0
	movs	r0, #128
	movs	r1, #0
	bl	RCC_APB1PeriphResetCmd
	b	.L1
.L18:
	.loc 1 272 0
	ldr	r2, [r7, #4]
	ldr	r3, .L19+48
	cmp	r2, r3
	bne	.L1
	.loc 1 274 0
	mov	r0, #256
	movs	r1, #1
	bl	RCC_APB1PeriphResetCmd
	.loc 1 275 0
	mov	r0, #256
	movs	r1, #0
	bl	RCC_APB1PeriphResetCmd
.L1:
	.loc 1 278 0
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L20:
	.align	2
.L19:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073745920
	.word	1073746944
	.word	1073808384
	.word	1073823744
	.word	1073824768
	.word	1073825792
	.word	1073747968
	.word	1073748992
	.word	1073750016
.LFE111:
	.size	TIM_DeInit, .-TIM_DeInit
	.section	.text.TIM_TimeBaseInit,"ax",%progbits
	.align	2
	.global	TIM_TimeBaseInit
	.thumb
	.thumb_func
	.type	TIM_TimeBaseInit, %function
TIM_TimeBaseInit:
.LFB112:
	.loc 1 289 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI3:
	sub	sp, sp, #16
.LCFI4:
	add	r7, sp, #0
.LCFI5:
	str	r0, [r7, #4]
	str	r1, [r7]
	.loc 1 290 0
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	.loc 1 293 0
	ldr	r2, [r7, #4]
	ldr	r3, .L36
	cmp	r2, r3
	beq	.L22
	.loc 1 293 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L22
	.loc 1 293 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L36+4
	cmp	r2, r3
	beq	.L22
	ldr	r2, [r7, #4]
	ldr	r3, .L36+8
	cmp	r2, r3
	beq	.L22
	ldr	r2, [r7, #4]
	ldr	r3, .L36+12
	cmp	r2, r3
	beq	.L22
	ldr	r2, [r7, #4]
	ldr	r3, .L36+16
	cmp	r2, r3
	beq	.L22
	ldr	r2, [r7, #4]
	ldr	r3, .L36+20
	cmp	r2, r3
	beq	.L22
	ldr	r2, [r7, #4]
	ldr	r3, .L36+24
	cmp	r2, r3
	beq	.L22
	ldr	r2, [r7, #4]
	ldr	r3, .L36+28
	cmp	r2, r3
	beq	.L22
	ldr	r2, [r7, #4]
	ldr	r3, .L36+32
	cmp	r2, r3
	beq	.L22
	ldr	r2, [r7, #4]
	ldr	r3, .L36+36
	cmp	r2, r3
	beq	.L22
	ldr	r2, [r7, #4]
	ldr	r3, .L36+40
	cmp	r2, r3
	beq	.L22
	ldr	r2, [r7, #4]
	ldr	r3, .L36+44
	cmp	r2, r3
	beq	.L22
	.loc 1 293 0 discriminator 3
	ldr	r2, [r7, #4]
	ldr	r3, .L36+48
	cmp	r2, r3
	bne	.L23
.L22:
	.loc 1 293 0 discriminator 1
	movs	r3, #1
	b	.L24
.L23:
	movs	r3, #0
.L24:
	.loc 1 293 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 294 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #2]
	cmp	r3, #0
	beq	.L25
	.loc 1 294 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3, #2]
	cmp	r3, #16
	beq	.L25
	.loc 1 294 0 discriminator 1
	ldr	r3, [r7]
	ldrh	r3, [r3, #2]
	cmp	r3, #32
	beq	.L25
	ldr	r3, [r7]
	ldrh	r3, [r3, #2]
	cmp	r3, #64
	beq	.L25
	ldr	r3, [r7]
	ldrh	r3, [r3, #2]
	cmp	r3, #96
	bne	.L26
.L25:
	movs	r3, #1
	b	.L27
.L26:
	.loc 1 294 0 discriminator 3
	movs	r3, #0
.L27:
	.loc 1 294 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 295 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #8]
	cmp	r3, #0
	beq	.L28
	.loc 1 295 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3, #8]
	cmp	r3, #256
	beq	.L28
	.loc 1 295 0 discriminator 1
	ldr	r3, [r7]
	ldrh	r3, [r3, #8]
	cmp	r3, #512
	bne	.L29
.L28:
	movs	r3, #1
	b	.L30
.L29:
	.loc 1 295 0 discriminator 3
	movs	r3, #0
.L30:
	.loc 1 295 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 297 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3]	@ movhi
	strh	r3, [r7, #14]	@ movhi
	.loc 1 299 0 discriminator 4
	ldr	r2, [r7, #4]
	ldr	r3, .L36
	cmp	r2, r3
	beq	.L31
	.loc 1 299 0 is_stmt 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L36+24
	cmp	r2, r3
	beq	.L31
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L31
	.loc 1 300 0 is_stmt 1
	ldr	r2, [r7, #4]
	ldr	r3, .L36+4
	cmp	r2, r3
	beq	.L31
	.loc 1 300 0 is_stmt 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L36+8
	cmp	r2, r3
	beq	.L31
	.loc 1 301 0 is_stmt 1
	ldr	r2, [r7, #4]
	ldr	r3, .L36+12
	cmp	r2, r3
	bne	.L32
.L31:
	.loc 1 304 0
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #112
	strh	r3, [r7, #14]	@ movhi
	.loc 1 305 0
	ldr	r3, [r7]
	ldrh	r2, [r3, #2]
	ldrh	r3, [r7, #14]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
.L32:
	.loc 1 308 0
	ldr	r2, [r7, #4]
	ldr	r3, .L36+16
	cmp	r2, r3
	beq	.L33
	.loc 1 308 0 is_stmt 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L36+20
	cmp	r2, r3
	beq	.L33
	.loc 1 311 0 is_stmt 1
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #768
	strh	r3, [r7, #14]	@ movhi
	.loc 1 312 0
	ldr	r3, [r7]
	ldrh	r2, [r3, #8]
	ldrh	r3, [r7, #14]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
.L33:
	.loc 1 315 0
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #14]	@ movhi
	strh	r2, [r3]	@ movhi
	.loc 1 318 0
	ldr	r3, [r7]
	ldr	r2, [r3, #4]
	ldr	r3, [r7, #4]
	str	r2, [r3, #44]
	.loc 1 321 0
	ldr	r3, [r7]
	ldrh	r2, [r3]
	ldr	r3, [r7, #4]
	strh	r2, [r3, #40]	@ movhi
	.loc 1 323 0
	ldr	r2, [r7, #4]
	ldr	r3, .L36
	cmp	r2, r3
	beq	.L34
	.loc 1 323 0 is_stmt 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L36+24
	cmp	r2, r3
	bne	.L35
.L34:
	.loc 1 326 0 is_stmt 1
	ldr	r3, [r7]
	ldrb	r3, [r3, #10]	@ zero_extendqisi2
	mov	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #48]	@ movhi
.L35:
	.loc 1 331 0
	ldr	r3, [r7, #4]
	movs	r2, #1
	strh	r2, [r3, #20]	@ movhi
	.loc 1 332 0
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L37:
	.align	2
.L36:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073745920
	.word	1073746944
	.word	1073808384
	.word	1073823744
	.word	1073824768
	.word	1073825792
	.word	1073747968
	.word	1073748992
	.word	1073750016
.LFE112:
	.size	TIM_TimeBaseInit, .-TIM_TimeBaseInit
	.section	.text.TIM_TimeBaseStructInit,"ax",%progbits
	.align	2
	.global	TIM_TimeBaseStructInit
	.thumb
	.thumb_func
	.type	TIM_TimeBaseStructInit, %function
TIM_TimeBaseStructInit:
.LFB113:
	.loc 1 341 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7}
.LCFI6:
	sub	sp, sp, #12
.LCFI7:
	add	r7, sp, #0
.LCFI8:
	str	r0, [r7, #4]
	.loc 1 343 0
	ldr	r3, [r7, #4]
	mov	r2, #-1
	str	r2, [r3, #4]
	.loc 1 344 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	strh	r2, [r3]	@ movhi
	.loc 1 345 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	strh	r2, [r3, #8]	@ movhi
	.loc 1 346 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	strh	r2, [r3, #2]	@ movhi
	.loc 1 347 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	strb	r2, [r3, #10]
	.loc 1 348 0
	adds	r7, r7, #12
	mov	sp, r7
	@ sp needed
	ldr	r7, [sp], #4
	bx	lr
.LFE113:
	.size	TIM_TimeBaseStructInit, .-TIM_TimeBaseStructInit
	.section	.text.TIM_PrescalerConfig,"ax",%progbits
	.align	2
	.global	TIM_PrescalerConfig
	.thumb
	.thumb_func
	.type	TIM_PrescalerConfig, %function
TIM_PrescalerConfig:
.LFB114:
	.loc 1 361 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI9:
	sub	sp, sp, #8
.LCFI10:
	add	r7, sp, #0
.LCFI11:
	str	r0, [r7, #4]
	mov	r3, r2
	mov	r2, r1	@ movhi
	strh	r2, [r7, #2]	@ movhi
	strh	r3, [r7]	@ movhi
	.loc 1 363 0
	ldr	r2, [r7, #4]
	ldr	r3, .L46
	cmp	r2, r3
	beq	.L40
	.loc 1 363 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L40
	.loc 1 363 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L46+4
	cmp	r2, r3
	beq	.L40
	ldr	r2, [r7, #4]
	ldr	r3, .L46+8
	cmp	r2, r3
	beq	.L40
	ldr	r2, [r7, #4]
	ldr	r3, .L46+12
	cmp	r2, r3
	beq	.L40
	ldr	r2, [r7, #4]
	ldr	r3, .L46+16
	cmp	r2, r3
	beq	.L40
	ldr	r2, [r7, #4]
	ldr	r3, .L46+20
	cmp	r2, r3
	beq	.L40
	ldr	r2, [r7, #4]
	ldr	r3, .L46+24
	cmp	r2, r3
	beq	.L40
	ldr	r2, [r7, #4]
	ldr	r3, .L46+28
	cmp	r2, r3
	beq	.L40
	ldr	r2, [r7, #4]
	ldr	r3, .L46+32
	cmp	r2, r3
	beq	.L40
	ldr	r2, [r7, #4]
	ldr	r3, .L46+36
	cmp	r2, r3
	beq	.L40
	ldr	r2, [r7, #4]
	ldr	r3, .L46+40
	cmp	r2, r3
	beq	.L40
	ldr	r2, [r7, #4]
	ldr	r3, .L46+44
	cmp	r2, r3
	beq	.L40
	.loc 1 363 0 discriminator 3
	ldr	r2, [r7, #4]
	ldr	r3, .L46+48
	cmp	r2, r3
	bne	.L41
.L40:
	.loc 1 363 0 discriminator 1
	movs	r3, #1
	b	.L42
.L41:
	movs	r3, #0
.L42:
	.loc 1 363 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 364 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7]
	cmp	r3, #0
	beq	.L43
	.loc 1 364 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7]
	cmp	r3, #1
	bne	.L44
.L43:
	.loc 1 364 0 discriminator 1
	movs	r3, #1
	b	.L45
.L44:
	.loc 1 364 0 discriminator 3
	movs	r3, #0
.L45:
	.loc 1 364 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 366 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #2]	@ movhi
	strh	r2, [r3, #40]	@ movhi
	.loc 1 368 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r2, [r7]	@ movhi
	strh	r2, [r3, #20]	@ movhi
	.loc 1 369 0 discriminator 4
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L47:
	.align	2
.L46:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073745920
	.word	1073746944
	.word	1073808384
	.word	1073823744
	.word	1073824768
	.word	1073825792
	.word	1073747968
	.word	1073748992
	.word	1073750016
.LFE114:
	.size	TIM_PrescalerConfig, .-TIM_PrescalerConfig
	.section	.text.TIM_CounterModeConfig,"ax",%progbits
	.align	2
	.global	TIM_CounterModeConfig
	.thumb
	.thumb_func
	.type	TIM_CounterModeConfig, %function
TIM_CounterModeConfig:
.LFB115:
	.loc 1 384 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI12:
	sub	sp, sp, #16
.LCFI13:
	add	r7, sp, #0
.LCFI14:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 385 0
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	.loc 1 388 0
	ldr	r2, [r7, #4]
	ldr	r3, .L55
	cmp	r2, r3
	beq	.L49
	.loc 1 388 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L49
	.loc 1 388 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L55+4
	cmp	r2, r3
	beq	.L49
	ldr	r2, [r7, #4]
	ldr	r3, .L55+8
	cmp	r2, r3
	beq	.L49
	ldr	r2, [r7, #4]
	ldr	r3, .L55+12
	cmp	r2, r3
	beq	.L49
	ldr	r2, [r7, #4]
	ldr	r3, .L55+16
	cmp	r2, r3
	bne	.L50
.L49:
	movs	r3, #1
	b	.L51
.L50:
	.loc 1 388 0 discriminator 3
	movs	r3, #0
.L51:
	.loc 1 388 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 389 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	beq	.L52
	.loc 1 389 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #16
	beq	.L52
	.loc 1 389 0 discriminator 1
	ldrh	r3, [r7, #2]
	cmp	r3, #32
	beq	.L52
	ldrh	r3, [r7, #2]
	cmp	r3, #64
	beq	.L52
	ldrh	r3, [r7, #2]
	cmp	r3, #96
	bne	.L53
.L52:
	movs	r3, #1
	b	.L54
.L53:
	.loc 1 389 0 discriminator 3
	movs	r3, #0
.L54:
	.loc 1 389 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 391 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3]	@ movhi
	strh	r3, [r7, #14]	@ movhi
	.loc 1 394 0 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #112
	strh	r3, [r7, #14]	@ movhi
	.loc 1 397 0 discriminator 4
	ldrh	r2, [r7, #14]	@ movhi
	ldrh	r3, [r7, #2]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 400 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #14]	@ movhi
	strh	r2, [r3]	@ movhi
	.loc 1 401 0 discriminator 4
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L56:
	.align	2
.L55:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
.LFE115:
	.size	TIM_CounterModeConfig, .-TIM_CounterModeConfig
	.section	.text.TIM_SetCounter,"ax",%progbits
	.align	2
	.global	TIM_SetCounter
	.thumb
	.thumb_func
	.type	TIM_SetCounter, %function
TIM_SetCounter:
.LFB116:
	.loc 1 410 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI15:
	sub	sp, sp, #8
.LCFI16:
	add	r7, sp, #0
.LCFI17:
	str	r0, [r7, #4]
	str	r1, [r7]
	.loc 1 412 0
	ldr	r2, [r7, #4]
	ldr	r3, .L61
	cmp	r2, r3
	beq	.L58
	.loc 1 412 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L58
	.loc 1 412 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L61+4
	cmp	r2, r3
	beq	.L58
	ldr	r2, [r7, #4]
	ldr	r3, .L61+8
	cmp	r2, r3
	beq	.L58
	ldr	r2, [r7, #4]
	ldr	r3, .L61+12
	cmp	r2, r3
	beq	.L58
	ldr	r2, [r7, #4]
	ldr	r3, .L61+16
	cmp	r2, r3
	beq	.L58
	ldr	r2, [r7, #4]
	ldr	r3, .L61+20
	cmp	r2, r3
	beq	.L58
	ldr	r2, [r7, #4]
	ldr	r3, .L61+24
	cmp	r2, r3
	beq	.L58
	ldr	r2, [r7, #4]
	ldr	r3, .L61+28
	cmp	r2, r3
	beq	.L58
	ldr	r2, [r7, #4]
	ldr	r3, .L61+32
	cmp	r2, r3
	beq	.L58
	ldr	r2, [r7, #4]
	ldr	r3, .L61+36
	cmp	r2, r3
	beq	.L58
	ldr	r2, [r7, #4]
	ldr	r3, .L61+40
	cmp	r2, r3
	beq	.L58
	ldr	r2, [r7, #4]
	ldr	r3, .L61+44
	cmp	r2, r3
	beq	.L58
	.loc 1 412 0 discriminator 3
	ldr	r2, [r7, #4]
	ldr	r3, .L61+48
	cmp	r2, r3
	bne	.L59
.L58:
	.loc 1 412 0 discriminator 1
	movs	r3, #1
	b	.L60
.L59:
	movs	r3, #0
.L60:
	.loc 1 412 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 415 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r2, [r7]
	str	r2, [r3, #36]
	.loc 1 416 0 discriminator 4
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L62:
	.align	2
.L61:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073745920
	.word	1073746944
	.word	1073808384
	.word	1073823744
	.word	1073824768
	.word	1073825792
	.word	1073747968
	.word	1073748992
	.word	1073750016
.LFE116:
	.size	TIM_SetCounter, .-TIM_SetCounter
	.section	.text.TIM_SetAutoreload,"ax",%progbits
	.align	2
	.global	TIM_SetAutoreload
	.thumb
	.thumb_func
	.type	TIM_SetAutoreload, %function
TIM_SetAutoreload:
.LFB117:
	.loc 1 425 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI18:
	sub	sp, sp, #8
.LCFI19:
	add	r7, sp, #0
.LCFI20:
	str	r0, [r7, #4]
	str	r1, [r7]
	.loc 1 427 0
	ldr	r2, [r7, #4]
	ldr	r3, .L67
	cmp	r2, r3
	beq	.L64
	.loc 1 427 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L64
	.loc 1 427 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L67+4
	cmp	r2, r3
	beq	.L64
	ldr	r2, [r7, #4]
	ldr	r3, .L67+8
	cmp	r2, r3
	beq	.L64
	ldr	r2, [r7, #4]
	ldr	r3, .L67+12
	cmp	r2, r3
	beq	.L64
	ldr	r2, [r7, #4]
	ldr	r3, .L67+16
	cmp	r2, r3
	beq	.L64
	ldr	r2, [r7, #4]
	ldr	r3, .L67+20
	cmp	r2, r3
	beq	.L64
	ldr	r2, [r7, #4]
	ldr	r3, .L67+24
	cmp	r2, r3
	beq	.L64
	ldr	r2, [r7, #4]
	ldr	r3, .L67+28
	cmp	r2, r3
	beq	.L64
	ldr	r2, [r7, #4]
	ldr	r3, .L67+32
	cmp	r2, r3
	beq	.L64
	ldr	r2, [r7, #4]
	ldr	r3, .L67+36
	cmp	r2, r3
	beq	.L64
	ldr	r2, [r7, #4]
	ldr	r3, .L67+40
	cmp	r2, r3
	beq	.L64
	ldr	r2, [r7, #4]
	ldr	r3, .L67+44
	cmp	r2, r3
	beq	.L64
	.loc 1 427 0 discriminator 3
	ldr	r2, [r7, #4]
	ldr	r3, .L67+48
	cmp	r2, r3
	bne	.L65
.L64:
	.loc 1 427 0 discriminator 1
	movs	r3, #1
	b	.L66
.L65:
	movs	r3, #0
.L66:
	.loc 1 427 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 430 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r2, [r7]
	str	r2, [r3, #44]
	.loc 1 431 0 discriminator 4
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L68:
	.align	2
.L67:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073745920
	.word	1073746944
	.word	1073808384
	.word	1073823744
	.word	1073824768
	.word	1073825792
	.word	1073747968
	.word	1073748992
	.word	1073750016
.LFE117:
	.size	TIM_SetAutoreload, .-TIM_SetAutoreload
	.section	.text.TIM_GetCounter,"ax",%progbits
	.align	2
	.global	TIM_GetCounter
	.thumb
	.thumb_func
	.type	TIM_GetCounter, %function
TIM_GetCounter:
.LFB118:
	.loc 1 439 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI21:
	sub	sp, sp, #8
.LCFI22:
	add	r7, sp, #0
.LCFI23:
	str	r0, [r7, #4]
	.loc 1 441 0
	ldr	r2, [r7, #4]
	ldr	r3, .L74
	cmp	r2, r3
	beq	.L70
	.loc 1 441 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L70
	.loc 1 441 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L74+4
	cmp	r2, r3
	beq	.L70
	ldr	r2, [r7, #4]
	ldr	r3, .L74+8
	cmp	r2, r3
	beq	.L70
	ldr	r2, [r7, #4]
	ldr	r3, .L74+12
	cmp	r2, r3
	beq	.L70
	ldr	r2, [r7, #4]
	ldr	r3, .L74+16
	cmp	r2, r3
	beq	.L70
	ldr	r2, [r7, #4]
	ldr	r3, .L74+20
	cmp	r2, r3
	beq	.L70
	ldr	r2, [r7, #4]
	ldr	r3, .L74+24
	cmp	r2, r3
	beq	.L70
	ldr	r2, [r7, #4]
	ldr	r3, .L74+28
	cmp	r2, r3
	beq	.L70
	ldr	r2, [r7, #4]
	ldr	r3, .L74+32
	cmp	r2, r3
	beq	.L70
	ldr	r2, [r7, #4]
	ldr	r3, .L74+36
	cmp	r2, r3
	beq	.L70
	ldr	r2, [r7, #4]
	ldr	r3, .L74+40
	cmp	r2, r3
	beq	.L70
	ldr	r2, [r7, #4]
	ldr	r3, .L74+44
	cmp	r2, r3
	beq	.L70
	.loc 1 441 0 discriminator 3
	ldr	r2, [r7, #4]
	ldr	r3, .L74+48
	cmp	r2, r3
	bne	.L71
.L70:
	.loc 1 441 0 discriminator 1
	movs	r3, #1
	b	.L72
.L71:
	movs	r3, #0
.L72:
	.loc 1 441 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 444 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #36]
	.loc 1 445 0 discriminator 4
	mov	r0, r3
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L75:
	.align	2
.L74:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073745920
	.word	1073746944
	.word	1073808384
	.word	1073823744
	.word	1073824768
	.word	1073825792
	.word	1073747968
	.word	1073748992
	.word	1073750016
.LFE118:
	.size	TIM_GetCounter, .-TIM_GetCounter
	.section	.text.TIM_GetPrescaler,"ax",%progbits
	.align	2
	.global	TIM_GetPrescaler
	.thumb
	.thumb_func
	.type	TIM_GetPrescaler, %function
TIM_GetPrescaler:
.LFB119:
	.loc 1 453 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI24:
	sub	sp, sp, #8
.LCFI25:
	add	r7, sp, #0
.LCFI26:
	str	r0, [r7, #4]
	.loc 1 455 0
	ldr	r2, [r7, #4]
	ldr	r3, .L81
	cmp	r2, r3
	beq	.L77
	.loc 1 455 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L77
	.loc 1 455 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L81+4
	cmp	r2, r3
	beq	.L77
	ldr	r2, [r7, #4]
	ldr	r3, .L81+8
	cmp	r2, r3
	beq	.L77
	ldr	r2, [r7, #4]
	ldr	r3, .L81+12
	cmp	r2, r3
	beq	.L77
	ldr	r2, [r7, #4]
	ldr	r3, .L81+16
	cmp	r2, r3
	beq	.L77
	ldr	r2, [r7, #4]
	ldr	r3, .L81+20
	cmp	r2, r3
	beq	.L77
	ldr	r2, [r7, #4]
	ldr	r3, .L81+24
	cmp	r2, r3
	beq	.L77
	ldr	r2, [r7, #4]
	ldr	r3, .L81+28
	cmp	r2, r3
	beq	.L77
	ldr	r2, [r7, #4]
	ldr	r3, .L81+32
	cmp	r2, r3
	beq	.L77
	ldr	r2, [r7, #4]
	ldr	r3, .L81+36
	cmp	r2, r3
	beq	.L77
	ldr	r2, [r7, #4]
	ldr	r3, .L81+40
	cmp	r2, r3
	beq	.L77
	ldr	r2, [r7, #4]
	ldr	r3, .L81+44
	cmp	r2, r3
	beq	.L77
	.loc 1 455 0 discriminator 3
	ldr	r2, [r7, #4]
	ldr	r3, .L81+48
	cmp	r2, r3
	bne	.L78
.L77:
	.loc 1 455 0 discriminator 1
	movs	r3, #1
	b	.L79
.L78:
	movs	r3, #0
.L79:
	.loc 1 455 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 458 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #40]	@ movhi
	uxth	r3, r3
	.loc 1 459 0 discriminator 4
	mov	r0, r3
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L82:
	.align	2
.L81:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073745920
	.word	1073746944
	.word	1073808384
	.word	1073823744
	.word	1073824768
	.word	1073825792
	.word	1073747968
	.word	1073748992
	.word	1073750016
.LFE119:
	.size	TIM_GetPrescaler, .-TIM_GetPrescaler
	.section	.text.TIM_UpdateDisableConfig,"ax",%progbits
	.align	2
	.global	TIM_UpdateDisableConfig
	.thumb
	.thumb_func
	.type	TIM_UpdateDisableConfig, %function
TIM_UpdateDisableConfig:
.LFB120:
	.loc 1 469 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI27:
	sub	sp, sp, #8
.LCFI28:
	add	r7, sp, #0
.LCFI29:
	str	r0, [r7, #4]
	mov	r3, r1
	strb	r3, [r7, #3]
	.loc 1 471 0
	ldr	r2, [r7, #4]
	ldr	r3, .L92
	cmp	r2, r3
	beq	.L84
	.loc 1 471 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L84
	.loc 1 471 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L92+4
	cmp	r2, r3
	beq	.L84
	ldr	r2, [r7, #4]
	ldr	r3, .L92+8
	cmp	r2, r3
	beq	.L84
	ldr	r2, [r7, #4]
	ldr	r3, .L92+12
	cmp	r2, r3
	beq	.L84
	ldr	r2, [r7, #4]
	ldr	r3, .L92+16
	cmp	r2, r3
	beq	.L84
	ldr	r2, [r7, #4]
	ldr	r3, .L92+20
	cmp	r2, r3
	beq	.L84
	ldr	r2, [r7, #4]
	ldr	r3, .L92+24
	cmp	r2, r3
	beq	.L84
	ldr	r2, [r7, #4]
	ldr	r3, .L92+28
	cmp	r2, r3
	beq	.L84
	ldr	r2, [r7, #4]
	ldr	r3, .L92+32
	cmp	r2, r3
	beq	.L84
	ldr	r2, [r7, #4]
	ldr	r3, .L92+36
	cmp	r2, r3
	beq	.L84
	ldr	r2, [r7, #4]
	ldr	r3, .L92+40
	cmp	r2, r3
	beq	.L84
	ldr	r2, [r7, #4]
	ldr	r3, .L92+44
	cmp	r2, r3
	beq	.L84
	.loc 1 471 0 discriminator 3
	ldr	r2, [r7, #4]
	ldr	r3, .L92+48
	cmp	r2, r3
	bne	.L85
.L84:
	.loc 1 471 0 discriminator 1
	movs	r3, #1
	b	.L86
.L85:
	movs	r3, #0
.L86:
	.loc 1 471 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 472 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L87
	.loc 1 472 0 is_stmt 0 discriminator 2
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #1
	bne	.L88
.L87:
	.loc 1 472 0 discriminator 1
	movs	r3, #1
	b	.L89
.L88:
	.loc 1 472 0 discriminator 3
	movs	r3, #0
.L89:
	.loc 1 472 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 474 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L90
	.loc 1 477 0
	ldr	r3, [r7, #4]
	ldrh	r3, [r3]	@ movhi
	uxth	r3, r3
	orr	r3, r3, #2
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3]	@ movhi
	b	.L83
.L90:
	.loc 1 482 0
	ldr	r3, [r7, #4]
	ldrh	r3, [r3]	@ movhi
	uxth	r3, r3
	bic	r3, r3, #2
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3]	@ movhi
.L83:
	.loc 1 484 0
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L93:
	.align	2
.L92:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073745920
	.word	1073746944
	.word	1073808384
	.word	1073823744
	.word	1073824768
	.word	1073825792
	.word	1073747968
	.word	1073748992
	.word	1073750016
.LFE120:
	.size	TIM_UpdateDisableConfig, .-TIM_UpdateDisableConfig
	.section	.text.TIM_UpdateRequestConfig,"ax",%progbits
	.align	2
	.global	TIM_UpdateRequestConfig
	.thumb
	.thumb_func
	.type	TIM_UpdateRequestConfig, %function
TIM_UpdateRequestConfig:
.LFB121:
	.loc 1 498 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI30:
	sub	sp, sp, #8
.LCFI31:
	add	r7, sp, #0
.LCFI32:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 500 0
	ldr	r2, [r7, #4]
	ldr	r3, .L103
	cmp	r2, r3
	beq	.L95
	.loc 1 500 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L95
	.loc 1 500 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L103+4
	cmp	r2, r3
	beq	.L95
	ldr	r2, [r7, #4]
	ldr	r3, .L103+8
	cmp	r2, r3
	beq	.L95
	ldr	r2, [r7, #4]
	ldr	r3, .L103+12
	cmp	r2, r3
	beq	.L95
	ldr	r2, [r7, #4]
	ldr	r3, .L103+16
	cmp	r2, r3
	beq	.L95
	ldr	r2, [r7, #4]
	ldr	r3, .L103+20
	cmp	r2, r3
	beq	.L95
	ldr	r2, [r7, #4]
	ldr	r3, .L103+24
	cmp	r2, r3
	beq	.L95
	ldr	r2, [r7, #4]
	ldr	r3, .L103+28
	cmp	r2, r3
	beq	.L95
	ldr	r2, [r7, #4]
	ldr	r3, .L103+32
	cmp	r2, r3
	beq	.L95
	ldr	r2, [r7, #4]
	ldr	r3, .L103+36
	cmp	r2, r3
	beq	.L95
	ldr	r2, [r7, #4]
	ldr	r3, .L103+40
	cmp	r2, r3
	beq	.L95
	ldr	r2, [r7, #4]
	ldr	r3, .L103+44
	cmp	r2, r3
	beq	.L95
	.loc 1 500 0 discriminator 3
	ldr	r2, [r7, #4]
	ldr	r3, .L103+48
	cmp	r2, r3
	bne	.L96
.L95:
	.loc 1 500 0 discriminator 1
	movs	r3, #1
	b	.L97
.L96:
	movs	r3, #0
.L97:
	.loc 1 500 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 501 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	beq	.L98
	.loc 1 501 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #1
	bne	.L99
.L98:
	.loc 1 501 0 discriminator 1
	movs	r3, #1
	b	.L100
.L99:
	.loc 1 501 0 discriminator 3
	movs	r3, #0
.L100:
	.loc 1 501 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 503 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	beq	.L101
	.loc 1 506 0
	ldr	r3, [r7, #4]
	ldrh	r3, [r3]	@ movhi
	uxth	r3, r3
	orr	r3, r3, #4
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3]	@ movhi
	b	.L94
.L101:
	.loc 1 511 0
	ldr	r3, [r7, #4]
	ldrh	r3, [r3]	@ movhi
	uxth	r3, r3
	bic	r3, r3, #4
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3]	@ movhi
.L94:
	.loc 1 513 0
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L104:
	.align	2
.L103:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073745920
	.word	1073746944
	.word	1073808384
	.word	1073823744
	.word	1073824768
	.word	1073825792
	.word	1073747968
	.word	1073748992
	.word	1073750016
.LFE121:
	.size	TIM_UpdateRequestConfig, .-TIM_UpdateRequestConfig
	.section	.text.TIM_ARRPreloadConfig,"ax",%progbits
	.align	2
	.global	TIM_ARRPreloadConfig
	.thumb
	.thumb_func
	.type	TIM_ARRPreloadConfig, %function
TIM_ARRPreloadConfig:
.LFB122:
	.loc 1 523 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI33:
	sub	sp, sp, #8
.LCFI34:
	add	r7, sp, #0
.LCFI35:
	str	r0, [r7, #4]
	mov	r3, r1
	strb	r3, [r7, #3]
	.loc 1 525 0
	ldr	r2, [r7, #4]
	ldr	r3, .L114
	cmp	r2, r3
	beq	.L106
	.loc 1 525 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L106
	.loc 1 525 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L114+4
	cmp	r2, r3
	beq	.L106
	ldr	r2, [r7, #4]
	ldr	r3, .L114+8
	cmp	r2, r3
	beq	.L106
	ldr	r2, [r7, #4]
	ldr	r3, .L114+12
	cmp	r2, r3
	beq	.L106
	ldr	r2, [r7, #4]
	ldr	r3, .L114+16
	cmp	r2, r3
	beq	.L106
	ldr	r2, [r7, #4]
	ldr	r3, .L114+20
	cmp	r2, r3
	beq	.L106
	ldr	r2, [r7, #4]
	ldr	r3, .L114+24
	cmp	r2, r3
	beq	.L106
	ldr	r2, [r7, #4]
	ldr	r3, .L114+28
	cmp	r2, r3
	beq	.L106
	ldr	r2, [r7, #4]
	ldr	r3, .L114+32
	cmp	r2, r3
	beq	.L106
	ldr	r2, [r7, #4]
	ldr	r3, .L114+36
	cmp	r2, r3
	beq	.L106
	ldr	r2, [r7, #4]
	ldr	r3, .L114+40
	cmp	r2, r3
	beq	.L106
	ldr	r2, [r7, #4]
	ldr	r3, .L114+44
	cmp	r2, r3
	beq	.L106
	.loc 1 525 0 discriminator 3
	ldr	r2, [r7, #4]
	ldr	r3, .L114+48
	cmp	r2, r3
	bne	.L107
.L106:
	.loc 1 525 0 discriminator 1
	movs	r3, #1
	b	.L108
.L107:
	movs	r3, #0
.L108:
	.loc 1 525 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 526 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L109
	.loc 1 526 0 is_stmt 0 discriminator 2
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #1
	bne	.L110
.L109:
	.loc 1 526 0 discriminator 1
	movs	r3, #1
	b	.L111
.L110:
	.loc 1 526 0 discriminator 3
	movs	r3, #0
.L111:
	.loc 1 526 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 528 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L112
	.loc 1 531 0
	ldr	r3, [r7, #4]
	ldrh	r3, [r3]	@ movhi
	uxth	r3, r3
	orr	r3, r3, #128
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3]	@ movhi
	b	.L105
.L112:
	.loc 1 536 0
	ldr	r3, [r7, #4]
	ldrh	r3, [r3]	@ movhi
	uxth	r3, r3
	bic	r3, r3, #128
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3]	@ movhi
.L105:
	.loc 1 538 0
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L115:
	.align	2
.L114:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073745920
	.word	1073746944
	.word	1073808384
	.word	1073823744
	.word	1073824768
	.word	1073825792
	.word	1073747968
	.word	1073748992
	.word	1073750016
.LFE122:
	.size	TIM_ARRPreloadConfig, .-TIM_ARRPreloadConfig
	.section	.text.TIM_SelectOnePulseMode,"ax",%progbits
	.align	2
	.global	TIM_SelectOnePulseMode
	.thumb
	.thumb_func
	.type	TIM_SelectOnePulseMode, %function
TIM_SelectOnePulseMode:
.LFB123:
	.loc 1 550 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI36:
	sub	sp, sp, #8
.LCFI37:
	add	r7, sp, #0
.LCFI38:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 552 0
	ldr	r2, [r7, #4]
	ldr	r3, .L123
	cmp	r2, r3
	beq	.L117
	.loc 1 552 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L117
	.loc 1 552 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L123+4
	cmp	r2, r3
	beq	.L117
	ldr	r2, [r7, #4]
	ldr	r3, .L123+8
	cmp	r2, r3
	beq	.L117
	ldr	r2, [r7, #4]
	ldr	r3, .L123+12
	cmp	r2, r3
	beq	.L117
	ldr	r2, [r7, #4]
	ldr	r3, .L123+16
	cmp	r2, r3
	beq	.L117
	ldr	r2, [r7, #4]
	ldr	r3, .L123+20
	cmp	r2, r3
	beq	.L117
	ldr	r2, [r7, #4]
	ldr	r3, .L123+24
	cmp	r2, r3
	beq	.L117
	ldr	r2, [r7, #4]
	ldr	r3, .L123+28
	cmp	r2, r3
	beq	.L117
	ldr	r2, [r7, #4]
	ldr	r3, .L123+32
	cmp	r2, r3
	beq	.L117
	ldr	r2, [r7, #4]
	ldr	r3, .L123+36
	cmp	r2, r3
	beq	.L117
	ldr	r2, [r7, #4]
	ldr	r3, .L123+40
	cmp	r2, r3
	beq	.L117
	ldr	r2, [r7, #4]
	ldr	r3, .L123+44
	cmp	r2, r3
	beq	.L117
	.loc 1 552 0 discriminator 3
	ldr	r2, [r7, #4]
	ldr	r3, .L123+48
	cmp	r2, r3
	bne	.L118
.L117:
	.loc 1 552 0 discriminator 1
	movs	r3, #1
	b	.L119
.L118:
	movs	r3, #0
.L119:
	.loc 1 552 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 553 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #8
	beq	.L120
	.loc 1 553 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	bne	.L121
.L120:
	.loc 1 553 0 discriminator 1
	movs	r3, #1
	b	.L122
.L121:
	.loc 1 553 0 discriminator 3
	movs	r3, #0
.L122:
	.loc 1 553 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 556 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3]	@ movhi
	uxth	r3, r3
	bic	r3, r3, #8
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3]	@ movhi
	.loc 1 559 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3]	@ movhi
	uxth	r2, r3
	ldrh	r3, [r7, #2]	@ movhi
	orrs	r3, r3, r2
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3]	@ movhi
	.loc 1 560 0 discriminator 4
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L124:
	.align	2
.L123:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073745920
	.word	1073746944
	.word	1073808384
	.word	1073823744
	.word	1073824768
	.word	1073825792
	.word	1073747968
	.word	1073748992
	.word	1073750016
.LFE123:
	.size	TIM_SelectOnePulseMode, .-TIM_SelectOnePulseMode
	.section	.text.TIM_SetClockDivision,"ax",%progbits
	.align	2
	.global	TIM_SetClockDivision
	.thumb
	.thumb_func
	.type	TIM_SetClockDivision, %function
TIM_SetClockDivision:
.LFB124:
	.loc 1 573 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI39:
	sub	sp, sp, #8
.LCFI40:
	add	r7, sp, #0
.LCFI41:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 575 0
	ldr	r2, [r7, #4]
	ldr	r3, .L132
	cmp	r2, r3
	beq	.L126
	.loc 1 575 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L126
	.loc 1 575 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L132+4
	cmp	r2, r3
	beq	.L126
	ldr	r2, [r7, #4]
	ldr	r3, .L132+8
	cmp	r2, r3
	beq	.L126
	ldr	r2, [r7, #4]
	ldr	r3, .L132+12
	cmp	r2, r3
	beq	.L126
	ldr	r2, [r7, #4]
	ldr	r3, .L132+16
	cmp	r2, r3
	beq	.L126
	ldr	r2, [r7, #4]
	ldr	r3, .L132+20
	cmp	r2, r3
	beq	.L126
	ldr	r2, [r7, #4]
	ldr	r3, .L132+24
	cmp	r2, r3
	beq	.L126
	ldr	r2, [r7, #4]
	ldr	r3, .L132+28
	cmp	r2, r3
	beq	.L126
	ldr	r2, [r7, #4]
	ldr	r3, .L132+32
	cmp	r2, r3
	beq	.L126
	ldr	r2, [r7, #4]
	ldr	r3, .L132+36
	cmp	r2, r3
	beq	.L126
	ldr	r2, [r7, #4]
	ldr	r3, .L132+40
	cmp	r2, r3
	bne	.L127
.L126:
	movs	r3, #1
	b	.L128
.L127:
	.loc 1 575 0 discriminator 3
	movs	r3, #0
.L128:
	.loc 1 575 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 576 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	beq	.L129
	.loc 1 576 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #256
	beq	.L129
	.loc 1 576 0 discriminator 1
	ldrh	r3, [r7, #2]
	cmp	r3, #512
	bne	.L130
.L129:
	movs	r3, #1
	b	.L131
.L130:
	.loc 1 576 0 discriminator 3
	movs	r3, #0
.L131:
	.loc 1 576 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 579 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3]	@ movhi
	uxth	r3, r3
	bic	r3, r3, #768
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3]	@ movhi
	.loc 1 582 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3]	@ movhi
	uxth	r2, r3
	ldrh	r3, [r7, #2]	@ movhi
	orrs	r3, r3, r2
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3]	@ movhi
	.loc 1 583 0 discriminator 4
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L133:
	.align	2
.L132:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
	.word	1073823744
	.word	1073824768
	.word	1073825792
	.word	1073747968
	.word	1073748992
	.word	1073750016
.LFE124:
	.size	TIM_SetClockDivision, .-TIM_SetClockDivision
	.section	.text.TIM_Cmd,"ax",%progbits
	.align	2
	.global	TIM_Cmd
	.thumb
	.thumb_func
	.type	TIM_Cmd, %function
TIM_Cmd:
.LFB125:
	.loc 1 593 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI42:
	sub	sp, sp, #8
.LCFI43:
	add	r7, sp, #0
.LCFI44:
	str	r0, [r7, #4]
	mov	r3, r1
	strb	r3, [r7, #3]
	.loc 1 595 0
	ldr	r2, [r7, #4]
	ldr	r3, .L143
	cmp	r2, r3
	beq	.L135
	.loc 1 595 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L135
	.loc 1 595 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L143+4
	cmp	r2, r3
	beq	.L135
	ldr	r2, [r7, #4]
	ldr	r3, .L143+8
	cmp	r2, r3
	beq	.L135
	ldr	r2, [r7, #4]
	ldr	r3, .L143+12
	cmp	r2, r3
	beq	.L135
	ldr	r2, [r7, #4]
	ldr	r3, .L143+16
	cmp	r2, r3
	beq	.L135
	ldr	r2, [r7, #4]
	ldr	r3, .L143+20
	cmp	r2, r3
	beq	.L135
	ldr	r2, [r7, #4]
	ldr	r3, .L143+24
	cmp	r2, r3
	beq	.L135
	ldr	r2, [r7, #4]
	ldr	r3, .L143+28
	cmp	r2, r3
	beq	.L135
	ldr	r2, [r7, #4]
	ldr	r3, .L143+32
	cmp	r2, r3
	beq	.L135
	ldr	r2, [r7, #4]
	ldr	r3, .L143+36
	cmp	r2, r3
	beq	.L135
	ldr	r2, [r7, #4]
	ldr	r3, .L143+40
	cmp	r2, r3
	beq	.L135
	ldr	r2, [r7, #4]
	ldr	r3, .L143+44
	cmp	r2, r3
	beq	.L135
	.loc 1 595 0 discriminator 3
	ldr	r2, [r7, #4]
	ldr	r3, .L143+48
	cmp	r2, r3
	bne	.L136
.L135:
	.loc 1 595 0 discriminator 1
	movs	r3, #1
	b	.L137
.L136:
	movs	r3, #0
.L137:
	.loc 1 595 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 596 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L138
	.loc 1 596 0 is_stmt 0 discriminator 2
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #1
	bne	.L139
.L138:
	.loc 1 596 0 discriminator 1
	movs	r3, #1
	b	.L140
.L139:
	.loc 1 596 0 discriminator 3
	movs	r3, #0
.L140:
	.loc 1 596 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 598 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L141
	.loc 1 601 0
	ldr	r3, [r7, #4]
	ldrh	r3, [r3]	@ movhi
	uxth	r3, r3
	orr	r3, r3, #1
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3]	@ movhi
	b	.L134
.L141:
	.loc 1 606 0
	ldr	r3, [r7, #4]
	ldrh	r3, [r3]	@ movhi
	uxth	r3, r3
	bic	r3, r3, #1
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3]	@ movhi
.L134:
	.loc 1 608 0
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L144:
	.align	2
.L143:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073745920
	.word	1073746944
	.word	1073808384
	.word	1073823744
	.word	1073824768
	.word	1073825792
	.word	1073747968
	.word	1073748992
	.word	1073750016
.LFE125:
	.size	TIM_Cmd, .-TIM_Cmd
	.section	.text.TIM_OC1Init,"ax",%progbits
	.align	2
	.global	TIM_OC1Init
	.thumb
	.thumb_func
	.type	TIM_OC1Init, %function
TIM_OC1Init:
.LFB126:
	.loc 1 674 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI45:
	sub	sp, sp, #16
.LCFI46:
	add	r7, sp, #0
.LCFI47:
	str	r0, [r7, #4]
	str	r1, [r7]
	.loc 1 675 0
	movs	r3, #0
	strh	r3, [r7, #10]	@ movhi
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	movs	r3, #0
	strh	r3, [r7, #12]	@ movhi
	.loc 1 678 0
	ldr	r2, [r7, #4]
	ldr	r3, .L172
	cmp	r2, r3
	beq	.L146
	.loc 1 678 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L146
	.loc 1 678 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L172+4
	cmp	r2, r3
	beq	.L146
	ldr	r2, [r7, #4]
	ldr	r3, .L172+8
	cmp	r2, r3
	beq	.L146
	ldr	r2, [r7, #4]
	ldr	r3, .L172+12
	cmp	r2, r3
	beq	.L146
	ldr	r2, [r7, #4]
	ldr	r3, .L172+16
	cmp	r2, r3
	beq	.L146
	ldr	r2, [r7, #4]
	ldr	r3, .L172+20
	cmp	r2, r3
	beq	.L146
	ldr	r2, [r7, #4]
	ldr	r3, .L172+24
	cmp	r2, r3
	beq	.L146
	ldr	r2, [r7, #4]
	ldr	r3, .L172+28
	cmp	r2, r3
	beq	.L146
	ldr	r2, [r7, #4]
	ldr	r3, .L172+32
	cmp	r2, r3
	beq	.L146
	ldr	r2, [r7, #4]
	ldr	r3, .L172+36
	cmp	r2, r3
	beq	.L146
	ldr	r2, [r7, #4]
	ldr	r3, .L172+40
	cmp	r2, r3
	bne	.L147
.L146:
	movs	r3, #1
	b	.L148
.L147:
	.loc 1 678 0 discriminator 3
	movs	r3, #0
.L148:
	.loc 1 678 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 679 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3]
	cmp	r3, #0
	beq	.L149
	.loc 1 679 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3]
	cmp	r3, #16
	beq	.L149
	.loc 1 679 0 discriminator 1
	ldr	r3, [r7]
	ldrh	r3, [r3]
	cmp	r3, #32
	beq	.L149
	ldr	r3, [r7]
	ldrh	r3, [r3]
	cmp	r3, #48
	beq	.L149
	ldr	r3, [r7]
	ldrh	r3, [r3]
	cmp	r3, #96
	beq	.L149
	ldr	r3, [r7]
	ldrh	r3, [r3]
	cmp	r3, #112
	bne	.L150
.L149:
	movs	r3, #1
	b	.L151
.L150:
	.loc 1 679 0 discriminator 3
	movs	r3, #0
.L151:
	.loc 1 679 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 680 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #2]
	cmp	r3, #0
	beq	.L152
	.loc 1 680 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3, #2]
	cmp	r3, #1
	bne	.L153
.L152:
	.loc 1 680 0 discriminator 1
	movs	r3, #1
	b	.L154
.L153:
	.loc 1 680 0 discriminator 3
	movs	r3, #0
.L154:
	.loc 1 680 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 681 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #12]
	cmp	r3, #0
	beq	.L155
	.loc 1 681 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3, #12]
	cmp	r3, #2
	bne	.L156
.L155:
	.loc 1 681 0 discriminator 1
	movs	r3, #1
	b	.L157
.L156:
	.loc 1 681 0 discriminator 3
	movs	r3, #0
.L157:
	.loc 1 681 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 684 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #32]	@ movhi
	uxth	r3, r3
	bic	r3, r3, #1
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #32]	@ movhi
	.loc 1 687 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #32]	@ movhi
	strh	r3, [r7, #14]	@ movhi
	.loc 1 689 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #4]	@ movhi
	strh	r3, [r7, #12]	@ movhi
	.loc 1 692 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #24]	@ movhi
	strh	r3, [r7, #10]	@ movhi
	.loc 1 695 0 discriminator 4
	ldrh	r3, [r7, #10]	@ movhi
	bic	r3, r3, #112
	strh	r3, [r7, #10]	@ movhi
	.loc 1 696 0 discriminator 4
	ldrh	r3, [r7, #10]	@ movhi
	bic	r3, r3, #3
	strh	r3, [r7, #10]	@ movhi
	.loc 1 698 0 discriminator 4
	ldr	r3, [r7]
	ldrh	r2, [r3]
	ldrh	r3, [r7, #10]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #10]	@ movhi
	.loc 1 701 0 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 703 0 discriminator 4
	ldr	r3, [r7]
	ldrh	r2, [r3, #12]
	ldrh	r3, [r7, #14]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 706 0 discriminator 4
	ldr	r3, [r7]
	ldrh	r2, [r3, #2]
	ldrh	r3, [r7, #14]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 708 0 discriminator 4
	ldr	r2, [r7, #4]
	ldr	r3, .L172
	cmp	r2, r3
	beq	.L158
	.loc 1 708 0 is_stmt 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L172+16
	cmp	r2, r3
	bne	.L159
.L158:
	.loc 1 710 0 is_stmt 1
	ldr	r3, [r7]
	ldrh	r3, [r3, #4]
	cmp	r3, #0
	beq	.L160
	.loc 1 710 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3, #4]
	cmp	r3, #4
	bne	.L161
.L160:
	.loc 1 710 0 discriminator 1
	movs	r3, #1
	b	.L162
.L161:
	.loc 1 710 0 discriminator 3
	movs	r3, #0
.L162:
	.loc 1 710 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 711 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #14]
	cmp	r3, #0
	beq	.L163
	.loc 1 711 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3, #14]
	cmp	r3, #8
	bne	.L164
.L163:
	.loc 1 711 0 discriminator 1
	movs	r3, #1
	b	.L165
.L164:
	.loc 1 711 0 discriminator 3
	movs	r3, #0
.L165:
	.loc 1 711 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 712 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #18]
	cmp	r3, #512
	beq	.L166
	.loc 1 712 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3, #18]
	cmp	r3, #0
	bne	.L167
.L166:
	.loc 1 712 0 discriminator 1
	movs	r3, #1
	b	.L168
.L167:
	.loc 1 712 0 discriminator 3
	movs	r3, #0
.L168:
	.loc 1 712 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 713 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #16]
	cmp	r3, #256
	beq	.L169
	.loc 1 713 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3, #16]
	cmp	r3, #0
	bne	.L170
.L169:
	.loc 1 713 0 discriminator 1
	movs	r3, #1
	b	.L171
.L170:
	.loc 1 713 0 discriminator 3
	movs	r3, #0
.L171:
	.loc 1 713 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 716 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #8
	strh	r3, [r7, #14]	@ movhi
	.loc 1 718 0 discriminator 4
	ldr	r3, [r7]
	ldrh	r2, [r3, #14]
	ldrh	r3, [r7, #14]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 720 0 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #4
	strh	r3, [r7, #14]	@ movhi
	.loc 1 723 0 discriminator 4
	ldr	r3, [r7]
	ldrh	r2, [r3, #4]
	ldrh	r3, [r7, #14]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 725 0 discriminator 4
	ldrh	r3, [r7, #12]	@ movhi
	bic	r3, r3, #256
	strh	r3, [r7, #12]	@ movhi
	.loc 1 726 0 discriminator 4
	ldrh	r3, [r7, #12]	@ movhi
	bic	r3, r3, #512
	strh	r3, [r7, #12]	@ movhi
	.loc 1 728 0 discriminator 4
	ldr	r3, [r7]
	ldrh	r2, [r3, #16]
	ldrh	r3, [r7, #12]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #12]	@ movhi
	.loc 1 730 0 discriminator 4
	ldr	r3, [r7]
	ldrh	r2, [r3, #18]
	ldrh	r3, [r7, #12]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #12]	@ movhi
.L159:
	.loc 1 733 0
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #12]	@ movhi
	strh	r2, [r3, #4]	@ movhi
	.loc 1 736 0
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #10]	@ movhi
	strh	r2, [r3, #24]	@ movhi
	.loc 1 739 0
	ldr	r3, [r7]
	ldr	r2, [r3, #8]
	ldr	r3, [r7, #4]
	str	r2, [r3, #52]
	.loc 1 742 0
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #14]	@ movhi
	strh	r2, [r3, #32]	@ movhi
	.loc 1 743 0
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L173:
	.align	2
.L172:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
	.word	1073823744
	.word	1073824768
	.word	1073825792
	.word	1073747968
	.word	1073748992
	.word	1073750016
.LFE126:
	.size	TIM_OC1Init, .-TIM_OC1Init
	.section	.text.TIM_OC2Init,"ax",%progbits
	.align	2
	.global	TIM_OC2Init
	.thumb
	.thumb_func
	.type	TIM_OC2Init, %function
TIM_OC2Init:
.LFB127:
	.loc 1 755 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI48:
	sub	sp, sp, #16
.LCFI49:
	add	r7, sp, #0
.LCFI50:
	str	r0, [r7, #4]
	str	r1, [r7]
	.loc 1 756 0
	movs	r3, #0
	strh	r3, [r7, #10]	@ movhi
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	movs	r3, #0
	strh	r3, [r7, #12]	@ movhi
	.loc 1 759 0
	ldr	r2, [r7, #4]
	ldr	r3, .L201
	cmp	r2, r3
	beq	.L175
	.loc 1 759 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L175
	.loc 1 759 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L201+4
	cmp	r2, r3
	beq	.L175
	ldr	r2, [r7, #4]
	ldr	r3, .L201+8
	cmp	r2, r3
	beq	.L175
	ldr	r2, [r7, #4]
	ldr	r3, .L201+12
	cmp	r2, r3
	beq	.L175
	ldr	r2, [r7, #4]
	ldr	r3, .L201+16
	cmp	r2, r3
	beq	.L175
	ldr	r2, [r7, #4]
	ldr	r3, .L201+20
	cmp	r2, r3
	beq	.L175
	ldr	r2, [r7, #4]
	ldr	r3, .L201+24
	cmp	r2, r3
	bne	.L176
.L175:
	movs	r3, #1
	b	.L177
.L176:
	.loc 1 759 0 discriminator 3
	movs	r3, #0
.L177:
	.loc 1 759 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 760 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3]
	cmp	r3, #0
	beq	.L178
	.loc 1 760 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3]
	cmp	r3, #16
	beq	.L178
	.loc 1 760 0 discriminator 1
	ldr	r3, [r7]
	ldrh	r3, [r3]
	cmp	r3, #32
	beq	.L178
	ldr	r3, [r7]
	ldrh	r3, [r3]
	cmp	r3, #48
	beq	.L178
	ldr	r3, [r7]
	ldrh	r3, [r3]
	cmp	r3, #96
	beq	.L178
	ldr	r3, [r7]
	ldrh	r3, [r3]
	cmp	r3, #112
	bne	.L179
.L178:
	movs	r3, #1
	b	.L180
.L179:
	.loc 1 760 0 discriminator 3
	movs	r3, #0
.L180:
	.loc 1 760 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 761 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #2]
	cmp	r3, #0
	beq	.L181
	.loc 1 761 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3, #2]
	cmp	r3, #1
	bne	.L182
.L181:
	.loc 1 761 0 discriminator 1
	movs	r3, #1
	b	.L183
.L182:
	.loc 1 761 0 discriminator 3
	movs	r3, #0
.L183:
	.loc 1 761 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 762 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #12]
	cmp	r3, #0
	beq	.L184
	.loc 1 762 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3, #12]
	cmp	r3, #2
	bne	.L185
.L184:
	.loc 1 762 0 discriminator 1
	movs	r3, #1
	b	.L186
.L185:
	.loc 1 762 0 discriminator 3
	movs	r3, #0
.L186:
	.loc 1 762 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 765 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #32]	@ movhi
	uxth	r3, r3
	bic	r3, r3, #16
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #32]	@ movhi
	.loc 1 768 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #32]	@ movhi
	strh	r3, [r7, #14]	@ movhi
	.loc 1 770 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #4]	@ movhi
	strh	r3, [r7, #12]	@ movhi
	.loc 1 773 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #24]	@ movhi
	strh	r3, [r7, #10]	@ movhi
	.loc 1 776 0 discriminator 4
	ldrh	r3, [r7, #10]	@ movhi
	bic	r3, r3, #28672
	strh	r3, [r7, #10]	@ movhi
	.loc 1 777 0 discriminator 4
	ldrh	r3, [r7, #10]	@ movhi
	bic	r3, r3, #768
	strh	r3, [r7, #10]	@ movhi
	.loc 1 780 0 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3]
	lsls	r3, r3, #8
	uxth	r2, r3
	ldrh	r3, [r7, #10]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #10]	@ movhi
	.loc 1 783 0 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #32
	strh	r3, [r7, #14]	@ movhi
	.loc 1 785 0 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #12]
	lsls	r3, r3, #4
	uxth	r2, r3
	ldrh	r3, [r7, #14]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 788 0 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #2]
	lsls	r3, r3, #4
	uxth	r2, r3
	ldrh	r3, [r7, #14]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 790 0 discriminator 4
	ldr	r2, [r7, #4]
	ldr	r3, .L201
	cmp	r2, r3
	beq	.L187
	.loc 1 790 0 is_stmt 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L201+16
	cmp	r2, r3
	bne	.L188
.L187:
	.loc 1 792 0 is_stmt 1
	ldr	r3, [r7]
	ldrh	r3, [r3, #4]
	cmp	r3, #0
	beq	.L189
	.loc 1 792 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3, #4]
	cmp	r3, #4
	bne	.L190
.L189:
	.loc 1 792 0 discriminator 1
	movs	r3, #1
	b	.L191
.L190:
	.loc 1 792 0 discriminator 3
	movs	r3, #0
.L191:
	.loc 1 792 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 793 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #14]
	cmp	r3, #0
	beq	.L192
	.loc 1 793 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3, #14]
	cmp	r3, #8
	bne	.L193
.L192:
	.loc 1 793 0 discriminator 1
	movs	r3, #1
	b	.L194
.L193:
	.loc 1 793 0 discriminator 3
	movs	r3, #0
.L194:
	.loc 1 793 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 794 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #18]
	cmp	r3, #512
	beq	.L195
	.loc 1 794 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3, #18]
	cmp	r3, #0
	bne	.L196
.L195:
	.loc 1 794 0 discriminator 1
	movs	r3, #1
	b	.L197
.L196:
	.loc 1 794 0 discriminator 3
	movs	r3, #0
.L197:
	.loc 1 794 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 795 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #16]
	cmp	r3, #256
	beq	.L198
	.loc 1 795 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3, #16]
	cmp	r3, #0
	bne	.L199
.L198:
	.loc 1 795 0 discriminator 1
	movs	r3, #1
	b	.L200
.L199:
	.loc 1 795 0 discriminator 3
	movs	r3, #0
.L200:
	.loc 1 795 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 798 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #128
	strh	r3, [r7, #14]	@ movhi
	.loc 1 800 0 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #14]
	lsls	r3, r3, #4
	uxth	r2, r3
	ldrh	r3, [r7, #14]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 802 0 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #64
	strh	r3, [r7, #14]	@ movhi
	.loc 1 805 0 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #4]
	lsls	r3, r3, #4
	uxth	r2, r3
	ldrh	r3, [r7, #14]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 807 0 discriminator 4
	ldrh	r3, [r7, #12]	@ movhi
	bic	r3, r3, #1024
	strh	r3, [r7, #12]	@ movhi
	.loc 1 808 0 discriminator 4
	ldrh	r3, [r7, #12]	@ movhi
	bic	r3, r3, #2048
	strh	r3, [r7, #12]	@ movhi
	.loc 1 810 0 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #16]
	lsls	r3, r3, #2
	uxth	r2, r3
	ldrh	r3, [r7, #12]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #12]	@ movhi
	.loc 1 812 0 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #18]
	lsls	r3, r3, #2
	uxth	r2, r3
	ldrh	r3, [r7, #12]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #12]	@ movhi
.L188:
	.loc 1 815 0
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #12]	@ movhi
	strh	r2, [r3, #4]	@ movhi
	.loc 1 818 0
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #10]	@ movhi
	strh	r2, [r3, #24]	@ movhi
	.loc 1 821 0
	ldr	r3, [r7]
	ldr	r2, [r3, #8]
	ldr	r3, [r7, #4]
	str	r2, [r3, #56]
	.loc 1 824 0
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #14]	@ movhi
	strh	r2, [r3, #32]	@ movhi
	.loc 1 825 0
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L202:
	.align	2
.L201:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
	.word	1073823744
	.word	1073747968
.LFE127:
	.size	TIM_OC2Init, .-TIM_OC2Init
	.section	.text.TIM_OC3Init,"ax",%progbits
	.align	2
	.global	TIM_OC3Init
	.thumb
	.thumb_func
	.type	TIM_OC3Init, %function
TIM_OC3Init:
.LFB128:
	.loc 1 836 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI51:
	sub	sp, sp, #16
.LCFI52:
	add	r7, sp, #0
.LCFI53:
	str	r0, [r7, #4]
	str	r1, [r7]
	.loc 1 837 0
	movs	r3, #0
	strh	r3, [r7, #10]	@ movhi
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	movs	r3, #0
	strh	r3, [r7, #12]	@ movhi
	.loc 1 840 0
	ldr	r2, [r7, #4]
	ldr	r3, .L230
	cmp	r2, r3
	beq	.L204
	.loc 1 840 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L204
	.loc 1 840 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L230+4
	cmp	r2, r3
	beq	.L204
	ldr	r2, [r7, #4]
	ldr	r3, .L230+8
	cmp	r2, r3
	beq	.L204
	ldr	r2, [r7, #4]
	ldr	r3, .L230+12
	cmp	r2, r3
	beq	.L204
	ldr	r2, [r7, #4]
	ldr	r3, .L230+16
	cmp	r2, r3
	bne	.L205
.L204:
	movs	r3, #1
	b	.L206
.L205:
	.loc 1 840 0 discriminator 3
	movs	r3, #0
.L206:
	.loc 1 840 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 841 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3]
	cmp	r3, #0
	beq	.L207
	.loc 1 841 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3]
	cmp	r3, #16
	beq	.L207
	.loc 1 841 0 discriminator 1
	ldr	r3, [r7]
	ldrh	r3, [r3]
	cmp	r3, #32
	beq	.L207
	ldr	r3, [r7]
	ldrh	r3, [r3]
	cmp	r3, #48
	beq	.L207
	ldr	r3, [r7]
	ldrh	r3, [r3]
	cmp	r3, #96
	beq	.L207
	ldr	r3, [r7]
	ldrh	r3, [r3]
	cmp	r3, #112
	bne	.L208
.L207:
	movs	r3, #1
	b	.L209
.L208:
	.loc 1 841 0 discriminator 3
	movs	r3, #0
.L209:
	.loc 1 841 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 842 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #2]
	cmp	r3, #0
	beq	.L210
	.loc 1 842 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3, #2]
	cmp	r3, #1
	bne	.L211
.L210:
	.loc 1 842 0 discriminator 1
	movs	r3, #1
	b	.L212
.L211:
	.loc 1 842 0 discriminator 3
	movs	r3, #0
.L212:
	.loc 1 842 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 843 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #12]
	cmp	r3, #0
	beq	.L213
	.loc 1 843 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3, #12]
	cmp	r3, #2
	bne	.L214
.L213:
	.loc 1 843 0 discriminator 1
	movs	r3, #1
	b	.L215
.L214:
	.loc 1 843 0 discriminator 3
	movs	r3, #0
.L215:
	.loc 1 843 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 846 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #32]	@ movhi
	uxth	r3, r3
	bic	r3, r3, #256
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #32]	@ movhi
	.loc 1 849 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #32]	@ movhi
	strh	r3, [r7, #14]	@ movhi
	.loc 1 851 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #4]	@ movhi
	strh	r3, [r7, #12]	@ movhi
	.loc 1 854 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #28]	@ movhi
	strh	r3, [r7, #10]	@ movhi
	.loc 1 857 0 discriminator 4
	ldrh	r3, [r7, #10]	@ movhi
	bic	r3, r3, #112
	strh	r3, [r7, #10]	@ movhi
	.loc 1 858 0 discriminator 4
	ldrh	r3, [r7, #10]	@ movhi
	bic	r3, r3, #3
	strh	r3, [r7, #10]	@ movhi
	.loc 1 860 0 discriminator 4
	ldr	r3, [r7]
	ldrh	r2, [r3]
	ldrh	r3, [r7, #10]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #10]	@ movhi
	.loc 1 863 0 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #512
	strh	r3, [r7, #14]	@ movhi
	.loc 1 865 0 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #12]
	lsls	r3, r3, #8
	uxth	r2, r3
	ldrh	r3, [r7, #14]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 868 0 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #2]
	lsls	r3, r3, #8
	uxth	r2, r3
	ldrh	r3, [r7, #14]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 870 0 discriminator 4
	ldr	r2, [r7, #4]
	ldr	r3, .L230
	cmp	r2, r3
	beq	.L216
	.loc 1 870 0 is_stmt 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L230+16
	cmp	r2, r3
	bne	.L217
.L216:
	.loc 1 872 0 is_stmt 1
	ldr	r3, [r7]
	ldrh	r3, [r3, #4]
	cmp	r3, #0
	beq	.L218
	.loc 1 872 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3, #4]
	cmp	r3, #4
	bne	.L219
.L218:
	.loc 1 872 0 discriminator 1
	movs	r3, #1
	b	.L220
.L219:
	.loc 1 872 0 discriminator 3
	movs	r3, #0
.L220:
	.loc 1 872 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 873 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #14]
	cmp	r3, #0
	beq	.L221
	.loc 1 873 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3, #14]
	cmp	r3, #8
	bne	.L222
.L221:
	.loc 1 873 0 discriminator 1
	movs	r3, #1
	b	.L223
.L222:
	.loc 1 873 0 discriminator 3
	movs	r3, #0
.L223:
	.loc 1 873 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 874 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #18]
	cmp	r3, #512
	beq	.L224
	.loc 1 874 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3, #18]
	cmp	r3, #0
	bne	.L225
.L224:
	.loc 1 874 0 discriminator 1
	movs	r3, #1
	b	.L226
.L225:
	.loc 1 874 0 discriminator 3
	movs	r3, #0
.L226:
	.loc 1 874 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 875 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #16]
	cmp	r3, #256
	beq	.L227
	.loc 1 875 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3, #16]
	cmp	r3, #0
	bne	.L228
.L227:
	.loc 1 875 0 discriminator 1
	movs	r3, #1
	b	.L229
.L228:
	.loc 1 875 0 discriminator 3
	movs	r3, #0
.L229:
	.loc 1 875 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 878 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #2048
	strh	r3, [r7, #14]	@ movhi
	.loc 1 880 0 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #14]
	lsls	r3, r3, #8
	uxth	r2, r3
	ldrh	r3, [r7, #14]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 882 0 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #1024
	strh	r3, [r7, #14]	@ movhi
	.loc 1 885 0 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #4]
	lsls	r3, r3, #8
	uxth	r2, r3
	ldrh	r3, [r7, #14]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 887 0 discriminator 4
	ldrh	r3, [r7, #12]	@ movhi
	bic	r3, r3, #4096
	strh	r3, [r7, #12]	@ movhi
	.loc 1 888 0 discriminator 4
	ldrh	r3, [r7, #12]	@ movhi
	bic	r3, r3, #8192
	strh	r3, [r7, #12]	@ movhi
	.loc 1 890 0 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #16]
	lsls	r3, r3, #4
	uxth	r2, r3
	ldrh	r3, [r7, #12]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #12]	@ movhi
	.loc 1 892 0 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #18]
	lsls	r3, r3, #4
	uxth	r2, r3
	ldrh	r3, [r7, #12]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #12]	@ movhi
.L217:
	.loc 1 895 0
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #12]	@ movhi
	strh	r2, [r3, #4]	@ movhi
	.loc 1 898 0
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #10]	@ movhi
	strh	r2, [r3, #28]	@ movhi
	.loc 1 901 0
	ldr	r3, [r7]
	ldr	r2, [r3, #8]
	ldr	r3, [r7, #4]
	str	r2, [r3, #60]
	.loc 1 904 0
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #14]	@ movhi
	strh	r2, [r3, #32]	@ movhi
	.loc 1 905 0
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L231:
	.align	2
.L230:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
.LFE128:
	.size	TIM_OC3Init, .-TIM_OC3Init
	.section	.text.TIM_OC4Init,"ax",%progbits
	.align	2
	.global	TIM_OC4Init
	.thumb
	.thumb_func
	.type	TIM_OC4Init, %function
TIM_OC4Init:
.LFB129:
	.loc 1 916 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI54:
	sub	sp, sp, #16
.LCFI55:
	add	r7, sp, #0
.LCFI56:
	str	r0, [r7, #4]
	str	r1, [r7]
	.loc 1 917 0
	movs	r3, #0
	strh	r3, [r7, #12]	@ movhi
	movs	r3, #0
	strh	r3, [r7, #10]	@ movhi
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	.loc 1 920 0
	ldr	r2, [r7, #4]
	ldr	r3, .L250
	cmp	r2, r3
	beq	.L233
	.loc 1 920 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L233
	.loc 1 920 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L250+4
	cmp	r2, r3
	beq	.L233
	ldr	r2, [r7, #4]
	ldr	r3, .L250+8
	cmp	r2, r3
	beq	.L233
	ldr	r2, [r7, #4]
	ldr	r3, .L250+12
	cmp	r2, r3
	beq	.L233
	ldr	r2, [r7, #4]
	ldr	r3, .L250+16
	cmp	r2, r3
	bne	.L234
.L233:
	movs	r3, #1
	b	.L235
.L234:
	.loc 1 920 0 discriminator 3
	movs	r3, #0
.L235:
	.loc 1 920 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 921 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3]
	cmp	r3, #0
	beq	.L236
	.loc 1 921 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3]
	cmp	r3, #16
	beq	.L236
	.loc 1 921 0 discriminator 1
	ldr	r3, [r7]
	ldrh	r3, [r3]
	cmp	r3, #32
	beq	.L236
	ldr	r3, [r7]
	ldrh	r3, [r3]
	cmp	r3, #48
	beq	.L236
	ldr	r3, [r7]
	ldrh	r3, [r3]
	cmp	r3, #96
	beq	.L236
	ldr	r3, [r7]
	ldrh	r3, [r3]
	cmp	r3, #112
	bne	.L237
.L236:
	movs	r3, #1
	b	.L238
.L237:
	.loc 1 921 0 discriminator 3
	movs	r3, #0
.L238:
	.loc 1 921 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 922 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #2]
	cmp	r3, #0
	beq	.L239
	.loc 1 922 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3, #2]
	cmp	r3, #1
	bne	.L240
.L239:
	.loc 1 922 0 discriminator 1
	movs	r3, #1
	b	.L241
.L240:
	.loc 1 922 0 discriminator 3
	movs	r3, #0
.L241:
	.loc 1 922 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 923 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #12]
	cmp	r3, #0
	beq	.L242
	.loc 1 923 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3, #12]
	cmp	r3, #2
	bne	.L243
.L242:
	.loc 1 923 0 discriminator 1
	movs	r3, #1
	b	.L244
.L243:
	.loc 1 923 0 discriminator 3
	movs	r3, #0
.L244:
	.loc 1 923 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 926 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #32]	@ movhi
	uxth	r3, r3
	bic	r3, r3, #4096
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #32]	@ movhi
	.loc 1 929 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #32]	@ movhi
	strh	r3, [r7, #10]	@ movhi
	.loc 1 931 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #4]	@ movhi
	strh	r3, [r7, #14]	@ movhi
	.loc 1 934 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #28]	@ movhi
	strh	r3, [r7, #12]	@ movhi
	.loc 1 937 0 discriminator 4
	ldrh	r3, [r7, #12]	@ movhi
	bic	r3, r3, #28672
	strh	r3, [r7, #12]	@ movhi
	.loc 1 938 0 discriminator 4
	ldrh	r3, [r7, #12]	@ movhi
	bic	r3, r3, #768
	strh	r3, [r7, #12]	@ movhi
	.loc 1 941 0 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3]
	lsls	r3, r3, #8
	uxth	r2, r3
	ldrh	r3, [r7, #12]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #12]	@ movhi
	.loc 1 944 0 discriminator 4
	ldrh	r3, [r7, #10]	@ movhi
	bic	r3, r3, #8192
	strh	r3, [r7, #10]	@ movhi
	.loc 1 946 0 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #12]
	lsls	r3, r3, #12
	uxth	r2, r3
	ldrh	r3, [r7, #10]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #10]	@ movhi
	.loc 1 949 0 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #2]
	lsls	r3, r3, #12
	uxth	r2, r3
	ldrh	r3, [r7, #10]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #10]	@ movhi
	.loc 1 951 0 discriminator 4
	ldr	r2, [r7, #4]
	ldr	r3, .L250
	cmp	r2, r3
	beq	.L245
	.loc 1 951 0 is_stmt 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L250+16
	cmp	r2, r3
	bne	.L246
.L245:
	.loc 1 953 0 is_stmt 1
	ldr	r3, [r7]
	ldrh	r3, [r3, #16]
	cmp	r3, #256
	beq	.L247
	.loc 1 953 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3, #16]
	cmp	r3, #0
	bne	.L248
.L247:
	.loc 1 953 0 discriminator 1
	movs	r3, #1
	b	.L249
.L248:
	.loc 1 953 0 discriminator 3
	movs	r3, #0
.L249:
	.loc 1 953 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 955 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #16384
	strh	r3, [r7, #14]	@ movhi
	.loc 1 957 0 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #16]
	lsls	r3, r3, #6
	uxth	r2, r3
	ldrh	r3, [r7, #14]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
.L246:
	.loc 1 960 0
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #14]	@ movhi
	strh	r2, [r3, #4]	@ movhi
	.loc 1 963 0
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #12]	@ movhi
	strh	r2, [r3, #28]	@ movhi
	.loc 1 966 0
	ldr	r3, [r7]
	ldr	r2, [r3, #8]
	ldr	r3, [r7, #4]
	str	r2, [r3, #64]
	.loc 1 969 0
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #10]	@ movhi
	strh	r2, [r3, #32]	@ movhi
	.loc 1 970 0
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L251:
	.align	2
.L250:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
.LFE129:
	.size	TIM_OC4Init, .-TIM_OC4Init
	.section	.text.TIM_OCStructInit,"ax",%progbits
	.align	2
	.global	TIM_OCStructInit
	.thumb
	.thumb_func
	.type	TIM_OCStructInit, %function
TIM_OCStructInit:
.LFB130:
	.loc 1 979 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7}
.LCFI57:
	sub	sp, sp, #12
.LCFI58:
	add	r7, sp, #0
.LCFI59:
	str	r0, [r7, #4]
	.loc 1 981 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	strh	r2, [r3]	@ movhi
	.loc 1 982 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	strh	r2, [r3, #2]	@ movhi
	.loc 1 983 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	strh	r2, [r3, #4]	@ movhi
	.loc 1 984 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	str	r2, [r3, #8]
	.loc 1 985 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	strh	r2, [r3, #12]	@ movhi
	.loc 1 986 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	strh	r2, [r3, #14]	@ movhi
	.loc 1 987 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	strh	r2, [r3, #16]	@ movhi
	.loc 1 988 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	strh	r2, [r3, #18]	@ movhi
	.loc 1 989 0
	adds	r7, r7, #12
	mov	sp, r7
	@ sp needed
	ldr	r7, [sp], #4
	bx	lr
.LFE130:
	.size	TIM_OCStructInit, .-TIM_OCStructInit
	.section	.text.TIM_SelectOCxM,"ax",%progbits
	.align	2
	.global	TIM_SelectOCxM
	.thumb
	.thumb_func
	.type	TIM_SelectOCxM, %function
TIM_SelectOCxM:
.LFB131:
	.loc 1 1015 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI60:
	sub	sp, sp, #16
.LCFI61:
	add	r7, sp, #0
.LCFI62:
	str	r0, [r7, #4]
	mov	r3, r2
	mov	r2, r1	@ movhi
	strh	r2, [r7, #2]	@ movhi
	strh	r3, [r7]	@ movhi
	.loc 1 1016 0
	movs	r3, #0
	str	r3, [r7, #12]
	.loc 1 1017 0
	movs	r3, #0
	strh	r3, [r7, #10]	@ movhi
	.loc 1 1020 0
	ldr	r2, [r7, #4]
	ldr	r3, .L266
	cmp	r2, r3
	beq	.L254
	.loc 1 1020 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L254
	.loc 1 1020 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L266+4
	cmp	r2, r3
	beq	.L254
	ldr	r2, [r7, #4]
	ldr	r3, .L266+8
	cmp	r2, r3
	beq	.L254
	ldr	r2, [r7, #4]
	ldr	r3, .L266+12
	cmp	r2, r3
	beq	.L254
	ldr	r2, [r7, #4]
	ldr	r3, .L266+16
	cmp	r2, r3
	beq	.L254
	ldr	r2, [r7, #4]
	ldr	r3, .L266+20
	cmp	r2, r3
	beq	.L254
	ldr	r2, [r7, #4]
	ldr	r3, .L266+24
	cmp	r2, r3
	beq	.L254
	ldr	r2, [r7, #4]
	ldr	r3, .L266+28
	cmp	r2, r3
	beq	.L254
	ldr	r2, [r7, #4]
	ldr	r3, .L266+32
	cmp	r2, r3
	beq	.L254
	ldr	r2, [r7, #4]
	ldr	r3, .L266+36
	cmp	r2, r3
	beq	.L254
	ldr	r2, [r7, #4]
	ldr	r3, .L266+40
	cmp	r2, r3
	bne	.L255
.L254:
	movs	r3, #1
	b	.L256
.L255:
	.loc 1 1020 0 discriminator 3
	movs	r3, #0
.L256:
	.loc 1 1020 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1021 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	beq	.L257
	.loc 1 1021 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #4
	beq	.L257
	.loc 1 1021 0 discriminator 1
	ldrh	r3, [r7, #2]
	cmp	r3, #8
	beq	.L257
	ldrh	r3, [r7, #2]
	cmp	r3, #12
	bne	.L258
.L257:
	movs	r3, #1
	b	.L259
.L258:
	.loc 1 1021 0 discriminator 3
	movs	r3, #0
.L259:
	.loc 1 1021 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1022 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7]
	cmp	r3, #0
	beq	.L260
	.loc 1 1022 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7]
	cmp	r3, #16
	beq	.L260
	.loc 1 1022 0 discriminator 1
	ldrh	r3, [r7]
	cmp	r3, #32
	beq	.L260
	ldrh	r3, [r7]
	cmp	r3, #48
	beq	.L260
	ldrh	r3, [r7]
	cmp	r3, #96
	beq	.L260
	ldrh	r3, [r7]
	cmp	r3, #112
	beq	.L260
	ldrh	r3, [r7]
	cmp	r3, #80
	beq	.L260
	ldrh	r3, [r7]
	cmp	r3, #64
	bne	.L261
.L260:
	movs	r3, #1
	b	.L262
.L261:
	.loc 1 1022 0 discriminator 3
	movs	r3, #0
.L262:
	.loc 1 1022 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1024 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	str	r3, [r7, #12]
	.loc 1 1025 0 discriminator 4
	ldr	r3, [r7, #12]
	adds	r3, r3, #24
	str	r3, [r7, #12]
	.loc 1 1027 0 discriminator 4
	ldrh	r3, [r7, #2]
	movs	r2, #1
	lsl	r3, r2, r3
	strh	r3, [r7, #10]	@ movhi
	.loc 1 1030 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #32]	@ movhi
	uxth	r2, r3
	ldrh	r3, [r7, #10]	@ movhi
	mvns	r3, r3
	uxth	r3, r3
	ands	r3, r3, r2
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #32]	@ movhi
	.loc 1 1032 0 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	beq	.L263
	.loc 1 1032 0 is_stmt 0 discriminator 1
	ldrh	r3, [r7, #2]
	cmp	r3, #8
	bne	.L264
.L263:
	.loc 1 1034 0 is_stmt 1
	ldrh	r3, [r7, #2]
	lsrs	r3, r3, #1
	uxth	r3, r3
	ldr	r2, [r7, #12]
	add	r3, r3, r2
	str	r3, [r7, #12]
	.loc 1 1037 0
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #12]
	ldr	r1, [r3]
	movw	r3, #65423
	ands	r3, r3, r1
	str	r3, [r2]
	.loc 1 1040 0
	ldr	r3, [r7, #12]
	ldr	r2, [r7, #12]
	ldr	r1, [r2]
	ldrh	r2, [r7]
	orrs	r2, r2, r1
	str	r2, [r3]
	b	.L253
.L264:
	.loc 1 1044 0
	ldrh	r3, [r7, #2]	@ movhi
	subs	r3, r3, #4
	uxth	r3, r3
	lsrs	r3, r3, #1
	uxth	r3, r3
	ldr	r2, [r7, #12]
	add	r3, r3, r2
	str	r3, [r7, #12]
	.loc 1 1047 0
	ldr	r2, [r7, #12]
	ldr	r3, [r7, #12]
	ldr	r1, [r3]
	movw	r3, #36863
	ands	r3, r3, r1
	str	r3, [r2]
	.loc 1 1050 0
	ldr	r3, [r7, #12]
	ldr	r2, [r7, #12]
	ldr	r1, [r2]
	ldrh	r2, [r7]	@ movhi
	lsls	r2, r2, #8
	uxth	r2, r2
	orrs	r2, r2, r1
	str	r2, [r3]
.L253:
	.loc 1 1052 0
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L267:
	.align	2
.L266:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
	.word	1073823744
	.word	1073824768
	.word	1073825792
	.word	1073747968
	.word	1073748992
	.word	1073750016
.LFE131:
	.size	TIM_SelectOCxM, .-TIM_SelectOCxM
	.section	.text.TIM_SetCompare1,"ax",%progbits
	.align	2
	.global	TIM_SetCompare1
	.thumb
	.thumb_func
	.type	TIM_SetCompare1, %function
TIM_SetCompare1:
.LFB132:
	.loc 1 1061 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI63:
	sub	sp, sp, #8
.LCFI64:
	add	r7, sp, #0
.LCFI65:
	str	r0, [r7, #4]
	str	r1, [r7]
	.loc 1 1063 0
	ldr	r2, [r7, #4]
	ldr	r3, .L272
	cmp	r2, r3
	beq	.L269
	.loc 1 1063 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L269
	.loc 1 1063 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L272+4
	cmp	r2, r3
	beq	.L269
	ldr	r2, [r7, #4]
	ldr	r3, .L272+8
	cmp	r2, r3
	beq	.L269
	ldr	r2, [r7, #4]
	ldr	r3, .L272+12
	cmp	r2, r3
	beq	.L269
	ldr	r2, [r7, #4]
	ldr	r3, .L272+16
	cmp	r2, r3
	beq	.L269
	ldr	r2, [r7, #4]
	ldr	r3, .L272+20
	cmp	r2, r3
	beq	.L269
	ldr	r2, [r7, #4]
	ldr	r3, .L272+24
	cmp	r2, r3
	beq	.L269
	ldr	r2, [r7, #4]
	ldr	r3, .L272+28
	cmp	r2, r3
	beq	.L269
	ldr	r2, [r7, #4]
	ldr	r3, .L272+32
	cmp	r2, r3
	beq	.L269
	ldr	r2, [r7, #4]
	ldr	r3, .L272+36
	cmp	r2, r3
	beq	.L269
	ldr	r2, [r7, #4]
	ldr	r3, .L272+40
	cmp	r2, r3
	bne	.L270
.L269:
	movs	r3, #1
	b	.L271
.L270:
	.loc 1 1063 0 discriminator 3
	movs	r3, #0
.L271:
	.loc 1 1063 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1066 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r2, [r7]
	str	r2, [r3, #52]
	.loc 1 1067 0 discriminator 4
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L273:
	.align	2
.L272:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
	.word	1073823744
	.word	1073824768
	.word	1073825792
	.word	1073747968
	.word	1073748992
	.word	1073750016
.LFE132:
	.size	TIM_SetCompare1, .-TIM_SetCompare1
	.section	.text.TIM_SetCompare2,"ax",%progbits
	.align	2
	.global	TIM_SetCompare2
	.thumb
	.thumb_func
	.type	TIM_SetCompare2, %function
TIM_SetCompare2:
.LFB133:
	.loc 1 1077 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI66:
	sub	sp, sp, #8
.LCFI67:
	add	r7, sp, #0
.LCFI68:
	str	r0, [r7, #4]
	str	r1, [r7]
	.loc 1 1079 0
	ldr	r2, [r7, #4]
	ldr	r3, .L278
	cmp	r2, r3
	beq	.L275
	.loc 1 1079 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L275
	.loc 1 1079 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L278+4
	cmp	r2, r3
	beq	.L275
	ldr	r2, [r7, #4]
	ldr	r3, .L278+8
	cmp	r2, r3
	beq	.L275
	ldr	r2, [r7, #4]
	ldr	r3, .L278+12
	cmp	r2, r3
	beq	.L275
	ldr	r2, [r7, #4]
	ldr	r3, .L278+16
	cmp	r2, r3
	beq	.L275
	ldr	r2, [r7, #4]
	ldr	r3, .L278+20
	cmp	r2, r3
	beq	.L275
	ldr	r2, [r7, #4]
	ldr	r3, .L278+24
	cmp	r2, r3
	bne	.L276
.L275:
	movs	r3, #1
	b	.L277
.L276:
	.loc 1 1079 0 discriminator 3
	movs	r3, #0
.L277:
	.loc 1 1079 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1082 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r2, [r7]
	str	r2, [r3, #56]
	.loc 1 1083 0 discriminator 4
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L279:
	.align	2
.L278:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
	.word	1073823744
	.word	1073747968
.LFE133:
	.size	TIM_SetCompare2, .-TIM_SetCompare2
	.section	.text.TIM_SetCompare3,"ax",%progbits
	.align	2
	.global	TIM_SetCompare3
	.thumb
	.thumb_func
	.type	TIM_SetCompare3, %function
TIM_SetCompare3:
.LFB134:
	.loc 1 1092 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI69:
	sub	sp, sp, #8
.LCFI70:
	add	r7, sp, #0
.LCFI71:
	str	r0, [r7, #4]
	str	r1, [r7]
	.loc 1 1094 0
	ldr	r2, [r7, #4]
	ldr	r3, .L284
	cmp	r2, r3
	beq	.L281
	.loc 1 1094 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L281
	.loc 1 1094 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L284+4
	cmp	r2, r3
	beq	.L281
	ldr	r2, [r7, #4]
	ldr	r3, .L284+8
	cmp	r2, r3
	beq	.L281
	ldr	r2, [r7, #4]
	ldr	r3, .L284+12
	cmp	r2, r3
	beq	.L281
	ldr	r2, [r7, #4]
	ldr	r3, .L284+16
	cmp	r2, r3
	bne	.L282
.L281:
	movs	r3, #1
	b	.L283
.L282:
	.loc 1 1094 0 discriminator 3
	movs	r3, #0
.L283:
	.loc 1 1094 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1097 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r2, [r7]
	str	r2, [r3, #60]
	.loc 1 1098 0 discriminator 4
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L285:
	.align	2
.L284:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
.LFE134:
	.size	TIM_SetCompare3, .-TIM_SetCompare3
	.section	.text.TIM_SetCompare4,"ax",%progbits
	.align	2
	.global	TIM_SetCompare4
	.thumb
	.thumb_func
	.type	TIM_SetCompare4, %function
TIM_SetCompare4:
.LFB135:
	.loc 1 1107 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI72:
	sub	sp, sp, #8
.LCFI73:
	add	r7, sp, #0
.LCFI74:
	str	r0, [r7, #4]
	str	r1, [r7]
	.loc 1 1109 0
	ldr	r2, [r7, #4]
	ldr	r3, .L290
	cmp	r2, r3
	beq	.L287
	.loc 1 1109 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L287
	.loc 1 1109 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L290+4
	cmp	r2, r3
	beq	.L287
	ldr	r2, [r7, #4]
	ldr	r3, .L290+8
	cmp	r2, r3
	beq	.L287
	ldr	r2, [r7, #4]
	ldr	r3, .L290+12
	cmp	r2, r3
	beq	.L287
	ldr	r2, [r7, #4]
	ldr	r3, .L290+16
	cmp	r2, r3
	bne	.L288
.L287:
	movs	r3, #1
	b	.L289
.L288:
	.loc 1 1109 0 discriminator 3
	movs	r3, #0
.L289:
	.loc 1 1109 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1112 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r2, [r7]
	str	r2, [r3, #64]
	.loc 1 1113 0 discriminator 4
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L291:
	.align	2
.L290:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
.LFE135:
	.size	TIM_SetCompare4, .-TIM_SetCompare4
	.section	.text.TIM_ForcedOC1Config,"ax",%progbits
	.align	2
	.global	TIM_ForcedOC1Config
	.thumb
	.thumb_func
	.type	TIM_ForcedOC1Config, %function
TIM_ForcedOC1Config:
.LFB136:
	.loc 1 1125 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI75:
	sub	sp, sp, #16
.LCFI76:
	add	r7, sp, #0
.LCFI77:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 1126 0
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1129 0
	ldr	r2, [r7, #4]
	ldr	r3, .L299
	cmp	r2, r3
	beq	.L293
	.loc 1 1129 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L293
	.loc 1 1129 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L299+4
	cmp	r2, r3
	beq	.L293
	ldr	r2, [r7, #4]
	ldr	r3, .L299+8
	cmp	r2, r3
	beq	.L293
	ldr	r2, [r7, #4]
	ldr	r3, .L299+12
	cmp	r2, r3
	beq	.L293
	ldr	r2, [r7, #4]
	ldr	r3, .L299+16
	cmp	r2, r3
	beq	.L293
	ldr	r2, [r7, #4]
	ldr	r3, .L299+20
	cmp	r2, r3
	beq	.L293
	ldr	r2, [r7, #4]
	ldr	r3, .L299+24
	cmp	r2, r3
	beq	.L293
	ldr	r2, [r7, #4]
	ldr	r3, .L299+28
	cmp	r2, r3
	beq	.L293
	ldr	r2, [r7, #4]
	ldr	r3, .L299+32
	cmp	r2, r3
	beq	.L293
	ldr	r2, [r7, #4]
	ldr	r3, .L299+36
	cmp	r2, r3
	beq	.L293
	ldr	r2, [r7, #4]
	ldr	r3, .L299+40
	cmp	r2, r3
	bne	.L294
.L293:
	movs	r3, #1
	b	.L295
.L294:
	.loc 1 1129 0 discriminator 3
	movs	r3, #0
.L295:
	.loc 1 1129 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1130 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #80
	beq	.L296
	.loc 1 1130 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #64
	bne	.L297
.L296:
	.loc 1 1130 0 discriminator 1
	movs	r3, #1
	b	.L298
.L297:
	.loc 1 1130 0 discriminator 3
	movs	r3, #0
.L298:
	.loc 1 1130 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1131 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #24]	@ movhi
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1134 0 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #112
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1137 0 discriminator 4
	ldrh	r2, [r7, #14]	@ movhi
	ldrh	r3, [r7, #2]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1140 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #14]	@ movhi
	strh	r2, [r3, #24]	@ movhi
	.loc 1 1141 0 discriminator 4
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L300:
	.align	2
.L299:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
	.word	1073823744
	.word	1073824768
	.word	1073825792
	.word	1073747968
	.word	1073748992
	.word	1073750016
.LFE136:
	.size	TIM_ForcedOC1Config, .-TIM_ForcedOC1Config
	.section	.text.TIM_ForcedOC2Config,"ax",%progbits
	.align	2
	.global	TIM_ForcedOC2Config
	.thumb
	.thumb_func
	.type	TIM_ForcedOC2Config, %function
TIM_ForcedOC2Config:
.LFB137:
	.loc 1 1154 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI78:
	sub	sp, sp, #16
.LCFI79:
	add	r7, sp, #0
.LCFI80:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 1155 0
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1158 0
	ldr	r2, [r7, #4]
	ldr	r3, .L308
	cmp	r2, r3
	beq	.L302
	.loc 1 1158 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L302
	.loc 1 1158 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L308+4
	cmp	r2, r3
	beq	.L302
	ldr	r2, [r7, #4]
	ldr	r3, .L308+8
	cmp	r2, r3
	beq	.L302
	ldr	r2, [r7, #4]
	ldr	r3, .L308+12
	cmp	r2, r3
	beq	.L302
	ldr	r2, [r7, #4]
	ldr	r3, .L308+16
	cmp	r2, r3
	beq	.L302
	ldr	r2, [r7, #4]
	ldr	r3, .L308+20
	cmp	r2, r3
	beq	.L302
	ldr	r2, [r7, #4]
	ldr	r3, .L308+24
	cmp	r2, r3
	bne	.L303
.L302:
	movs	r3, #1
	b	.L304
.L303:
	.loc 1 1158 0 discriminator 3
	movs	r3, #0
.L304:
	.loc 1 1158 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1159 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #80
	beq	.L305
	.loc 1 1159 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #64
	bne	.L306
.L305:
	.loc 1 1159 0 discriminator 1
	movs	r3, #1
	b	.L307
.L306:
	.loc 1 1159 0 discriminator 3
	movs	r3, #0
.L307:
	.loc 1 1159 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1160 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #24]	@ movhi
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1163 0 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #28672
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1166 0 discriminator 4
	ldrh	r3, [r7, #2]	@ movhi
	lsls	r3, r3, #8
	uxth	r2, r3
	ldrh	r3, [r7, #14]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1169 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #14]	@ movhi
	strh	r2, [r3, #24]	@ movhi
	.loc 1 1170 0 discriminator 4
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L309:
	.align	2
.L308:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
	.word	1073823744
	.word	1073747968
.LFE137:
	.size	TIM_ForcedOC2Config, .-TIM_ForcedOC2Config
	.section	.text.TIM_ForcedOC3Config,"ax",%progbits
	.align	2
	.global	TIM_ForcedOC3Config
	.thumb
	.thumb_func
	.type	TIM_ForcedOC3Config, %function
TIM_ForcedOC3Config:
.LFB138:
	.loc 1 1182 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI81:
	sub	sp, sp, #16
.LCFI82:
	add	r7, sp, #0
.LCFI83:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 1183 0
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1186 0
	ldr	r2, [r7, #4]
	ldr	r3, .L317
	cmp	r2, r3
	beq	.L311
	.loc 1 1186 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L311
	.loc 1 1186 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L317+4
	cmp	r2, r3
	beq	.L311
	ldr	r2, [r7, #4]
	ldr	r3, .L317+8
	cmp	r2, r3
	beq	.L311
	ldr	r2, [r7, #4]
	ldr	r3, .L317+12
	cmp	r2, r3
	beq	.L311
	ldr	r2, [r7, #4]
	ldr	r3, .L317+16
	cmp	r2, r3
	bne	.L312
.L311:
	movs	r3, #1
	b	.L313
.L312:
	.loc 1 1186 0 discriminator 3
	movs	r3, #0
.L313:
	.loc 1 1186 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1187 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #80
	beq	.L314
	.loc 1 1187 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #64
	bne	.L315
.L314:
	.loc 1 1187 0 discriminator 1
	movs	r3, #1
	b	.L316
.L315:
	.loc 1 1187 0 discriminator 3
	movs	r3, #0
.L316:
	.loc 1 1187 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1189 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #28]	@ movhi
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1192 0 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #112
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1195 0 discriminator 4
	ldrh	r2, [r7, #14]	@ movhi
	ldrh	r3, [r7, #2]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1198 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #14]	@ movhi
	strh	r2, [r3, #28]	@ movhi
	.loc 1 1199 0 discriminator 4
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L318:
	.align	2
.L317:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
.LFE138:
	.size	TIM_ForcedOC3Config, .-TIM_ForcedOC3Config
	.section	.text.TIM_ForcedOC4Config,"ax",%progbits
	.align	2
	.global	TIM_ForcedOC4Config
	.thumb
	.thumb_func
	.type	TIM_ForcedOC4Config, %function
TIM_ForcedOC4Config:
.LFB139:
	.loc 1 1211 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI84:
	sub	sp, sp, #16
.LCFI85:
	add	r7, sp, #0
.LCFI86:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 1212 0
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1215 0
	ldr	r2, [r7, #4]
	ldr	r3, .L326
	cmp	r2, r3
	beq	.L320
	.loc 1 1215 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L320
	.loc 1 1215 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L326+4
	cmp	r2, r3
	beq	.L320
	ldr	r2, [r7, #4]
	ldr	r3, .L326+8
	cmp	r2, r3
	beq	.L320
	ldr	r2, [r7, #4]
	ldr	r3, .L326+12
	cmp	r2, r3
	beq	.L320
	ldr	r2, [r7, #4]
	ldr	r3, .L326+16
	cmp	r2, r3
	bne	.L321
.L320:
	movs	r3, #1
	b	.L322
.L321:
	.loc 1 1215 0 discriminator 3
	movs	r3, #0
.L322:
	.loc 1 1215 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1216 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #80
	beq	.L323
	.loc 1 1216 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #64
	bne	.L324
.L323:
	.loc 1 1216 0 discriminator 1
	movs	r3, #1
	b	.L325
.L324:
	.loc 1 1216 0 discriminator 3
	movs	r3, #0
.L325:
	.loc 1 1216 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1217 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #28]	@ movhi
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1220 0 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #28672
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1223 0 discriminator 4
	ldrh	r3, [r7, #2]	@ movhi
	lsls	r3, r3, #8
	uxth	r2, r3
	ldrh	r3, [r7, #14]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1226 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #14]	@ movhi
	strh	r2, [r3, #28]	@ movhi
	.loc 1 1227 0 discriminator 4
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L327:
	.align	2
.L326:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
.LFE139:
	.size	TIM_ForcedOC4Config, .-TIM_ForcedOC4Config
	.section	.text.TIM_OC1PreloadConfig,"ax",%progbits
	.align	2
	.global	TIM_OC1PreloadConfig
	.thumb
	.thumb_func
	.type	TIM_OC1PreloadConfig, %function
TIM_OC1PreloadConfig:
.LFB140:
	.loc 1 1239 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI87:
	sub	sp, sp, #16
.LCFI88:
	add	r7, sp, #0
.LCFI89:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 1240 0
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1243 0
	ldr	r2, [r7, #4]
	ldr	r3, .L335
	cmp	r2, r3
	beq	.L329
	.loc 1 1243 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L329
	.loc 1 1243 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L335+4
	cmp	r2, r3
	beq	.L329
	ldr	r2, [r7, #4]
	ldr	r3, .L335+8
	cmp	r2, r3
	beq	.L329
	ldr	r2, [r7, #4]
	ldr	r3, .L335+12
	cmp	r2, r3
	beq	.L329
	ldr	r2, [r7, #4]
	ldr	r3, .L335+16
	cmp	r2, r3
	beq	.L329
	ldr	r2, [r7, #4]
	ldr	r3, .L335+20
	cmp	r2, r3
	beq	.L329
	ldr	r2, [r7, #4]
	ldr	r3, .L335+24
	cmp	r2, r3
	beq	.L329
	ldr	r2, [r7, #4]
	ldr	r3, .L335+28
	cmp	r2, r3
	beq	.L329
	ldr	r2, [r7, #4]
	ldr	r3, .L335+32
	cmp	r2, r3
	beq	.L329
	ldr	r2, [r7, #4]
	ldr	r3, .L335+36
	cmp	r2, r3
	beq	.L329
	ldr	r2, [r7, #4]
	ldr	r3, .L335+40
	cmp	r2, r3
	bne	.L330
.L329:
	movs	r3, #1
	b	.L331
.L330:
	.loc 1 1243 0 discriminator 3
	movs	r3, #0
.L331:
	.loc 1 1243 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1244 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #8
	beq	.L332
	.loc 1 1244 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	bne	.L333
.L332:
	.loc 1 1244 0 discriminator 1
	movs	r3, #1
	b	.L334
.L333:
	.loc 1 1244 0 discriminator 3
	movs	r3, #0
.L334:
	.loc 1 1244 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1246 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #24]	@ movhi
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1249 0 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #8
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1252 0 discriminator 4
	ldrh	r2, [r7, #14]	@ movhi
	ldrh	r3, [r7, #2]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1255 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #14]	@ movhi
	strh	r2, [r3, #24]	@ movhi
	.loc 1 1256 0 discriminator 4
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L336:
	.align	2
.L335:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
	.word	1073823744
	.word	1073824768
	.word	1073825792
	.word	1073747968
	.word	1073748992
	.word	1073750016
.LFE140:
	.size	TIM_OC1PreloadConfig, .-TIM_OC1PreloadConfig
	.section	.text.TIM_OC2PreloadConfig,"ax",%progbits
	.align	2
	.global	TIM_OC2PreloadConfig
	.thumb
	.thumb_func
	.type	TIM_OC2PreloadConfig, %function
TIM_OC2PreloadConfig:
.LFB141:
	.loc 1 1269 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI90:
	sub	sp, sp, #16
.LCFI91:
	add	r7, sp, #0
.LCFI92:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 1270 0
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1273 0
	ldr	r2, [r7, #4]
	ldr	r3, .L344
	cmp	r2, r3
	beq	.L338
	.loc 1 1273 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L338
	.loc 1 1273 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L344+4
	cmp	r2, r3
	beq	.L338
	ldr	r2, [r7, #4]
	ldr	r3, .L344+8
	cmp	r2, r3
	beq	.L338
	ldr	r2, [r7, #4]
	ldr	r3, .L344+12
	cmp	r2, r3
	beq	.L338
	ldr	r2, [r7, #4]
	ldr	r3, .L344+16
	cmp	r2, r3
	beq	.L338
	ldr	r2, [r7, #4]
	ldr	r3, .L344+20
	cmp	r2, r3
	beq	.L338
	ldr	r2, [r7, #4]
	ldr	r3, .L344+24
	cmp	r2, r3
	bne	.L339
.L338:
	movs	r3, #1
	b	.L340
.L339:
	.loc 1 1273 0 discriminator 3
	movs	r3, #0
.L340:
	.loc 1 1273 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1274 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #8
	beq	.L341
	.loc 1 1274 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	bne	.L342
.L341:
	.loc 1 1274 0 discriminator 1
	movs	r3, #1
	b	.L343
.L342:
	.loc 1 1274 0 discriminator 3
	movs	r3, #0
.L343:
	.loc 1 1274 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1276 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #24]	@ movhi
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1279 0 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #2048
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1282 0 discriminator 4
	ldrh	r3, [r7, #2]	@ movhi
	lsls	r3, r3, #8
	uxth	r2, r3
	ldrh	r3, [r7, #14]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1285 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #14]	@ movhi
	strh	r2, [r3, #24]	@ movhi
	.loc 1 1286 0 discriminator 4
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L345:
	.align	2
.L344:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
	.word	1073823744
	.word	1073747968
.LFE141:
	.size	TIM_OC2PreloadConfig, .-TIM_OC2PreloadConfig
	.section	.text.TIM_OC3PreloadConfig,"ax",%progbits
	.align	2
	.global	TIM_OC3PreloadConfig
	.thumb
	.thumb_func
	.type	TIM_OC3PreloadConfig, %function
TIM_OC3PreloadConfig:
.LFB142:
	.loc 1 1298 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI93:
	sub	sp, sp, #16
.LCFI94:
	add	r7, sp, #0
.LCFI95:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 1299 0
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1302 0
	ldr	r2, [r7, #4]
	ldr	r3, .L353
	cmp	r2, r3
	beq	.L347
	.loc 1 1302 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L347
	.loc 1 1302 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L353+4
	cmp	r2, r3
	beq	.L347
	ldr	r2, [r7, #4]
	ldr	r3, .L353+8
	cmp	r2, r3
	beq	.L347
	ldr	r2, [r7, #4]
	ldr	r3, .L353+12
	cmp	r2, r3
	beq	.L347
	ldr	r2, [r7, #4]
	ldr	r3, .L353+16
	cmp	r2, r3
	bne	.L348
.L347:
	movs	r3, #1
	b	.L349
.L348:
	.loc 1 1302 0 discriminator 3
	movs	r3, #0
.L349:
	.loc 1 1302 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1303 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #8
	beq	.L350
	.loc 1 1303 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	bne	.L351
.L350:
	.loc 1 1303 0 discriminator 1
	movs	r3, #1
	b	.L352
.L351:
	.loc 1 1303 0 discriminator 3
	movs	r3, #0
.L352:
	.loc 1 1303 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1305 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #28]	@ movhi
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1308 0 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #8
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1311 0 discriminator 4
	ldrh	r2, [r7, #14]	@ movhi
	ldrh	r3, [r7, #2]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1314 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #14]	@ movhi
	strh	r2, [r3, #28]	@ movhi
	.loc 1 1315 0 discriminator 4
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L354:
	.align	2
.L353:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
.LFE142:
	.size	TIM_OC3PreloadConfig, .-TIM_OC3PreloadConfig
	.section	.text.TIM_OC4PreloadConfig,"ax",%progbits
	.align	2
	.global	TIM_OC4PreloadConfig
	.thumb
	.thumb_func
	.type	TIM_OC4PreloadConfig, %function
TIM_OC4PreloadConfig:
.LFB143:
	.loc 1 1327 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI96:
	sub	sp, sp, #16
.LCFI97:
	add	r7, sp, #0
.LCFI98:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 1328 0
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1331 0
	ldr	r2, [r7, #4]
	ldr	r3, .L362
	cmp	r2, r3
	beq	.L356
	.loc 1 1331 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L356
	.loc 1 1331 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L362+4
	cmp	r2, r3
	beq	.L356
	ldr	r2, [r7, #4]
	ldr	r3, .L362+8
	cmp	r2, r3
	beq	.L356
	ldr	r2, [r7, #4]
	ldr	r3, .L362+12
	cmp	r2, r3
	beq	.L356
	ldr	r2, [r7, #4]
	ldr	r3, .L362+16
	cmp	r2, r3
	bne	.L357
.L356:
	movs	r3, #1
	b	.L358
.L357:
	.loc 1 1331 0 discriminator 3
	movs	r3, #0
.L358:
	.loc 1 1331 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1332 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #8
	beq	.L359
	.loc 1 1332 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	bne	.L360
.L359:
	.loc 1 1332 0 discriminator 1
	movs	r3, #1
	b	.L361
.L360:
	.loc 1 1332 0 discriminator 3
	movs	r3, #0
.L361:
	.loc 1 1332 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1334 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #28]	@ movhi
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1337 0 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #2048
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1340 0 discriminator 4
	ldrh	r3, [r7, #2]	@ movhi
	lsls	r3, r3, #8
	uxth	r2, r3
	ldrh	r3, [r7, #14]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1343 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #14]	@ movhi
	strh	r2, [r3, #28]	@ movhi
	.loc 1 1344 0 discriminator 4
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L363:
	.align	2
.L362:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
.LFE143:
	.size	TIM_OC4PreloadConfig, .-TIM_OC4PreloadConfig
	.section	.text.TIM_OC1FastConfig,"ax",%progbits
	.align	2
	.global	TIM_OC1FastConfig
	.thumb
	.thumb_func
	.type	TIM_OC1FastConfig, %function
TIM_OC1FastConfig:
.LFB144:
	.loc 1 1356 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI99:
	sub	sp, sp, #16
.LCFI100:
	add	r7, sp, #0
.LCFI101:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 1357 0
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1360 0
	ldr	r2, [r7, #4]
	ldr	r3, .L371
	cmp	r2, r3
	beq	.L365
	.loc 1 1360 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L365
	.loc 1 1360 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L371+4
	cmp	r2, r3
	beq	.L365
	ldr	r2, [r7, #4]
	ldr	r3, .L371+8
	cmp	r2, r3
	beq	.L365
	ldr	r2, [r7, #4]
	ldr	r3, .L371+12
	cmp	r2, r3
	beq	.L365
	ldr	r2, [r7, #4]
	ldr	r3, .L371+16
	cmp	r2, r3
	beq	.L365
	ldr	r2, [r7, #4]
	ldr	r3, .L371+20
	cmp	r2, r3
	beq	.L365
	ldr	r2, [r7, #4]
	ldr	r3, .L371+24
	cmp	r2, r3
	beq	.L365
	ldr	r2, [r7, #4]
	ldr	r3, .L371+28
	cmp	r2, r3
	beq	.L365
	ldr	r2, [r7, #4]
	ldr	r3, .L371+32
	cmp	r2, r3
	beq	.L365
	ldr	r2, [r7, #4]
	ldr	r3, .L371+36
	cmp	r2, r3
	beq	.L365
	ldr	r2, [r7, #4]
	ldr	r3, .L371+40
	cmp	r2, r3
	bne	.L366
.L365:
	movs	r3, #1
	b	.L367
.L366:
	.loc 1 1360 0 discriminator 3
	movs	r3, #0
.L367:
	.loc 1 1360 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1361 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #4
	beq	.L368
	.loc 1 1361 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	bne	.L369
.L368:
	.loc 1 1361 0 discriminator 1
	movs	r3, #1
	b	.L370
.L369:
	.loc 1 1361 0 discriminator 3
	movs	r3, #0
.L370:
	.loc 1 1361 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1364 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #24]	@ movhi
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1367 0 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #4
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1370 0 discriminator 4
	ldrh	r2, [r7, #14]	@ movhi
	ldrh	r3, [r7, #2]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1373 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #14]	@ movhi
	strh	r2, [r3, #24]	@ movhi
	.loc 1 1374 0 discriminator 4
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L372:
	.align	2
.L371:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
	.word	1073823744
	.word	1073824768
	.word	1073825792
	.word	1073747968
	.word	1073748992
	.word	1073750016
.LFE144:
	.size	TIM_OC1FastConfig, .-TIM_OC1FastConfig
	.section	.text.TIM_OC2FastConfig,"ax",%progbits
	.align	2
	.global	TIM_OC2FastConfig
	.thumb
	.thumb_func
	.type	TIM_OC2FastConfig, %function
TIM_OC2FastConfig:
.LFB145:
	.loc 1 1387 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI102:
	sub	sp, sp, #16
.LCFI103:
	add	r7, sp, #0
.LCFI104:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 1388 0
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1391 0
	ldr	r2, [r7, #4]
	ldr	r3, .L380
	cmp	r2, r3
	beq	.L374
	.loc 1 1391 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L374
	.loc 1 1391 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L380+4
	cmp	r2, r3
	beq	.L374
	ldr	r2, [r7, #4]
	ldr	r3, .L380+8
	cmp	r2, r3
	beq	.L374
	ldr	r2, [r7, #4]
	ldr	r3, .L380+12
	cmp	r2, r3
	beq	.L374
	ldr	r2, [r7, #4]
	ldr	r3, .L380+16
	cmp	r2, r3
	beq	.L374
	ldr	r2, [r7, #4]
	ldr	r3, .L380+20
	cmp	r2, r3
	beq	.L374
	ldr	r2, [r7, #4]
	ldr	r3, .L380+24
	cmp	r2, r3
	bne	.L375
.L374:
	movs	r3, #1
	b	.L376
.L375:
	.loc 1 1391 0 discriminator 3
	movs	r3, #0
.L376:
	.loc 1 1391 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1392 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #4
	beq	.L377
	.loc 1 1392 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	bne	.L378
.L377:
	.loc 1 1392 0 discriminator 1
	movs	r3, #1
	b	.L379
.L378:
	.loc 1 1392 0 discriminator 3
	movs	r3, #0
.L379:
	.loc 1 1392 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1395 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #24]	@ movhi
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1398 0 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #1024
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1401 0 discriminator 4
	ldrh	r3, [r7, #2]	@ movhi
	lsls	r3, r3, #8
	uxth	r2, r3
	ldrh	r3, [r7, #14]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1404 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #14]	@ movhi
	strh	r2, [r3, #24]	@ movhi
	.loc 1 1405 0 discriminator 4
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L381:
	.align	2
.L380:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
	.word	1073823744
	.word	1073747968
.LFE145:
	.size	TIM_OC2FastConfig, .-TIM_OC2FastConfig
	.section	.text.TIM_OC3FastConfig,"ax",%progbits
	.align	2
	.global	TIM_OC3FastConfig
	.thumb
	.thumb_func
	.type	TIM_OC3FastConfig, %function
TIM_OC3FastConfig:
.LFB146:
	.loc 1 1417 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI105:
	sub	sp, sp, #16
.LCFI106:
	add	r7, sp, #0
.LCFI107:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 1418 0
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1421 0
	ldr	r2, [r7, #4]
	ldr	r3, .L389
	cmp	r2, r3
	beq	.L383
	.loc 1 1421 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L383
	.loc 1 1421 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L389+4
	cmp	r2, r3
	beq	.L383
	ldr	r2, [r7, #4]
	ldr	r3, .L389+8
	cmp	r2, r3
	beq	.L383
	ldr	r2, [r7, #4]
	ldr	r3, .L389+12
	cmp	r2, r3
	beq	.L383
	ldr	r2, [r7, #4]
	ldr	r3, .L389+16
	cmp	r2, r3
	bne	.L384
.L383:
	movs	r3, #1
	b	.L385
.L384:
	.loc 1 1421 0 discriminator 3
	movs	r3, #0
.L385:
	.loc 1 1421 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1422 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #4
	beq	.L386
	.loc 1 1422 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	bne	.L387
.L386:
	.loc 1 1422 0 discriminator 1
	movs	r3, #1
	b	.L388
.L387:
	.loc 1 1422 0 discriminator 3
	movs	r3, #0
.L388:
	.loc 1 1422 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1425 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #28]	@ movhi
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1428 0 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #4
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1431 0 discriminator 4
	ldrh	r2, [r7, #14]	@ movhi
	ldrh	r3, [r7, #2]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1434 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #14]	@ movhi
	strh	r2, [r3, #28]	@ movhi
	.loc 1 1435 0 discriminator 4
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L390:
	.align	2
.L389:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
.LFE146:
	.size	TIM_OC3FastConfig, .-TIM_OC3FastConfig
	.section	.text.TIM_OC4FastConfig,"ax",%progbits
	.align	2
	.global	TIM_OC4FastConfig
	.thumb
	.thumb_func
	.type	TIM_OC4FastConfig, %function
TIM_OC4FastConfig:
.LFB147:
	.loc 1 1447 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI108:
	sub	sp, sp, #16
.LCFI109:
	add	r7, sp, #0
.LCFI110:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 1448 0
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1451 0
	ldr	r2, [r7, #4]
	ldr	r3, .L398
	cmp	r2, r3
	beq	.L392
	.loc 1 1451 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L392
	.loc 1 1451 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L398+4
	cmp	r2, r3
	beq	.L392
	ldr	r2, [r7, #4]
	ldr	r3, .L398+8
	cmp	r2, r3
	beq	.L392
	ldr	r2, [r7, #4]
	ldr	r3, .L398+12
	cmp	r2, r3
	beq	.L392
	ldr	r2, [r7, #4]
	ldr	r3, .L398+16
	cmp	r2, r3
	bne	.L393
.L392:
	movs	r3, #1
	b	.L394
.L393:
	.loc 1 1451 0 discriminator 3
	movs	r3, #0
.L394:
	.loc 1 1451 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1452 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #4
	beq	.L395
	.loc 1 1452 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	bne	.L396
.L395:
	.loc 1 1452 0 discriminator 1
	movs	r3, #1
	b	.L397
.L396:
	.loc 1 1452 0 discriminator 3
	movs	r3, #0
.L397:
	.loc 1 1452 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1455 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #28]	@ movhi
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1458 0 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #1024
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1461 0 discriminator 4
	ldrh	r3, [r7, #2]	@ movhi
	lsls	r3, r3, #8
	uxth	r2, r3
	ldrh	r3, [r7, #14]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1464 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #14]	@ movhi
	strh	r2, [r3, #28]	@ movhi
	.loc 1 1465 0 discriminator 4
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L399:
	.align	2
.L398:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
.LFE147:
	.size	TIM_OC4FastConfig, .-TIM_OC4FastConfig
	.section	.text.TIM_ClearOC1Ref,"ax",%progbits
	.align	2
	.global	TIM_ClearOC1Ref
	.thumb
	.thumb_func
	.type	TIM_ClearOC1Ref, %function
TIM_ClearOC1Ref:
.LFB148:
	.loc 1 1477 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI111:
	sub	sp, sp, #16
.LCFI112:
	add	r7, sp, #0
.LCFI113:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 1478 0
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1481 0
	ldr	r2, [r7, #4]
	ldr	r3, .L407
	cmp	r2, r3
	beq	.L401
	.loc 1 1481 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L401
	.loc 1 1481 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L407+4
	cmp	r2, r3
	beq	.L401
	ldr	r2, [r7, #4]
	ldr	r3, .L407+8
	cmp	r2, r3
	beq	.L401
	ldr	r2, [r7, #4]
	ldr	r3, .L407+12
	cmp	r2, r3
	beq	.L401
	ldr	r2, [r7, #4]
	ldr	r3, .L407+16
	cmp	r2, r3
	beq	.L401
	ldr	r2, [r7, #4]
	ldr	r3, .L407+20
	cmp	r2, r3
	beq	.L401
	ldr	r2, [r7, #4]
	ldr	r3, .L407+24
	cmp	r2, r3
	beq	.L401
	ldr	r2, [r7, #4]
	ldr	r3, .L407+28
	cmp	r2, r3
	beq	.L401
	ldr	r2, [r7, #4]
	ldr	r3, .L407+32
	cmp	r2, r3
	beq	.L401
	ldr	r2, [r7, #4]
	ldr	r3, .L407+36
	cmp	r2, r3
	beq	.L401
	ldr	r2, [r7, #4]
	ldr	r3, .L407+40
	cmp	r2, r3
	bne	.L402
.L401:
	movs	r3, #1
	b	.L403
.L402:
	.loc 1 1481 0 discriminator 3
	movs	r3, #0
.L403:
	.loc 1 1481 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1482 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #128
	beq	.L404
	.loc 1 1482 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	bne	.L405
.L404:
	.loc 1 1482 0 discriminator 1
	movs	r3, #1
	b	.L406
.L405:
	.loc 1 1482 0 discriminator 3
	movs	r3, #0
.L406:
	.loc 1 1482 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1484 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #24]	@ movhi
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1487 0 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #128
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1490 0 discriminator 4
	ldrh	r2, [r7, #14]	@ movhi
	ldrh	r3, [r7, #2]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1493 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #14]	@ movhi
	strh	r2, [r3, #24]	@ movhi
	.loc 1 1494 0 discriminator 4
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L408:
	.align	2
.L407:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
	.word	1073823744
	.word	1073824768
	.word	1073825792
	.word	1073747968
	.word	1073748992
	.word	1073750016
.LFE148:
	.size	TIM_ClearOC1Ref, .-TIM_ClearOC1Ref
	.section	.text.TIM_ClearOC2Ref,"ax",%progbits
	.align	2
	.global	TIM_ClearOC2Ref
	.thumb
	.thumb_func
	.type	TIM_ClearOC2Ref, %function
TIM_ClearOC2Ref:
.LFB149:
	.loc 1 1507 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI114:
	sub	sp, sp, #16
.LCFI115:
	add	r7, sp, #0
.LCFI116:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 1508 0
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1511 0
	ldr	r2, [r7, #4]
	ldr	r3, .L416
	cmp	r2, r3
	beq	.L410
	.loc 1 1511 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L410
	.loc 1 1511 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L416+4
	cmp	r2, r3
	beq	.L410
	ldr	r2, [r7, #4]
	ldr	r3, .L416+8
	cmp	r2, r3
	beq	.L410
	ldr	r2, [r7, #4]
	ldr	r3, .L416+12
	cmp	r2, r3
	beq	.L410
	ldr	r2, [r7, #4]
	ldr	r3, .L416+16
	cmp	r2, r3
	beq	.L410
	ldr	r2, [r7, #4]
	ldr	r3, .L416+20
	cmp	r2, r3
	beq	.L410
	ldr	r2, [r7, #4]
	ldr	r3, .L416+24
	cmp	r2, r3
	bne	.L411
.L410:
	movs	r3, #1
	b	.L412
.L411:
	.loc 1 1511 0 discriminator 3
	movs	r3, #0
.L412:
	.loc 1 1511 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1512 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #128
	beq	.L413
	.loc 1 1512 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	bne	.L414
.L413:
	.loc 1 1512 0 discriminator 1
	movs	r3, #1
	b	.L415
.L414:
	.loc 1 1512 0 discriminator 3
	movs	r3, #0
.L415:
	.loc 1 1512 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1514 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #24]	@ movhi
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1517 0 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	ubfx	r3, r3, #0, #15
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1520 0 discriminator 4
	ldrh	r3, [r7, #2]	@ movhi
	lsls	r3, r3, #8
	uxth	r2, r3
	ldrh	r3, [r7, #14]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1523 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #14]	@ movhi
	strh	r2, [r3, #24]	@ movhi
	.loc 1 1524 0 discriminator 4
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L417:
	.align	2
.L416:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
	.word	1073823744
	.word	1073747968
.LFE149:
	.size	TIM_ClearOC2Ref, .-TIM_ClearOC2Ref
	.section	.text.TIM_ClearOC3Ref,"ax",%progbits
	.align	2
	.global	TIM_ClearOC3Ref
	.thumb
	.thumb_func
	.type	TIM_ClearOC3Ref, %function
TIM_ClearOC3Ref:
.LFB150:
	.loc 1 1536 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI117:
	sub	sp, sp, #16
.LCFI118:
	add	r7, sp, #0
.LCFI119:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 1537 0
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1540 0
	ldr	r2, [r7, #4]
	ldr	r3, .L425
	cmp	r2, r3
	beq	.L419
	.loc 1 1540 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L419
	.loc 1 1540 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L425+4
	cmp	r2, r3
	beq	.L419
	ldr	r2, [r7, #4]
	ldr	r3, .L425+8
	cmp	r2, r3
	beq	.L419
	ldr	r2, [r7, #4]
	ldr	r3, .L425+12
	cmp	r2, r3
	beq	.L419
	ldr	r2, [r7, #4]
	ldr	r3, .L425+16
	cmp	r2, r3
	bne	.L420
.L419:
	movs	r3, #1
	b	.L421
.L420:
	.loc 1 1540 0 discriminator 3
	movs	r3, #0
.L421:
	.loc 1 1540 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1541 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #128
	beq	.L422
	.loc 1 1541 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	bne	.L423
.L422:
	.loc 1 1541 0 discriminator 1
	movs	r3, #1
	b	.L424
.L423:
	.loc 1 1541 0 discriminator 3
	movs	r3, #0
.L424:
	.loc 1 1541 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1543 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #28]	@ movhi
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1546 0 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #128
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1549 0 discriminator 4
	ldrh	r2, [r7, #14]	@ movhi
	ldrh	r3, [r7, #2]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1552 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #14]	@ movhi
	strh	r2, [r3, #28]	@ movhi
	.loc 1 1553 0 discriminator 4
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L426:
	.align	2
.L425:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
.LFE150:
	.size	TIM_ClearOC3Ref, .-TIM_ClearOC3Ref
	.section	.text.TIM_ClearOC4Ref,"ax",%progbits
	.align	2
	.global	TIM_ClearOC4Ref
	.thumb
	.thumb_func
	.type	TIM_ClearOC4Ref, %function
TIM_ClearOC4Ref:
.LFB151:
	.loc 1 1565 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI120:
	sub	sp, sp, #16
.LCFI121:
	add	r7, sp, #0
.LCFI122:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 1566 0
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1569 0
	ldr	r2, [r7, #4]
	ldr	r3, .L434
	cmp	r2, r3
	beq	.L428
	.loc 1 1569 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L428
	.loc 1 1569 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L434+4
	cmp	r2, r3
	beq	.L428
	ldr	r2, [r7, #4]
	ldr	r3, .L434+8
	cmp	r2, r3
	beq	.L428
	ldr	r2, [r7, #4]
	ldr	r3, .L434+12
	cmp	r2, r3
	beq	.L428
	ldr	r2, [r7, #4]
	ldr	r3, .L434+16
	cmp	r2, r3
	bne	.L429
.L428:
	movs	r3, #1
	b	.L430
.L429:
	.loc 1 1569 0 discriminator 3
	movs	r3, #0
.L430:
	.loc 1 1569 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1570 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #128
	beq	.L431
	.loc 1 1570 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	bne	.L432
.L431:
	.loc 1 1570 0 discriminator 1
	movs	r3, #1
	b	.L433
.L432:
	.loc 1 1570 0 discriminator 3
	movs	r3, #0
.L433:
	.loc 1 1570 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1572 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #28]	@ movhi
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1575 0 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	ubfx	r3, r3, #0, #15
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1578 0 discriminator 4
	ldrh	r3, [r7, #2]	@ movhi
	lsls	r3, r3, #8
	uxth	r2, r3
	ldrh	r3, [r7, #14]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1581 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #14]	@ movhi
	strh	r2, [r3, #28]	@ movhi
	.loc 1 1582 0 discriminator 4
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L435:
	.align	2
.L434:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
.LFE151:
	.size	TIM_ClearOC4Ref, .-TIM_ClearOC4Ref
	.section	.text.TIM_OC1PolarityConfig,"ax",%progbits
	.align	2
	.global	TIM_OC1PolarityConfig
	.thumb
	.thumb_func
	.type	TIM_OC1PolarityConfig, %function
TIM_OC1PolarityConfig:
.LFB152:
	.loc 1 1594 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI123:
	sub	sp, sp, #16
.LCFI124:
	add	r7, sp, #0
.LCFI125:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 1595 0
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1598 0
	ldr	r2, [r7, #4]
	ldr	r3, .L443
	cmp	r2, r3
	beq	.L437
	.loc 1 1598 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L437
	.loc 1 1598 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L443+4
	cmp	r2, r3
	beq	.L437
	ldr	r2, [r7, #4]
	ldr	r3, .L443+8
	cmp	r2, r3
	beq	.L437
	ldr	r2, [r7, #4]
	ldr	r3, .L443+12
	cmp	r2, r3
	beq	.L437
	ldr	r2, [r7, #4]
	ldr	r3, .L443+16
	cmp	r2, r3
	beq	.L437
	ldr	r2, [r7, #4]
	ldr	r3, .L443+20
	cmp	r2, r3
	beq	.L437
	ldr	r2, [r7, #4]
	ldr	r3, .L443+24
	cmp	r2, r3
	beq	.L437
	ldr	r2, [r7, #4]
	ldr	r3, .L443+28
	cmp	r2, r3
	beq	.L437
	ldr	r2, [r7, #4]
	ldr	r3, .L443+32
	cmp	r2, r3
	beq	.L437
	ldr	r2, [r7, #4]
	ldr	r3, .L443+36
	cmp	r2, r3
	beq	.L437
	ldr	r2, [r7, #4]
	ldr	r3, .L443+40
	cmp	r2, r3
	bne	.L438
.L437:
	movs	r3, #1
	b	.L439
.L438:
	.loc 1 1598 0 discriminator 3
	movs	r3, #0
.L439:
	.loc 1 1598 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1599 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	beq	.L440
	.loc 1 1599 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #2
	bne	.L441
.L440:
	.loc 1 1599 0 discriminator 1
	movs	r3, #1
	b	.L442
.L441:
	.loc 1 1599 0 discriminator 3
	movs	r3, #0
.L442:
	.loc 1 1599 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1601 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #32]	@ movhi
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1604 0 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1605 0 discriminator 4
	ldrh	r2, [r7, #14]	@ movhi
	ldrh	r3, [r7, #2]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1608 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #14]	@ movhi
	strh	r2, [r3, #32]	@ movhi
	.loc 1 1609 0 discriminator 4
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L444:
	.align	2
.L443:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
	.word	1073823744
	.word	1073824768
	.word	1073825792
	.word	1073747968
	.word	1073748992
	.word	1073750016
.LFE152:
	.size	TIM_OC1PolarityConfig, .-TIM_OC1PolarityConfig
	.section	.text.TIM_OC1NPolarityConfig,"ax",%progbits
	.align	2
	.global	TIM_OC1NPolarityConfig
	.thumb
	.thumb_func
	.type	TIM_OC1NPolarityConfig, %function
TIM_OC1NPolarityConfig:
.LFB153:
	.loc 1 1621 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI126:
	sub	sp, sp, #16
.LCFI127:
	add	r7, sp, #0
.LCFI128:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 1622 0
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1624 0
	ldr	r2, [r7, #4]
	ldr	r3, .L452
	cmp	r2, r3
	beq	.L446
	.loc 1 1624 0 is_stmt 0 discriminator 2
	ldr	r2, [r7, #4]
	ldr	r3, .L452+4
	cmp	r2, r3
	bne	.L447
.L446:
	.loc 1 1624 0 discriminator 1
	movs	r3, #1
	b	.L448
.L447:
	.loc 1 1624 0 discriminator 3
	movs	r3, #0
.L448:
	.loc 1 1624 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1625 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	beq	.L449
	.loc 1 1625 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #8
	bne	.L450
.L449:
	.loc 1 1625 0 discriminator 1
	movs	r3, #1
	b	.L451
.L450:
	.loc 1 1625 0 discriminator 3
	movs	r3, #0
.L451:
	.loc 1 1625 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1627 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #32]	@ movhi
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1630 0 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #8
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1631 0 discriminator 4
	ldrh	r2, [r7, #14]	@ movhi
	ldrh	r3, [r7, #2]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1634 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #14]	@ movhi
	strh	r2, [r3, #32]	@ movhi
	.loc 1 1635 0 discriminator 4
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L453:
	.align	2
.L452:
	.word	1073807360
	.word	1073808384
.LFE153:
	.size	TIM_OC1NPolarityConfig, .-TIM_OC1NPolarityConfig
	.section	.text.TIM_OC2PolarityConfig,"ax",%progbits
	.align	2
	.global	TIM_OC2PolarityConfig
	.thumb
	.thumb_func
	.type	TIM_OC2PolarityConfig, %function
TIM_OC2PolarityConfig:
.LFB154:
	.loc 1 1648 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI129:
	sub	sp, sp, #16
.LCFI130:
	add	r7, sp, #0
.LCFI131:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 1649 0
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1652 0
	ldr	r2, [r7, #4]
	ldr	r3, .L461
	cmp	r2, r3
	beq	.L455
	.loc 1 1652 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L455
	.loc 1 1652 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L461+4
	cmp	r2, r3
	beq	.L455
	ldr	r2, [r7, #4]
	ldr	r3, .L461+8
	cmp	r2, r3
	beq	.L455
	ldr	r2, [r7, #4]
	ldr	r3, .L461+12
	cmp	r2, r3
	beq	.L455
	ldr	r2, [r7, #4]
	ldr	r3, .L461+16
	cmp	r2, r3
	beq	.L455
	ldr	r2, [r7, #4]
	ldr	r3, .L461+20
	cmp	r2, r3
	beq	.L455
	ldr	r2, [r7, #4]
	ldr	r3, .L461+24
	cmp	r2, r3
	bne	.L456
.L455:
	movs	r3, #1
	b	.L457
.L456:
	.loc 1 1652 0 discriminator 3
	movs	r3, #0
.L457:
	.loc 1 1652 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1653 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	beq	.L458
	.loc 1 1653 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #2
	bne	.L459
.L458:
	.loc 1 1653 0 discriminator 1
	movs	r3, #1
	b	.L460
.L459:
	.loc 1 1653 0 discriminator 3
	movs	r3, #0
.L460:
	.loc 1 1653 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1655 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #32]	@ movhi
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1658 0 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #32
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1659 0 discriminator 4
	ldrh	r3, [r7, #2]	@ movhi
	lsls	r3, r3, #4
	uxth	r2, r3
	ldrh	r3, [r7, #14]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1662 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #14]	@ movhi
	strh	r2, [r3, #32]	@ movhi
	.loc 1 1663 0 discriminator 4
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L462:
	.align	2
.L461:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
	.word	1073823744
	.word	1073747968
.LFE154:
	.size	TIM_OC2PolarityConfig, .-TIM_OC2PolarityConfig
	.section	.text.TIM_OC2NPolarityConfig,"ax",%progbits
	.align	2
	.global	TIM_OC2NPolarityConfig
	.thumb
	.thumb_func
	.type	TIM_OC2NPolarityConfig, %function
TIM_OC2NPolarityConfig:
.LFB155:
	.loc 1 1675 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI132:
	sub	sp, sp, #16
.LCFI133:
	add	r7, sp, #0
.LCFI134:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 1676 0
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1679 0
	ldr	r2, [r7, #4]
	ldr	r3, .L470
	cmp	r2, r3
	beq	.L464
	.loc 1 1679 0 is_stmt 0 discriminator 2
	ldr	r2, [r7, #4]
	ldr	r3, .L470+4
	cmp	r2, r3
	bne	.L465
.L464:
	.loc 1 1679 0 discriminator 1
	movs	r3, #1
	b	.L466
.L465:
	.loc 1 1679 0 discriminator 3
	movs	r3, #0
.L466:
	.loc 1 1679 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1680 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	beq	.L467
	.loc 1 1680 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #8
	bne	.L468
.L467:
	.loc 1 1680 0 discriminator 1
	movs	r3, #1
	b	.L469
.L468:
	.loc 1 1680 0 discriminator 3
	movs	r3, #0
.L469:
	.loc 1 1680 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1682 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #32]	@ movhi
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1685 0 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #128
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1686 0 discriminator 4
	ldrh	r3, [r7, #2]	@ movhi
	lsls	r3, r3, #4
	uxth	r2, r3
	ldrh	r3, [r7, #14]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1689 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #14]	@ movhi
	strh	r2, [r3, #32]	@ movhi
	.loc 1 1690 0 discriminator 4
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L471:
	.align	2
.L470:
	.word	1073807360
	.word	1073808384
.LFE155:
	.size	TIM_OC2NPolarityConfig, .-TIM_OC2NPolarityConfig
	.section	.text.TIM_OC3PolarityConfig,"ax",%progbits
	.align	2
	.global	TIM_OC3PolarityConfig
	.thumb
	.thumb_func
	.type	TIM_OC3PolarityConfig, %function
TIM_OC3PolarityConfig:
.LFB156:
	.loc 1 1702 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI135:
	sub	sp, sp, #16
.LCFI136:
	add	r7, sp, #0
.LCFI137:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 1703 0
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1706 0
	ldr	r2, [r7, #4]
	ldr	r3, .L479
	cmp	r2, r3
	beq	.L473
	.loc 1 1706 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L473
	.loc 1 1706 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L479+4
	cmp	r2, r3
	beq	.L473
	ldr	r2, [r7, #4]
	ldr	r3, .L479+8
	cmp	r2, r3
	beq	.L473
	ldr	r2, [r7, #4]
	ldr	r3, .L479+12
	cmp	r2, r3
	beq	.L473
	ldr	r2, [r7, #4]
	ldr	r3, .L479+16
	cmp	r2, r3
	bne	.L474
.L473:
	movs	r3, #1
	b	.L475
.L474:
	.loc 1 1706 0 discriminator 3
	movs	r3, #0
.L475:
	.loc 1 1706 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1707 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	beq	.L476
	.loc 1 1707 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #2
	bne	.L477
.L476:
	.loc 1 1707 0 discriminator 1
	movs	r3, #1
	b	.L478
.L477:
	.loc 1 1707 0 discriminator 3
	movs	r3, #0
.L478:
	.loc 1 1707 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1709 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #32]	@ movhi
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1712 0 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #512
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1713 0 discriminator 4
	ldrh	r3, [r7, #2]	@ movhi
	lsls	r3, r3, #8
	uxth	r2, r3
	ldrh	r3, [r7, #14]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1716 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #14]	@ movhi
	strh	r2, [r3, #32]	@ movhi
	.loc 1 1717 0 discriminator 4
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L480:
	.align	2
.L479:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
.LFE156:
	.size	TIM_OC3PolarityConfig, .-TIM_OC3PolarityConfig
	.section	.text.TIM_OC3NPolarityConfig,"ax",%progbits
	.align	2
	.global	TIM_OC3NPolarityConfig
	.thumb
	.thumb_func
	.type	TIM_OC3NPolarityConfig, %function
TIM_OC3NPolarityConfig:
.LFB157:
	.loc 1 1729 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI138:
	sub	sp, sp, #16
.LCFI139:
	add	r7, sp, #0
.LCFI140:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 1730 0
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1733 0
	ldr	r2, [r7, #4]
	ldr	r3, .L488
	cmp	r2, r3
	beq	.L482
	.loc 1 1733 0 is_stmt 0 discriminator 2
	ldr	r2, [r7, #4]
	ldr	r3, .L488+4
	cmp	r2, r3
	bne	.L483
.L482:
	.loc 1 1733 0 discriminator 1
	movs	r3, #1
	b	.L484
.L483:
	.loc 1 1733 0 discriminator 3
	movs	r3, #0
.L484:
	.loc 1 1733 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1734 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	beq	.L485
	.loc 1 1734 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #8
	bne	.L486
.L485:
	.loc 1 1734 0 discriminator 1
	movs	r3, #1
	b	.L487
.L486:
	.loc 1 1734 0 discriminator 3
	movs	r3, #0
.L487:
	.loc 1 1734 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1736 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #32]	@ movhi
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1739 0 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #2048
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1740 0 discriminator 4
	ldrh	r3, [r7, #2]	@ movhi
	lsls	r3, r3, #8
	uxth	r2, r3
	ldrh	r3, [r7, #14]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1743 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #14]	@ movhi
	strh	r2, [r3, #32]	@ movhi
	.loc 1 1744 0 discriminator 4
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L489:
	.align	2
.L488:
	.word	1073807360
	.word	1073808384
.LFE157:
	.size	TIM_OC3NPolarityConfig, .-TIM_OC3NPolarityConfig
	.section	.text.TIM_OC4PolarityConfig,"ax",%progbits
	.align	2
	.global	TIM_OC4PolarityConfig
	.thumb
	.thumb_func
	.type	TIM_OC4PolarityConfig, %function
TIM_OC4PolarityConfig:
.LFB158:
	.loc 1 1756 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI141:
	sub	sp, sp, #16
.LCFI142:
	add	r7, sp, #0
.LCFI143:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 1757 0
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1760 0
	ldr	r2, [r7, #4]
	ldr	r3, .L497
	cmp	r2, r3
	beq	.L491
	.loc 1 1760 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L491
	.loc 1 1760 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L497+4
	cmp	r2, r3
	beq	.L491
	ldr	r2, [r7, #4]
	ldr	r3, .L497+8
	cmp	r2, r3
	beq	.L491
	ldr	r2, [r7, #4]
	ldr	r3, .L497+12
	cmp	r2, r3
	beq	.L491
	ldr	r2, [r7, #4]
	ldr	r3, .L497+16
	cmp	r2, r3
	bne	.L492
.L491:
	movs	r3, #1
	b	.L493
.L492:
	.loc 1 1760 0 discriminator 3
	movs	r3, #0
.L493:
	.loc 1 1760 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1761 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	beq	.L494
	.loc 1 1761 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #2
	bne	.L495
.L494:
	.loc 1 1761 0 discriminator 1
	movs	r3, #1
	b	.L496
.L495:
	.loc 1 1761 0 discriminator 3
	movs	r3, #0
.L496:
	.loc 1 1761 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1763 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #32]	@ movhi
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1766 0 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #8192
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1767 0 discriminator 4
	ldrh	r3, [r7, #2]	@ movhi
	lsls	r3, r3, #12
	uxth	r2, r3
	ldrh	r3, [r7, #14]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1770 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #14]	@ movhi
	strh	r2, [r3, #32]	@ movhi
	.loc 1 1771 0 discriminator 4
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L498:
	.align	2
.L497:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
.LFE158:
	.size	TIM_OC4PolarityConfig, .-TIM_OC4PolarityConfig
	.section	.text.TIM_CCxCmd,"ax",%progbits
	.align	2
	.global	TIM_CCxCmd
	.thumb
	.thumb_func
	.type	TIM_CCxCmd, %function
TIM_CCxCmd:
.LFB159:
	.loc 1 1787 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI144:
	sub	sp, sp, #16
.LCFI145:
	add	r7, sp, #0
.LCFI146:
	str	r0, [r7, #4]
	mov	r3, r2
	mov	r2, r1	@ movhi
	strh	r2, [r7, #2]	@ movhi
	strh	r3, [r7]	@ movhi
	.loc 1 1788 0
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1791 0
	ldr	r2, [r7, #4]
	ldr	r3, .L509
	cmp	r2, r3
	beq	.L500
	.loc 1 1791 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L500
	.loc 1 1791 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L509+4
	cmp	r2, r3
	beq	.L500
	ldr	r2, [r7, #4]
	ldr	r3, .L509+8
	cmp	r2, r3
	beq	.L500
	ldr	r2, [r7, #4]
	ldr	r3, .L509+12
	cmp	r2, r3
	beq	.L500
	ldr	r2, [r7, #4]
	ldr	r3, .L509+16
	cmp	r2, r3
	beq	.L500
	ldr	r2, [r7, #4]
	ldr	r3, .L509+20
	cmp	r2, r3
	beq	.L500
	ldr	r2, [r7, #4]
	ldr	r3, .L509+24
	cmp	r2, r3
	beq	.L500
	ldr	r2, [r7, #4]
	ldr	r3, .L509+28
	cmp	r2, r3
	beq	.L500
	ldr	r2, [r7, #4]
	ldr	r3, .L509+32
	cmp	r2, r3
	beq	.L500
	ldr	r2, [r7, #4]
	ldr	r3, .L509+36
	cmp	r2, r3
	beq	.L500
	ldr	r2, [r7, #4]
	ldr	r3, .L509+40
	cmp	r2, r3
	bne	.L501
.L500:
	movs	r3, #1
	b	.L502
.L501:
	.loc 1 1791 0 discriminator 3
	movs	r3, #0
.L502:
	.loc 1 1791 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1792 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	beq	.L503
	.loc 1 1792 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #4
	beq	.L503
	.loc 1 1792 0 discriminator 1
	ldrh	r3, [r7, #2]
	cmp	r3, #8
	beq	.L503
	ldrh	r3, [r7, #2]
	cmp	r3, #12
	bne	.L504
.L503:
	movs	r3, #1
	b	.L505
.L504:
	.loc 1 1792 0 discriminator 3
	movs	r3, #0
.L505:
	.loc 1 1792 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1793 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7]
	cmp	r3, #1
	beq	.L506
	.loc 1 1793 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7]
	cmp	r3, #0
	bne	.L507
.L506:
	.loc 1 1793 0 discriminator 1
	movs	r3, #1
	b	.L508
.L507:
	.loc 1 1793 0 discriminator 3
	movs	r3, #0
.L508:
	.loc 1 1793 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1795 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	movs	r2, #1
	lsl	r3, r2, r3
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1798 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #32]	@ movhi
	uxth	r2, r3
	ldrh	r3, [r7, #14]	@ movhi
	mvns	r3, r3
	uxth	r3, r3
	ands	r3, r3, r2
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #32]	@ movhi
	.loc 1 1801 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #32]	@ movhi
	uxth	r2, r3
	ldrh	r1, [r7]
	ldrh	r3, [r7, #2]
	lsl	r3, r1, r3
	uxth	r3, r3
	orrs	r3, r3, r2
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #32]	@ movhi
	.loc 1 1802 0 discriminator 4
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L510:
	.align	2
.L509:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
	.word	1073823744
	.word	1073824768
	.word	1073825792
	.word	1073747968
	.word	1073748992
	.word	1073750016
.LFE159:
	.size	TIM_CCxCmd, .-TIM_CCxCmd
	.section	.text.TIM_CCxNCmd,"ax",%progbits
	.align	2
	.global	TIM_CCxNCmd
	.thumb
	.thumb_func
	.type	TIM_CCxNCmd, %function
TIM_CCxNCmd:
.LFB160:
	.loc 1 1817 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI147:
	sub	sp, sp, #16
.LCFI148:
	add	r7, sp, #0
.LCFI149:
	str	r0, [r7, #4]
	mov	r3, r2
	mov	r2, r1	@ movhi
	strh	r2, [r7, #2]	@ movhi
	strh	r3, [r7]	@ movhi
	.loc 1 1818 0
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1821 0
	ldr	r2, [r7, #4]
	ldr	r3, .L521
	cmp	r2, r3
	beq	.L512
	.loc 1 1821 0 is_stmt 0 discriminator 2
	ldr	r2, [r7, #4]
	ldr	r3, .L521+4
	cmp	r2, r3
	bne	.L513
.L512:
	.loc 1 1821 0 discriminator 1
	movs	r3, #1
	b	.L514
.L513:
	.loc 1 1821 0 discriminator 3
	movs	r3, #0
.L514:
	.loc 1 1821 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1822 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	beq	.L515
	.loc 1 1822 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #4
	beq	.L515
	.loc 1 1822 0 discriminator 1
	ldrh	r3, [r7, #2]
	cmp	r3, #8
	bne	.L516
.L515:
	movs	r3, #1
	b	.L517
.L516:
	.loc 1 1822 0 discriminator 3
	movs	r3, #0
.L517:
	.loc 1 1822 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1823 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7]
	cmp	r3, #4
	beq	.L518
	.loc 1 1823 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7]
	cmp	r3, #0
	bne	.L519
.L518:
	.loc 1 1823 0 discriminator 1
	movs	r3, #1
	b	.L520
.L519:
	.loc 1 1823 0 discriminator 3
	movs	r3, #0
.L520:
	.loc 1 1823 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1825 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	movs	r2, #4
	lsl	r3, r2, r3
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1828 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #32]	@ movhi
	uxth	r2, r3
	ldrh	r3, [r7, #14]	@ movhi
	mvns	r3, r3
	uxth	r3, r3
	ands	r3, r3, r2
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #32]	@ movhi
	.loc 1 1831 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #32]	@ movhi
	uxth	r2, r3
	ldrh	r1, [r7]
	ldrh	r3, [r7, #2]
	lsl	r3, r1, r3
	uxth	r3, r3
	orrs	r3, r3, r2
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #32]	@ movhi
	.loc 1 1832 0 discriminator 4
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L522:
	.align	2
.L521:
	.word	1073807360
	.word	1073808384
.LFE160:
	.size	TIM_CCxNCmd, .-TIM_CCxNCmd
	.section	.text.TIM_ICInit,"ax",%progbits
	.align	2
	.global	TIM_ICInit
	.thumb
	.thumb_func
	.type	TIM_ICInit, %function
TIM_ICInit:
.LFB161:
	.loc 1 1901 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI150:
	sub	sp, sp, #8
.LCFI151:
	add	r7, sp, #0
.LCFI152:
	str	r0, [r7, #4]
	str	r1, [r7]
	.loc 1 1903 0
	ldr	r2, [r7, #4]
	ldr	r3, .L549
	cmp	r2, r3
	beq	.L524
	.loc 1 1903 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L524
	.loc 1 1903 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L549+4
	cmp	r2, r3
	beq	.L524
	ldr	r2, [r7, #4]
	ldr	r3, .L549+8
	cmp	r2, r3
	beq	.L524
	ldr	r2, [r7, #4]
	ldr	r3, .L549+12
	cmp	r2, r3
	beq	.L524
	ldr	r2, [r7, #4]
	ldr	r3, .L549+16
	cmp	r2, r3
	beq	.L524
	ldr	r2, [r7, #4]
	ldr	r3, .L549+20
	cmp	r2, r3
	beq	.L524
	ldr	r2, [r7, #4]
	ldr	r3, .L549+24
	cmp	r2, r3
	beq	.L524
	ldr	r2, [r7, #4]
	ldr	r3, .L549+28
	cmp	r2, r3
	beq	.L524
	ldr	r2, [r7, #4]
	ldr	r3, .L549+32
	cmp	r2, r3
	beq	.L524
	ldr	r2, [r7, #4]
	ldr	r3, .L549+36
	cmp	r2, r3
	beq	.L524
	ldr	r2, [r7, #4]
	ldr	r3, .L549+40
	cmp	r2, r3
	bne	.L525
.L524:
	movs	r3, #1
	b	.L526
.L525:
	.loc 1 1903 0 discriminator 3
	movs	r3, #0
.L526:
	.loc 1 1903 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1904 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #2]
	cmp	r3, #0
	beq	.L527
	.loc 1 1904 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3, #2]
	cmp	r3, #2
	beq	.L527
	.loc 1 1904 0 discriminator 1
	ldr	r3, [r7]
	ldrh	r3, [r3, #2]
	cmp	r3, #10
	bne	.L528
.L527:
	movs	r3, #1
	b	.L529
.L528:
	.loc 1 1904 0 discriminator 3
	movs	r3, #0
.L529:
	.loc 1 1904 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1905 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #4]
	cmp	r3, #1
	beq	.L530
	.loc 1 1905 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3, #4]
	cmp	r3, #2
	beq	.L530
	.loc 1 1905 0 discriminator 1
	ldr	r3, [r7]
	ldrh	r3, [r3, #4]
	cmp	r3, #3
	bne	.L531
.L530:
	movs	r3, #1
	b	.L532
.L531:
	.loc 1 1905 0 discriminator 3
	movs	r3, #0
.L532:
	.loc 1 1905 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1906 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #6]
	cmp	r3, #0
	beq	.L533
	.loc 1 1906 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3, #6]
	cmp	r3, #4
	beq	.L533
	.loc 1 1906 0 discriminator 1
	ldr	r3, [r7]
	ldrh	r3, [r3, #6]
	cmp	r3, #8
	beq	.L533
	ldr	r3, [r7]
	ldrh	r3, [r3, #6]
	cmp	r3, #12
	bne	.L534
.L533:
	movs	r3, #1
	b	.L535
.L534:
	.loc 1 1906 0 discriminator 3
	movs	r3, #0
.L535:
	.loc 1 1906 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1907 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #8]
	cmp	r3, #15
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 1909 0 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3]
	cmp	r3, #0
	bne	.L536
	.loc 1 1912 0
	ldr	r3, [r7]
	ldrh	r1, [r3, #2]
	ldr	r3, [r7]
	ldrh	r2, [r3, #4]
	ldr	r3, [r7]
	ldrh	r3, [r3, #8]
	ldr	r0, [r7, #4]
	bl	TI1_Config
	.loc 1 1916 0
	ldr	r3, [r7]
	ldrh	r3, [r3, #6]
	ldr	r0, [r7, #4]
	mov	r1, r3
	bl	TIM_SetIC1Prescaler
	b	.L523
.L536:
	.loc 1 1918 0
	ldr	r3, [r7]
	ldrh	r3, [r3]
	cmp	r3, #4
	bne	.L538
	.loc 1 1921 0
	ldr	r2, [r7, #4]
	ldr	r3, .L549
	cmp	r2, r3
	beq	.L539
	.loc 1 1921 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L539
	.loc 1 1921 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L549+4
	cmp	r2, r3
	beq	.L539
	ldr	r2, [r7, #4]
	ldr	r3, .L549+8
	cmp	r2, r3
	beq	.L539
	ldr	r2, [r7, #4]
	ldr	r3, .L549+12
	cmp	r2, r3
	beq	.L539
	ldr	r2, [r7, #4]
	ldr	r3, .L549+16
	cmp	r2, r3
	beq	.L539
	ldr	r2, [r7, #4]
	ldr	r3, .L549+20
	cmp	r2, r3
	beq	.L539
	ldr	r2, [r7, #4]
	ldr	r3, .L549+32
	cmp	r2, r3
	bne	.L540
.L539:
	movs	r3, #1
	b	.L541
.L540:
	.loc 1 1921 0 discriminator 3
	movs	r3, #0
.L541:
	.loc 1 1921 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1922 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r1, [r3, #2]
	ldr	r3, [r7]
	ldrh	r2, [r3, #4]
	ldr	r3, [r7]
	ldrh	r3, [r3, #8]
	ldr	r0, [r7, #4]
	bl	TI2_Config
	.loc 1 1926 0 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #6]
	ldr	r0, [r7, #4]
	mov	r1, r3
	bl	TIM_SetIC2Prescaler
	b	.L523
.L538:
	.loc 1 1928 0
	ldr	r3, [r7]
	ldrh	r3, [r3]
	cmp	r3, #8
	bne	.L542
	.loc 1 1931 0
	ldr	r2, [r7, #4]
	ldr	r3, .L549
	cmp	r2, r3
	beq	.L543
	.loc 1 1931 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L543
	.loc 1 1931 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L549+4
	cmp	r2, r3
	beq	.L543
	ldr	r2, [r7, #4]
	ldr	r3, .L549+8
	cmp	r2, r3
	beq	.L543
	ldr	r2, [r7, #4]
	ldr	r3, .L549+12
	cmp	r2, r3
	beq	.L543
	ldr	r2, [r7, #4]
	ldr	r3, .L549+16
	cmp	r2, r3
	bne	.L544
.L543:
	movs	r3, #1
	b	.L545
.L544:
	.loc 1 1931 0 discriminator 3
	movs	r3, #0
.L545:
	.loc 1 1931 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1932 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r1, [r3, #2]
	ldr	r3, [r7]
	ldrh	r2, [r3, #4]
	ldr	r3, [r7]
	ldrh	r3, [r3, #8]
	ldr	r0, [r7, #4]
	bl	TI3_Config
	.loc 1 1936 0 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #6]
	ldr	r0, [r7, #4]
	mov	r1, r3
	bl	TIM_SetIC3Prescaler
	b	.L523
.L542:
	.loc 1 1941 0
	ldr	r2, [r7, #4]
	ldr	r3, .L549
	cmp	r2, r3
	beq	.L546
	.loc 1 1941 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L546
	.loc 1 1941 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L549+4
	cmp	r2, r3
	beq	.L546
	ldr	r2, [r7, #4]
	ldr	r3, .L549+8
	cmp	r2, r3
	beq	.L546
	ldr	r2, [r7, #4]
	ldr	r3, .L549+12
	cmp	r2, r3
	beq	.L546
	ldr	r2, [r7, #4]
	ldr	r3, .L549+16
	cmp	r2, r3
	bne	.L547
.L546:
	movs	r3, #1
	b	.L548
.L547:
	.loc 1 1941 0 discriminator 3
	movs	r3, #0
.L548:
	.loc 1 1941 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1942 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r1, [r3, #2]
	ldr	r3, [r7]
	ldrh	r2, [r3, #4]
	ldr	r3, [r7]
	ldrh	r3, [r3, #8]
	ldr	r0, [r7, #4]
	bl	TI4_Config
	.loc 1 1946 0 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #6]
	ldr	r0, [r7, #4]
	mov	r1, r3
	bl	TIM_SetIC4Prescaler
.L523:
	.loc 1 1948 0
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L550:
	.align	2
.L549:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
	.word	1073823744
	.word	1073824768
	.word	1073825792
	.word	1073747968
	.word	1073748992
	.word	1073750016
.LFE161:
	.size	TIM_ICInit, .-TIM_ICInit
	.section	.text.TIM_ICStructInit,"ax",%progbits
	.align	2
	.global	TIM_ICStructInit
	.thumb
	.thumb_func
	.type	TIM_ICStructInit, %function
TIM_ICStructInit:
.LFB162:
	.loc 1 1957 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7}
.LCFI153:
	sub	sp, sp, #12
.LCFI154:
	add	r7, sp, #0
.LCFI155:
	str	r0, [r7, #4]
	.loc 1 1959 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	strh	r2, [r3]	@ movhi
	.loc 1 1960 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	strh	r2, [r3, #2]	@ movhi
	.loc 1 1961 0
	ldr	r3, [r7, #4]
	movs	r2, #1
	strh	r2, [r3, #4]	@ movhi
	.loc 1 1962 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	strh	r2, [r3, #6]	@ movhi
	.loc 1 1963 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	strh	r2, [r3, #8]	@ movhi
	.loc 1 1964 0
	adds	r7, r7, #12
	mov	sp, r7
	@ sp needed
	ldr	r7, [sp], #4
	bx	lr
.LFE162:
	.size	TIM_ICStructInit, .-TIM_ICStructInit
	.section	.text.TIM_PWMIConfig,"ax",%progbits
	.align	2
	.global	TIM_PWMIConfig
	.thumb
	.thumb_func
	.type	TIM_PWMIConfig, %function
TIM_PWMIConfig:
.LFB163:
	.loc 1 1976 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI156:
	sub	sp, sp, #16
.LCFI157:
	add	r7, sp, #0
.LCFI158:
	str	r0, [r7, #4]
	str	r1, [r7]
	.loc 1 1977 0
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	.loc 1 1978 0
	movs	r3, #1
	strh	r3, [r7, #12]	@ movhi
	.loc 1 1981 0
	ldr	r2, [r7, #4]
	ldr	r3, .L562
	cmp	r2, r3
	beq	.L553
	.loc 1 1981 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L553
	.loc 1 1981 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L562+4
	cmp	r2, r3
	beq	.L553
	ldr	r2, [r7, #4]
	ldr	r3, .L562+8
	cmp	r2, r3
	beq	.L553
	ldr	r2, [r7, #4]
	ldr	r3, .L562+12
	cmp	r2, r3
	beq	.L553
	ldr	r2, [r7, #4]
	ldr	r3, .L562+16
	cmp	r2, r3
	beq	.L553
	ldr	r2, [r7, #4]
	ldr	r3, .L562+20
	cmp	r2, r3
	beq	.L553
	ldr	r2, [r7, #4]
	ldr	r3, .L562+24
	cmp	r2, r3
	bne	.L554
.L553:
	movs	r3, #1
	b	.L555
.L554:
	.loc 1 1981 0 discriminator 3
	movs	r3, #0
.L555:
	.loc 1 1981 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 1984 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #2]
	cmp	r3, #0
	bne	.L556
	.loc 1 1986 0
	movs	r3, #2
	strh	r3, [r7, #14]	@ movhi
	b	.L557
.L556:
	.loc 1 1990 0
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
.L557:
	.loc 1 1993 0
	ldr	r3, [r7]
	ldrh	r3, [r3, #4]
	cmp	r3, #1
	bne	.L558
	.loc 1 1995 0
	movs	r3, #2
	strh	r3, [r7, #12]	@ movhi
	b	.L559
.L558:
	.loc 1 1999 0
	movs	r3, #1
	strh	r3, [r7, #12]	@ movhi
.L559:
	.loc 1 2001 0
	ldr	r3, [r7]
	ldrh	r3, [r3]
	cmp	r3, #0
	bne	.L560
	.loc 1 2004 0
	ldr	r3, [r7]
	ldrh	r1, [r3, #2]
	ldr	r3, [r7]
	ldrh	r2, [r3, #4]
	ldr	r3, [r7]
	ldrh	r3, [r3, #8]
	ldr	r0, [r7, #4]
	bl	TI1_Config
	.loc 1 2007 0
	ldr	r3, [r7]
	ldrh	r3, [r3, #6]
	ldr	r0, [r7, #4]
	mov	r1, r3
	bl	TIM_SetIC1Prescaler
	.loc 1 2009 0
	ldr	r3, [r7]
	ldrh	r3, [r3, #8]
	ldrh	r1, [r7, #14]
	ldrh	r2, [r7, #12]
	ldr	r0, [r7, #4]
	bl	TI2_Config
	.loc 1 2011 0
	ldr	r3, [r7]
	ldrh	r3, [r3, #6]
	ldr	r0, [r7, #4]
	mov	r1, r3
	bl	TIM_SetIC2Prescaler
	b	.L552
.L560:
	.loc 1 2016 0
	ldr	r3, [r7]
	ldrh	r1, [r3, #2]
	ldr	r3, [r7]
	ldrh	r2, [r3, #4]
	ldr	r3, [r7]
	ldrh	r3, [r3, #8]
	ldr	r0, [r7, #4]
	bl	TI2_Config
	.loc 1 2019 0
	ldr	r3, [r7]
	ldrh	r3, [r3, #6]
	ldr	r0, [r7, #4]
	mov	r1, r3
	bl	TIM_SetIC2Prescaler
	.loc 1 2021 0
	ldr	r3, [r7]
	ldrh	r3, [r3, #8]
	ldrh	r1, [r7, #14]
	ldrh	r2, [r7, #12]
	ldr	r0, [r7, #4]
	bl	TI1_Config
	.loc 1 2023 0
	ldr	r3, [r7]
	ldrh	r3, [r3, #6]
	ldr	r0, [r7, #4]
	mov	r1, r3
	bl	TIM_SetIC1Prescaler
.L552:
	.loc 1 2025 0
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L563:
	.align	2
.L562:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
	.word	1073823744
	.word	1073747968
.LFE163:
	.size	TIM_PWMIConfig, .-TIM_PWMIConfig
	.section	.text.TIM_GetCapture1,"ax",%progbits
	.align	2
	.global	TIM_GetCapture1
	.thumb
	.thumb_func
	.type	TIM_GetCapture1, %function
TIM_GetCapture1:
.LFB164:
	.loc 1 2033 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI159:
	sub	sp, sp, #8
.LCFI160:
	add	r7, sp, #0
.LCFI161:
	str	r0, [r7, #4]
	.loc 1 2035 0
	ldr	r2, [r7, #4]
	ldr	r3, .L569
	cmp	r2, r3
	beq	.L565
	.loc 1 2035 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L565
	.loc 1 2035 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L569+4
	cmp	r2, r3
	beq	.L565
	ldr	r2, [r7, #4]
	ldr	r3, .L569+8
	cmp	r2, r3
	beq	.L565
	ldr	r2, [r7, #4]
	ldr	r3, .L569+12
	cmp	r2, r3
	beq	.L565
	ldr	r2, [r7, #4]
	ldr	r3, .L569+16
	cmp	r2, r3
	beq	.L565
	ldr	r2, [r7, #4]
	ldr	r3, .L569+20
	cmp	r2, r3
	beq	.L565
	ldr	r2, [r7, #4]
	ldr	r3, .L569+24
	cmp	r2, r3
	beq	.L565
	ldr	r2, [r7, #4]
	ldr	r3, .L569+28
	cmp	r2, r3
	beq	.L565
	ldr	r2, [r7, #4]
	ldr	r3, .L569+32
	cmp	r2, r3
	beq	.L565
	ldr	r2, [r7, #4]
	ldr	r3, .L569+36
	cmp	r2, r3
	beq	.L565
	ldr	r2, [r7, #4]
	ldr	r3, .L569+40
	cmp	r2, r3
	bne	.L566
.L565:
	movs	r3, #1
	b	.L567
.L566:
	.loc 1 2035 0 discriminator 3
	movs	r3, #0
.L567:
	.loc 1 2035 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2038 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #52]
	.loc 1 2039 0 discriminator 4
	mov	r0, r3
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L570:
	.align	2
.L569:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
	.word	1073823744
	.word	1073824768
	.word	1073825792
	.word	1073747968
	.word	1073748992
	.word	1073750016
.LFE164:
	.size	TIM_GetCapture1, .-TIM_GetCapture1
	.section	.text.TIM_GetCapture2,"ax",%progbits
	.align	2
	.global	TIM_GetCapture2
	.thumb
	.thumb_func
	.type	TIM_GetCapture2, %function
TIM_GetCapture2:
.LFB165:
	.loc 1 2048 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI162:
	sub	sp, sp, #8
.LCFI163:
	add	r7, sp, #0
.LCFI164:
	str	r0, [r7, #4]
	.loc 1 2050 0
	ldr	r2, [r7, #4]
	ldr	r3, .L576
	cmp	r2, r3
	beq	.L572
	.loc 1 2050 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L572
	.loc 1 2050 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L576+4
	cmp	r2, r3
	beq	.L572
	ldr	r2, [r7, #4]
	ldr	r3, .L576+8
	cmp	r2, r3
	beq	.L572
	ldr	r2, [r7, #4]
	ldr	r3, .L576+12
	cmp	r2, r3
	beq	.L572
	ldr	r2, [r7, #4]
	ldr	r3, .L576+16
	cmp	r2, r3
	beq	.L572
	ldr	r2, [r7, #4]
	ldr	r3, .L576+20
	cmp	r2, r3
	beq	.L572
	ldr	r2, [r7, #4]
	ldr	r3, .L576+24
	cmp	r2, r3
	bne	.L573
.L572:
	movs	r3, #1
	b	.L574
.L573:
	.loc 1 2050 0 discriminator 3
	movs	r3, #0
.L574:
	.loc 1 2050 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2053 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #56]
	.loc 1 2054 0 discriminator 4
	mov	r0, r3
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L577:
	.align	2
.L576:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
	.word	1073823744
	.word	1073747968
.LFE165:
	.size	TIM_GetCapture2, .-TIM_GetCapture2
	.section	.text.TIM_GetCapture3,"ax",%progbits
	.align	2
	.global	TIM_GetCapture3
	.thumb
	.thumb_func
	.type	TIM_GetCapture3, %function
TIM_GetCapture3:
.LFB166:
	.loc 1 2062 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI165:
	sub	sp, sp, #8
.LCFI166:
	add	r7, sp, #0
.LCFI167:
	str	r0, [r7, #4]
	.loc 1 2064 0
	ldr	r2, [r7, #4]
	ldr	r3, .L583
	cmp	r2, r3
	beq	.L579
	.loc 1 2064 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L579
	.loc 1 2064 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L583+4
	cmp	r2, r3
	beq	.L579
	ldr	r2, [r7, #4]
	ldr	r3, .L583+8
	cmp	r2, r3
	beq	.L579
	ldr	r2, [r7, #4]
	ldr	r3, .L583+12
	cmp	r2, r3
	beq	.L579
	ldr	r2, [r7, #4]
	ldr	r3, .L583+16
	cmp	r2, r3
	bne	.L580
.L579:
	movs	r3, #1
	b	.L581
.L580:
	.loc 1 2064 0 discriminator 3
	movs	r3, #0
.L581:
	.loc 1 2064 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2067 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #60]
	.loc 1 2068 0 discriminator 4
	mov	r0, r3
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L584:
	.align	2
.L583:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
.LFE166:
	.size	TIM_GetCapture3, .-TIM_GetCapture3
	.section	.text.TIM_GetCapture4,"ax",%progbits
	.align	2
	.global	TIM_GetCapture4
	.thumb
	.thumb_func
	.type	TIM_GetCapture4, %function
TIM_GetCapture4:
.LFB167:
	.loc 1 2076 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI168:
	sub	sp, sp, #8
.LCFI169:
	add	r7, sp, #0
.LCFI170:
	str	r0, [r7, #4]
	.loc 1 2078 0
	ldr	r2, [r7, #4]
	ldr	r3, .L590
	cmp	r2, r3
	beq	.L586
	.loc 1 2078 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L586
	.loc 1 2078 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L590+4
	cmp	r2, r3
	beq	.L586
	ldr	r2, [r7, #4]
	ldr	r3, .L590+8
	cmp	r2, r3
	beq	.L586
	ldr	r2, [r7, #4]
	ldr	r3, .L590+12
	cmp	r2, r3
	beq	.L586
	ldr	r2, [r7, #4]
	ldr	r3, .L590+16
	cmp	r2, r3
	bne	.L587
.L586:
	movs	r3, #1
	b	.L588
.L587:
	.loc 1 2078 0 discriminator 3
	movs	r3, #0
.L588:
	.loc 1 2078 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2081 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldr	r3, [r3, #64]
	.loc 1 2082 0 discriminator 4
	mov	r0, r3
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L591:
	.align	2
.L590:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
.LFE167:
	.size	TIM_GetCapture4, .-TIM_GetCapture4
	.section	.text.TIM_SetIC1Prescaler,"ax",%progbits
	.align	2
	.global	TIM_SetIC1Prescaler
	.thumb
	.thumb_func
	.type	TIM_SetIC1Prescaler, %function
TIM_SetIC1Prescaler:
.LFB168:
	.loc 1 2096 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI171:
	sub	sp, sp, #8
.LCFI172:
	add	r7, sp, #0
.LCFI173:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 2098 0
	ldr	r2, [r7, #4]
	ldr	r3, .L599
	cmp	r2, r3
	beq	.L593
	.loc 1 2098 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L593
	.loc 1 2098 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L599+4
	cmp	r2, r3
	beq	.L593
	ldr	r2, [r7, #4]
	ldr	r3, .L599+8
	cmp	r2, r3
	beq	.L593
	ldr	r2, [r7, #4]
	ldr	r3, .L599+12
	cmp	r2, r3
	beq	.L593
	ldr	r2, [r7, #4]
	ldr	r3, .L599+16
	cmp	r2, r3
	beq	.L593
	ldr	r2, [r7, #4]
	ldr	r3, .L599+20
	cmp	r2, r3
	beq	.L593
	ldr	r2, [r7, #4]
	ldr	r3, .L599+24
	cmp	r2, r3
	beq	.L593
	ldr	r2, [r7, #4]
	ldr	r3, .L599+28
	cmp	r2, r3
	beq	.L593
	ldr	r2, [r7, #4]
	ldr	r3, .L599+32
	cmp	r2, r3
	beq	.L593
	ldr	r2, [r7, #4]
	ldr	r3, .L599+36
	cmp	r2, r3
	beq	.L593
	ldr	r2, [r7, #4]
	ldr	r3, .L599+40
	cmp	r2, r3
	bne	.L594
.L593:
	movs	r3, #1
	b	.L595
.L594:
	.loc 1 2098 0 discriminator 3
	movs	r3, #0
.L595:
	.loc 1 2098 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2099 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	beq	.L596
	.loc 1 2099 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #4
	beq	.L596
	.loc 1 2099 0 discriminator 1
	ldrh	r3, [r7, #2]
	cmp	r3, #8
	beq	.L596
	ldrh	r3, [r7, #2]
	cmp	r3, #12
	bne	.L597
.L596:
	movs	r3, #1
	b	.L598
.L597:
	.loc 1 2099 0 discriminator 3
	movs	r3, #0
.L598:
	.loc 1 2099 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2102 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #24]	@ movhi
	uxth	r3, r3
	bic	r3, r3, #12
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #24]	@ movhi
	.loc 1 2105 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #24]	@ movhi
	uxth	r2, r3
	ldrh	r3, [r7, #2]	@ movhi
	orrs	r3, r3, r2
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #24]	@ movhi
	.loc 1 2106 0 discriminator 4
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L600:
	.align	2
.L599:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
	.word	1073823744
	.word	1073824768
	.word	1073825792
	.word	1073747968
	.word	1073748992
	.word	1073750016
.LFE168:
	.size	TIM_SetIC1Prescaler, .-TIM_SetIC1Prescaler
	.section	.text.TIM_SetIC2Prescaler,"ax",%progbits
	.align	2
	.global	TIM_SetIC2Prescaler
	.thumb
	.thumb_func
	.type	TIM_SetIC2Prescaler, %function
TIM_SetIC2Prescaler:
.LFB169:
	.loc 1 2121 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI174:
	sub	sp, sp, #8
.LCFI175:
	add	r7, sp, #0
.LCFI176:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 2123 0
	ldr	r2, [r7, #4]
	ldr	r3, .L608
	cmp	r2, r3
	beq	.L602
	.loc 1 2123 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L602
	.loc 1 2123 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L608+4
	cmp	r2, r3
	beq	.L602
	ldr	r2, [r7, #4]
	ldr	r3, .L608+8
	cmp	r2, r3
	beq	.L602
	ldr	r2, [r7, #4]
	ldr	r3, .L608+12
	cmp	r2, r3
	beq	.L602
	ldr	r2, [r7, #4]
	ldr	r3, .L608+16
	cmp	r2, r3
	beq	.L602
	ldr	r2, [r7, #4]
	ldr	r3, .L608+20
	cmp	r2, r3
	beq	.L602
	ldr	r2, [r7, #4]
	ldr	r3, .L608+24
	cmp	r2, r3
	bne	.L603
.L602:
	movs	r3, #1
	b	.L604
.L603:
	.loc 1 2123 0 discriminator 3
	movs	r3, #0
.L604:
	.loc 1 2123 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2124 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	beq	.L605
	.loc 1 2124 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #4
	beq	.L605
	.loc 1 2124 0 discriminator 1
	ldrh	r3, [r7, #2]
	cmp	r3, #8
	beq	.L605
	ldrh	r3, [r7, #2]
	cmp	r3, #12
	bne	.L606
.L605:
	movs	r3, #1
	b	.L607
.L606:
	.loc 1 2124 0 discriminator 3
	movs	r3, #0
.L607:
	.loc 1 2124 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2127 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #24]	@ movhi
	uxth	r3, r3
	bic	r3, r3, #3072
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #24]	@ movhi
	.loc 1 2130 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #24]	@ movhi
	uxth	r2, r3
	ldrh	r3, [r7, #2]	@ movhi
	lsls	r3, r3, #8
	uxth	r3, r3
	orrs	r3, r3, r2
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #24]	@ movhi
	.loc 1 2131 0 discriminator 4
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L609:
	.align	2
.L608:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
	.word	1073823744
	.word	1073747968
.LFE169:
	.size	TIM_SetIC2Prescaler, .-TIM_SetIC2Prescaler
	.section	.text.TIM_SetIC3Prescaler,"ax",%progbits
	.align	2
	.global	TIM_SetIC3Prescaler
	.thumb
	.thumb_func
	.type	TIM_SetIC3Prescaler, %function
TIM_SetIC3Prescaler:
.LFB170:
	.loc 1 2145 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI177:
	sub	sp, sp, #8
.LCFI178:
	add	r7, sp, #0
.LCFI179:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 2147 0
	ldr	r2, [r7, #4]
	ldr	r3, .L617
	cmp	r2, r3
	beq	.L611
	.loc 1 2147 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L611
	.loc 1 2147 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L617+4
	cmp	r2, r3
	beq	.L611
	ldr	r2, [r7, #4]
	ldr	r3, .L617+8
	cmp	r2, r3
	beq	.L611
	ldr	r2, [r7, #4]
	ldr	r3, .L617+12
	cmp	r2, r3
	beq	.L611
	ldr	r2, [r7, #4]
	ldr	r3, .L617+16
	cmp	r2, r3
	bne	.L612
.L611:
	movs	r3, #1
	b	.L613
.L612:
	.loc 1 2147 0 discriminator 3
	movs	r3, #0
.L613:
	.loc 1 2147 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2148 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	beq	.L614
	.loc 1 2148 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #4
	beq	.L614
	.loc 1 2148 0 discriminator 1
	ldrh	r3, [r7, #2]
	cmp	r3, #8
	beq	.L614
	ldrh	r3, [r7, #2]
	cmp	r3, #12
	bne	.L615
.L614:
	movs	r3, #1
	b	.L616
.L615:
	.loc 1 2148 0 discriminator 3
	movs	r3, #0
.L616:
	.loc 1 2148 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2151 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #28]	@ movhi
	uxth	r3, r3
	bic	r3, r3, #12
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #28]	@ movhi
	.loc 1 2154 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #28]	@ movhi
	uxth	r2, r3
	ldrh	r3, [r7, #2]	@ movhi
	orrs	r3, r3, r2
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #28]	@ movhi
	.loc 1 2155 0 discriminator 4
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L618:
	.align	2
.L617:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
.LFE170:
	.size	TIM_SetIC3Prescaler, .-TIM_SetIC3Prescaler
	.section	.text.TIM_SetIC4Prescaler,"ax",%progbits
	.align	2
	.global	TIM_SetIC4Prescaler
	.thumb
	.thumb_func
	.type	TIM_SetIC4Prescaler, %function
TIM_SetIC4Prescaler:
.LFB171:
	.loc 1 2169 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI180:
	sub	sp, sp, #8
.LCFI181:
	add	r7, sp, #0
.LCFI182:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 2171 0
	ldr	r2, [r7, #4]
	ldr	r3, .L626
	cmp	r2, r3
	beq	.L620
	.loc 1 2171 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L620
	.loc 1 2171 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L626+4
	cmp	r2, r3
	beq	.L620
	ldr	r2, [r7, #4]
	ldr	r3, .L626+8
	cmp	r2, r3
	beq	.L620
	ldr	r2, [r7, #4]
	ldr	r3, .L626+12
	cmp	r2, r3
	beq	.L620
	ldr	r2, [r7, #4]
	ldr	r3, .L626+16
	cmp	r2, r3
	bne	.L621
.L620:
	movs	r3, #1
	b	.L622
.L621:
	.loc 1 2171 0 discriminator 3
	movs	r3, #0
.L622:
	.loc 1 2171 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2172 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	beq	.L623
	.loc 1 2172 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #4
	beq	.L623
	.loc 1 2172 0 discriminator 1
	ldrh	r3, [r7, #2]
	cmp	r3, #8
	beq	.L623
	ldrh	r3, [r7, #2]
	cmp	r3, #12
	bne	.L624
.L623:
	movs	r3, #1
	b	.L625
.L624:
	.loc 1 2172 0 discriminator 3
	movs	r3, #0
.L625:
	.loc 1 2172 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2175 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #28]	@ movhi
	uxth	r3, r3
	bic	r3, r3, #3072
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #28]	@ movhi
	.loc 1 2178 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #28]	@ movhi
	uxth	r2, r3
	ldrh	r3, [r7, #2]	@ movhi
	lsls	r3, r3, #8
	uxth	r3, r3
	orrs	r3, r3, r2
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #28]	@ movhi
	.loc 1 2179 0 discriminator 4
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L627:
	.align	2
.L626:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
.LFE171:
	.size	TIM_SetIC4Prescaler, .-TIM_SetIC4Prescaler
	.section	.text.TIM_BDTRConfig,"ax",%progbits
	.align	2
	.global	TIM_BDTRConfig
	.thumb
	.thumb_func
	.type	TIM_BDTRConfig, %function
TIM_BDTRConfig:
.LFB172:
	.loc 1 2222 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI183:
	sub	sp, sp, #8
.LCFI184:
	add	r7, sp, #0
.LCFI185:
	str	r0, [r7, #4]
	str	r1, [r7]
	.loc 1 2224 0
	ldr	r2, [r7, #4]
	ldr	r3, .L650
	cmp	r2, r3
	beq	.L629
	.loc 1 2224 0 is_stmt 0 discriminator 2
	ldr	r2, [r7, #4]
	ldr	r3, .L650+4
	cmp	r2, r3
	bne	.L630
.L629:
	.loc 1 2224 0 discriminator 1
	movs	r3, #1
	b	.L631
.L630:
	.loc 1 2224 0 discriminator 3
	movs	r3, #0
.L631:
	.loc 1 2224 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2225 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3]
	cmp	r3, #2048
	beq	.L632
	.loc 1 2225 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3]
	cmp	r3, #0
	bne	.L633
.L632:
	.loc 1 2225 0 discriminator 1
	movs	r3, #1
	b	.L634
.L633:
	.loc 1 2225 0 discriminator 3
	movs	r3, #0
.L634:
	.loc 1 2225 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2226 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #2]
	cmp	r3, #1024
	beq	.L635
	.loc 1 2226 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3, #2]
	cmp	r3, #0
	bne	.L636
.L635:
	.loc 1 2226 0 discriminator 1
	movs	r3, #1
	b	.L637
.L636:
	.loc 1 2226 0 discriminator 3
	movs	r3, #0
.L637:
	.loc 1 2226 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2227 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #4]
	cmp	r3, #0
	beq	.L638
	.loc 1 2227 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3, #4]
	cmp	r3, #256
	beq	.L638
	.loc 1 2227 0 discriminator 1
	ldr	r3, [r7]
	ldrh	r3, [r3, #4]
	cmp	r3, #512
	beq	.L638
	ldr	r3, [r7]
	ldrh	r3, [r3, #4]
	cmp	r3, #768
	bne	.L639
.L638:
	movs	r3, #1
	b	.L640
.L639:
	.loc 1 2227 0 discriminator 3
	movs	r3, #0
.L640:
	.loc 1 2227 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2228 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #8]
	cmp	r3, #4096
	beq	.L641
	.loc 1 2228 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3, #8]
	cmp	r3, #0
	bne	.L642
.L641:
	.loc 1 2228 0 discriminator 1
	movs	r3, #1
	b	.L643
.L642:
	.loc 1 2228 0 discriminator 3
	movs	r3, #0
.L643:
	.loc 1 2228 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2229 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #10]
	cmp	r3, #0
	beq	.L644
	.loc 1 2229 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3, #10]
	cmp	r3, #8192
	bne	.L645
.L644:
	.loc 1 2229 0 discriminator 1
	movs	r3, #1
	b	.L646
.L645:
	.loc 1 2229 0 discriminator 3
	movs	r3, #0
.L646:
	.loc 1 2229 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2230 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #12]
	cmp	r3, #16384
	beq	.L647
	.loc 1 2230 0 is_stmt 0 discriminator 2
	ldr	r3, [r7]
	ldrh	r3, [r3, #12]
	cmp	r3, #0
	bne	.L648
.L647:
	.loc 1 2230 0 discriminator 1
	movs	r3, #1
	b	.L649
.L648:
	.loc 1 2230 0 discriminator 3
	movs	r3, #0
.L649:
	.loc 1 2230 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2234 0 is_stmt 1 discriminator 4
	ldr	r3, [r7]
	ldrh	r2, [r3]
	ldr	r3, [r7]
	ldrh	r3, [r3, #2]
	orrs	r3, r3, r2
	uxth	r2, r3
	.loc 1 2235 0 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #4]
	.loc 1 2234 0 discriminator 4
	orrs	r3, r3, r2
	uxth	r2, r3
	.loc 1 2235 0 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #6]
	.loc 1 2234 0 discriminator 4
	orrs	r3, r3, r2
	uxth	r2, r3
	.loc 1 2236 0 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #8]
	.loc 1 2234 0 discriminator 4
	orrs	r3, r3, r2
	uxth	r2, r3
	.loc 1 2236 0 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #10]
	.loc 1 2234 0 discriminator 4
	orrs	r3, r3, r2
	uxth	r2, r3
	.loc 1 2237 0 discriminator 4
	ldr	r3, [r7]
	ldrh	r3, [r3, #12]
	.loc 1 2234 0 discriminator 4
	orrs	r3, r3, r2
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #68]	@ movhi
	.loc 1 2238 0 discriminator 4
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L651:
	.align	2
.L650:
	.word	1073807360
	.word	1073808384
.LFE172:
	.size	TIM_BDTRConfig, .-TIM_BDTRConfig
	.section	.text.TIM_BDTRStructInit,"ax",%progbits
	.align	2
	.global	TIM_BDTRStructInit
	.thumb
	.thumb_func
	.type	TIM_BDTRStructInit, %function
TIM_BDTRStructInit:
.LFB173:
	.loc 1 2247 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7}
.LCFI186:
	sub	sp, sp, #12
.LCFI187:
	add	r7, sp, #0
.LCFI188:
	str	r0, [r7, #4]
	.loc 1 2249 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	strh	r2, [r3]	@ movhi
	.loc 1 2250 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	strh	r2, [r3, #2]	@ movhi
	.loc 1 2251 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	strh	r2, [r3, #4]	@ movhi
	.loc 1 2252 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	strh	r2, [r3, #6]	@ movhi
	.loc 1 2253 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	strh	r2, [r3, #8]	@ movhi
	.loc 1 2254 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	strh	r2, [r3, #10]	@ movhi
	.loc 1 2255 0
	ldr	r3, [r7, #4]
	movs	r2, #0
	strh	r2, [r3, #12]	@ movhi
	.loc 1 2256 0
	adds	r7, r7, #12
	mov	sp, r7
	@ sp needed
	ldr	r7, [sp], #4
	bx	lr
.LFE173:
	.size	TIM_BDTRStructInit, .-TIM_BDTRStructInit
	.section	.text.TIM_CtrlPWMOutputs,"ax",%progbits
	.align	2
	.global	TIM_CtrlPWMOutputs
	.thumb
	.thumb_func
	.type	TIM_CtrlPWMOutputs, %function
TIM_CtrlPWMOutputs:
.LFB174:
	.loc 1 2266 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI189:
	sub	sp, sp, #8
.LCFI190:
	add	r7, sp, #0
.LCFI191:
	str	r0, [r7, #4]
	mov	r3, r1
	strb	r3, [r7, #3]
	.loc 1 2268 0
	ldr	r2, [r7, #4]
	ldr	r3, .L662
	cmp	r2, r3
	beq	.L654
	.loc 1 2268 0 is_stmt 0 discriminator 2
	ldr	r2, [r7, #4]
	ldr	r3, .L662+4
	cmp	r2, r3
	bne	.L655
.L654:
	.loc 1 2268 0 discriminator 1
	movs	r3, #1
	b	.L656
.L655:
	.loc 1 2268 0 discriminator 3
	movs	r3, #0
.L656:
	.loc 1 2268 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2269 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L657
	.loc 1 2269 0 is_stmt 0 discriminator 2
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #1
	bne	.L658
.L657:
	.loc 1 2269 0 discriminator 1
	movs	r3, #1
	b	.L659
.L658:
	.loc 1 2269 0 discriminator 3
	movs	r3, #0
.L659:
	.loc 1 2269 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2271 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L660
	.loc 1 2274 0
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #68]	@ movhi
	uxth	r3, r3
	mvn	r3, r3, lsl #17
	mvn	r3, r3, lsr #17
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #68]	@ movhi
	b	.L653
.L660:
	.loc 1 2279 0
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #68]	@ movhi
	uxth	r3, r3
	ubfx	r3, r3, #0, #15
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #68]	@ movhi
.L653:
	.loc 1 2281 0
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L663:
	.align	2
.L662:
	.word	1073807360
	.word	1073808384
.LFE174:
	.size	TIM_CtrlPWMOutputs, .-TIM_CtrlPWMOutputs
	.section	.text.TIM_SelectCOM,"ax",%progbits
	.align	2
	.global	TIM_SelectCOM
	.thumb
	.thumb_func
	.type	TIM_SelectCOM, %function
TIM_SelectCOM:
.LFB175:
	.loc 1 2291 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI192:
	sub	sp, sp, #8
.LCFI193:
	add	r7, sp, #0
.LCFI194:
	str	r0, [r7, #4]
	mov	r3, r1
	strb	r3, [r7, #3]
	.loc 1 2293 0
	ldr	r2, [r7, #4]
	ldr	r3, .L673
	cmp	r2, r3
	beq	.L665
	.loc 1 2293 0 is_stmt 0 discriminator 2
	ldr	r2, [r7, #4]
	ldr	r3, .L673+4
	cmp	r2, r3
	bne	.L666
.L665:
	.loc 1 2293 0 discriminator 1
	movs	r3, #1
	b	.L667
.L666:
	.loc 1 2293 0 discriminator 3
	movs	r3, #0
.L667:
	.loc 1 2293 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2294 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L668
	.loc 1 2294 0 is_stmt 0 discriminator 2
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #1
	bne	.L669
.L668:
	.loc 1 2294 0 discriminator 1
	movs	r3, #1
	b	.L670
.L669:
	.loc 1 2294 0 discriminator 3
	movs	r3, #0
.L670:
	.loc 1 2294 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2296 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L671
	.loc 1 2299 0
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #4]	@ movhi
	uxth	r3, r3
	orr	r3, r3, #4
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #4]	@ movhi
	b	.L664
.L671:
	.loc 1 2304 0
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #4]	@ movhi
	uxth	r3, r3
	bic	r3, r3, #4
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #4]	@ movhi
.L664:
	.loc 1 2306 0
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L674:
	.align	2
.L673:
	.word	1073807360
	.word	1073808384
.LFE175:
	.size	TIM_SelectCOM, .-TIM_SelectCOM
	.section	.text.TIM_CCPreloadControl,"ax",%progbits
	.align	2
	.global	TIM_CCPreloadControl
	.thumb
	.thumb_func
	.type	TIM_CCPreloadControl, %function
TIM_CCPreloadControl:
.LFB176:
	.loc 1 2316 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI195:
	sub	sp, sp, #8
.LCFI196:
	add	r7, sp, #0
.LCFI197:
	str	r0, [r7, #4]
	mov	r3, r1
	strb	r3, [r7, #3]
	.loc 1 2318 0
	ldr	r2, [r7, #4]
	ldr	r3, .L684
	cmp	r2, r3
	beq	.L676
	.loc 1 2318 0 is_stmt 0 discriminator 2
	ldr	r2, [r7, #4]
	ldr	r3, .L684+4
	cmp	r2, r3
	bne	.L677
.L676:
	.loc 1 2318 0 discriminator 1
	movs	r3, #1
	b	.L678
.L677:
	.loc 1 2318 0 discriminator 3
	movs	r3, #0
.L678:
	.loc 1 2318 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2319 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L679
	.loc 1 2319 0 is_stmt 0 discriminator 2
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #1
	bne	.L680
.L679:
	.loc 1 2319 0 discriminator 1
	movs	r3, #1
	b	.L681
.L680:
	.loc 1 2319 0 discriminator 3
	movs	r3, #0
.L681:
	.loc 1 2319 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2320 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L682
	.loc 1 2323 0
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #4]	@ movhi
	uxth	r3, r3
	orr	r3, r3, #1
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #4]	@ movhi
	b	.L675
.L682:
	.loc 1 2328 0
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #4]	@ movhi
	uxth	r3, r3
	bic	r3, r3, #1
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #4]	@ movhi
.L675:
	.loc 1 2330 0
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L685:
	.align	2
.L684:
	.word	1073807360
	.word	1073808384
.LFE176:
	.size	TIM_CCPreloadControl, .-TIM_CCPreloadControl
	.section	.text.TIM_ITConfig,"ax",%progbits
	.align	2
	.global	TIM_ITConfig
	.thumb
	.thumb_func
	.type	TIM_ITConfig, %function
TIM_ITConfig:
.LFB177:
	.loc 1 2373 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI198:
	sub	sp, sp, #8
.LCFI199:
	add	r7, sp, #0
.LCFI200:
	str	r0, [r7, #4]
	mov	r3, r2
	mov	r2, r1	@ movhi
	strh	r2, [r7, #2]	@ movhi
	strb	r3, [r7, #1]
	.loc 1 2375 0
	ldr	r2, [r7, #4]
	ldr	r3, .L697
	cmp	r2, r3
	beq	.L687
	.loc 1 2375 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L687
	.loc 1 2375 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L697+4
	cmp	r2, r3
	beq	.L687
	ldr	r2, [r7, #4]
	ldr	r3, .L697+8
	cmp	r2, r3
	beq	.L687
	ldr	r2, [r7, #4]
	ldr	r3, .L697+12
	cmp	r2, r3
	beq	.L687
	ldr	r2, [r7, #4]
	ldr	r3, .L697+16
	cmp	r2, r3
	beq	.L687
	ldr	r2, [r7, #4]
	ldr	r3, .L697+20
	cmp	r2, r3
	beq	.L687
	ldr	r2, [r7, #4]
	ldr	r3, .L697+24
	cmp	r2, r3
	beq	.L687
	ldr	r2, [r7, #4]
	ldr	r3, .L697+28
	cmp	r2, r3
	beq	.L687
	ldr	r2, [r7, #4]
	ldr	r3, .L697+32
	cmp	r2, r3
	beq	.L687
	ldr	r2, [r7, #4]
	ldr	r3, .L697+36
	cmp	r2, r3
	beq	.L687
	ldr	r2, [r7, #4]
	ldr	r3, .L697+40
	cmp	r2, r3
	beq	.L687
	ldr	r2, [r7, #4]
	ldr	r3, .L697+44
	cmp	r2, r3
	beq	.L687
	.loc 1 2375 0 discriminator 3
	ldr	r2, [r7, #4]
	ldr	r3, .L697+48
	cmp	r2, r3
	bne	.L688
.L687:
	.loc 1 2375 0 discriminator 1
	movs	r3, #1
	b	.L689
.L688:
	movs	r3, #0
.L689:
	.loc 1 2375 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2376 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	and	r3, r3, #65280
	cmp	r3, #0
	bne	.L690
	.loc 1 2376 0 is_stmt 0 discriminator 1
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	beq	.L690
	.loc 1 2376 0 discriminator 3
	movs	r3, #1
	b	.L691
.L690:
	.loc 1 2376 0 discriminator 2
	movs	r3, #0
.L691:
	.loc 1 2376 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2377 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #1]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L692
	.loc 1 2377 0 is_stmt 0 discriminator 2
	ldrb	r3, [r7, #1]	@ zero_extendqisi2
	cmp	r3, #1
	bne	.L693
.L692:
	.loc 1 2377 0 discriminator 1
	movs	r3, #1
	b	.L694
.L693:
	.loc 1 2377 0 discriminator 3
	movs	r3, #0
.L694:
	.loc 1 2377 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2379 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #1]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L695
	.loc 1 2382 0
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #12]	@ movhi
	uxth	r2, r3
	ldrh	r3, [r7, #2]	@ movhi
	orrs	r3, r3, r2
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #12]	@ movhi
	b	.L686
.L695:
	.loc 1 2387 0
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #12]	@ movhi
	uxth	r2, r3
	ldrh	r3, [r7, #2]	@ movhi
	mvns	r3, r3
	uxth	r3, r3
	ands	r3, r3, r2
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #12]	@ movhi
.L686:
	.loc 1 2389 0
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L698:
	.align	2
.L697:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073745920
	.word	1073746944
	.word	1073808384
	.word	1073823744
	.word	1073824768
	.word	1073825792
	.word	1073747968
	.word	1073748992
	.word	1073750016
.LFE177:
	.size	TIM_ITConfig, .-TIM_ITConfig
	.section	.text.TIM_GenerateEvent,"ax",%progbits
	.align	2
	.global	TIM_GenerateEvent
	.thumb
	.thumb_func
	.type	TIM_GenerateEvent, %function
TIM_GenerateEvent:
.LFB178:
	.loc 1 2411 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI201:
	sub	sp, sp, #8
.LCFI202:
	add	r7, sp, #0
.LCFI203:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 2413 0
	ldr	r2, [r7, #4]
	ldr	r3, .L705
	cmp	r2, r3
	beq	.L700
	.loc 1 2413 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L700
	.loc 1 2413 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L705+4
	cmp	r2, r3
	beq	.L700
	ldr	r2, [r7, #4]
	ldr	r3, .L705+8
	cmp	r2, r3
	beq	.L700
	ldr	r2, [r7, #4]
	ldr	r3, .L705+12
	cmp	r2, r3
	beq	.L700
	ldr	r2, [r7, #4]
	ldr	r3, .L705+16
	cmp	r2, r3
	beq	.L700
	ldr	r2, [r7, #4]
	ldr	r3, .L705+20
	cmp	r2, r3
	beq	.L700
	ldr	r2, [r7, #4]
	ldr	r3, .L705+24
	cmp	r2, r3
	beq	.L700
	ldr	r2, [r7, #4]
	ldr	r3, .L705+28
	cmp	r2, r3
	beq	.L700
	ldr	r2, [r7, #4]
	ldr	r3, .L705+32
	cmp	r2, r3
	beq	.L700
	ldr	r2, [r7, #4]
	ldr	r3, .L705+36
	cmp	r2, r3
	beq	.L700
	ldr	r2, [r7, #4]
	ldr	r3, .L705+40
	cmp	r2, r3
	beq	.L700
	ldr	r2, [r7, #4]
	ldr	r3, .L705+44
	cmp	r2, r3
	beq	.L700
	.loc 1 2413 0 discriminator 3
	ldr	r2, [r7, #4]
	ldr	r3, .L705+48
	cmp	r2, r3
	bne	.L701
.L700:
	.loc 1 2413 0 discriminator 1
	movs	r3, #1
	b	.L702
.L701:
	movs	r3, #0
.L702:
	.loc 1 2413 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2414 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	and	r3, r3, #65280
	cmp	r3, #0
	bne	.L703
	.loc 1 2414 0 is_stmt 0 discriminator 1
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	beq	.L703
	.loc 1 2414 0 discriminator 3
	movs	r3, #1
	b	.L704
.L703:
	.loc 1 2414 0 discriminator 2
	movs	r3, #0
.L704:
	.loc 1 2414 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2417 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #2]	@ movhi
	strh	r2, [r3, #20]	@ movhi
	.loc 1 2418 0 discriminator 4
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L706:
	.align	2
.L705:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073745920
	.word	1073746944
	.word	1073808384
	.word	1073823744
	.word	1073824768
	.word	1073825792
	.word	1073747968
	.word	1073748992
	.word	1073750016
.LFE178:
	.size	TIM_GenerateEvent, .-TIM_GenerateEvent
	.section	.text.TIM_GetFlagStatus,"ax",%progbits
	.align	2
	.global	TIM_GetFlagStatus
	.thumb
	.thumb_func
	.type	TIM_GetFlagStatus, %function
TIM_GetFlagStatus:
.LFB179:
	.loc 1 2444 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI204:
	sub	sp, sp, #16
.LCFI205:
	add	r7, sp, #0
.LCFI206:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 2445 0
	movs	r3, #0
	strb	r3, [r7, #15]
	.loc 1 2447 0
	ldr	r2, [r7, #4]
	ldr	r3, .L717
	cmp	r2, r3
	beq	.L708
	.loc 1 2447 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L708
	.loc 1 2447 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L717+4
	cmp	r2, r3
	beq	.L708
	ldr	r2, [r7, #4]
	ldr	r3, .L717+8
	cmp	r2, r3
	beq	.L708
	ldr	r2, [r7, #4]
	ldr	r3, .L717+12
	cmp	r2, r3
	beq	.L708
	ldr	r2, [r7, #4]
	ldr	r3, .L717+16
	cmp	r2, r3
	beq	.L708
	ldr	r2, [r7, #4]
	ldr	r3, .L717+20
	cmp	r2, r3
	beq	.L708
	ldr	r2, [r7, #4]
	ldr	r3, .L717+24
	cmp	r2, r3
	beq	.L708
	ldr	r2, [r7, #4]
	ldr	r3, .L717+28
	cmp	r2, r3
	beq	.L708
	ldr	r2, [r7, #4]
	ldr	r3, .L717+32
	cmp	r2, r3
	beq	.L708
	ldr	r2, [r7, #4]
	ldr	r3, .L717+36
	cmp	r2, r3
	beq	.L708
	ldr	r2, [r7, #4]
	ldr	r3, .L717+40
	cmp	r2, r3
	beq	.L708
	ldr	r2, [r7, #4]
	ldr	r3, .L717+44
	cmp	r2, r3
	beq	.L708
	.loc 1 2447 0 discriminator 3
	ldr	r2, [r7, #4]
	ldr	r3, .L717+48
	cmp	r2, r3
	bne	.L709
.L708:
	.loc 1 2447 0 discriminator 1
	movs	r3, #1
	b	.L710
.L709:
	movs	r3, #0
.L710:
	.loc 1 2447 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2448 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #1
	beq	.L711
	.loc 1 2448 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #2
	beq	.L711
	.loc 1 2448 0 discriminator 1
	ldrh	r3, [r7, #2]
	cmp	r3, #4
	beq	.L711
	ldrh	r3, [r7, #2]
	cmp	r3, #8
	beq	.L711
	ldrh	r3, [r7, #2]
	cmp	r3, #16
	beq	.L711
	ldrh	r3, [r7, #2]
	cmp	r3, #32
	beq	.L711
	ldrh	r3, [r7, #2]
	cmp	r3, #64
	beq	.L711
	ldrh	r3, [r7, #2]
	cmp	r3, #128
	beq	.L711
	ldrh	r3, [r7, #2]
	cmp	r3, #512
	beq	.L711
	ldrh	r3, [r7, #2]
	cmp	r3, #1024
	beq	.L711
	ldrh	r3, [r7, #2]
	cmp	r3, #2048
	beq	.L711
	ldrh	r3, [r7, #2]
	cmp	r3, #4096
	bne	.L712
.L711:
	movs	r3, #1
	b	.L713
.L712:
	.loc 1 2448 0 discriminator 3
	movs	r3, #0
.L713:
	.loc 1 2448 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2451 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #16]	@ movhi
	uxth	r2, r3
	ldrh	r3, [r7, #2]	@ movhi
	ands	r3, r3, r2
	uxth	r3, r3
	cmp	r3, #0
	beq	.L714
	.loc 1 2453 0
	movs	r3, #1
	strb	r3, [r7, #15]
	b	.L715
.L714:
	.loc 1 2457 0
	movs	r3, #0
	strb	r3, [r7, #15]
.L715:
	.loc 1 2459 0
	ldrb	r3, [r7, #15]	@ zero_extendqisi2
	.loc 1 2460 0
	mov	r0, r3
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L718:
	.align	2
.L717:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073745920
	.word	1073746944
	.word	1073808384
	.word	1073823744
	.word	1073824768
	.word	1073825792
	.word	1073747968
	.word	1073748992
	.word	1073750016
.LFE179:
	.size	TIM_GetFlagStatus, .-TIM_GetFlagStatus
	.section	.text.TIM_ClearFlag,"ax",%progbits
	.align	2
	.global	TIM_ClearFlag
	.thumb
	.thumb_func
	.type	TIM_ClearFlag, %function
TIM_ClearFlag:
.LFB180:
	.loc 1 2486 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI207:
	sub	sp, sp, #8
.LCFI208:
	add	r7, sp, #0
.LCFI209:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 2488 0
	ldr	r2, [r7, #4]
	ldr	r3, .L723
	cmp	r2, r3
	beq	.L720
	.loc 1 2488 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L720
	.loc 1 2488 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L723+4
	cmp	r2, r3
	beq	.L720
	ldr	r2, [r7, #4]
	ldr	r3, .L723+8
	cmp	r2, r3
	beq	.L720
	ldr	r2, [r7, #4]
	ldr	r3, .L723+12
	cmp	r2, r3
	beq	.L720
	ldr	r2, [r7, #4]
	ldr	r3, .L723+16
	cmp	r2, r3
	beq	.L720
	ldr	r2, [r7, #4]
	ldr	r3, .L723+20
	cmp	r2, r3
	beq	.L720
	ldr	r2, [r7, #4]
	ldr	r3, .L723+24
	cmp	r2, r3
	beq	.L720
	ldr	r2, [r7, #4]
	ldr	r3, .L723+28
	cmp	r2, r3
	beq	.L720
	ldr	r2, [r7, #4]
	ldr	r3, .L723+32
	cmp	r2, r3
	beq	.L720
	ldr	r2, [r7, #4]
	ldr	r3, .L723+36
	cmp	r2, r3
	beq	.L720
	ldr	r2, [r7, #4]
	ldr	r3, .L723+40
	cmp	r2, r3
	beq	.L720
	ldr	r2, [r7, #4]
	ldr	r3, .L723+44
	cmp	r2, r3
	beq	.L720
	.loc 1 2488 0 discriminator 3
	ldr	r2, [r7, #4]
	ldr	r3, .L723+48
	cmp	r2, r3
	bne	.L721
.L720:
	.loc 1 2488 0 discriminator 1
	movs	r3, #1
	b	.L722
.L721:
	movs	r3, #0
.L722:
	.loc 1 2488 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2491 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]	@ movhi
	mvns	r3, r3
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #16]	@ movhi
	.loc 1 2492 0 discriminator 4
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L724:
	.align	2
.L723:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073745920
	.word	1073746944
	.word	1073808384
	.word	1073823744
	.word	1073824768
	.word	1073825792
	.word	1073747968
	.word	1073748992
	.word	1073750016
.LFE180:
	.size	TIM_ClearFlag, .-TIM_ClearFlag
	.section	.text.TIM_GetITStatus,"ax",%progbits
	.align	2
	.global	TIM_GetITStatus
	.thumb
	.thumb_func
	.type	TIM_GetITStatus, %function
TIM_GetITStatus:
.LFB181:
	.loc 1 2514 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI210:
	sub	sp, sp, #16
.LCFI211:
	add	r7, sp, #0
.LCFI212:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 2515 0
	movs	r3, #0
	strb	r3, [r7, #15]
	.loc 1 2516 0
	movs	r3, #0
	strh	r3, [r7, #12]	@ movhi
	movs	r3, #0
	strh	r3, [r7, #10]	@ movhi
	.loc 1 2518 0
	ldr	r2, [r7, #4]
	ldr	r3, .L735
	cmp	r2, r3
	beq	.L726
	.loc 1 2518 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L726
	.loc 1 2518 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L735+4
	cmp	r2, r3
	beq	.L726
	ldr	r2, [r7, #4]
	ldr	r3, .L735+8
	cmp	r2, r3
	beq	.L726
	ldr	r2, [r7, #4]
	ldr	r3, .L735+12
	cmp	r2, r3
	beq	.L726
	ldr	r2, [r7, #4]
	ldr	r3, .L735+16
	cmp	r2, r3
	beq	.L726
	ldr	r2, [r7, #4]
	ldr	r3, .L735+20
	cmp	r2, r3
	beq	.L726
	ldr	r2, [r7, #4]
	ldr	r3, .L735+24
	cmp	r2, r3
	beq	.L726
	ldr	r2, [r7, #4]
	ldr	r3, .L735+28
	cmp	r2, r3
	beq	.L726
	ldr	r2, [r7, #4]
	ldr	r3, .L735+32
	cmp	r2, r3
	beq	.L726
	ldr	r2, [r7, #4]
	ldr	r3, .L735+36
	cmp	r2, r3
	beq	.L726
	ldr	r2, [r7, #4]
	ldr	r3, .L735+40
	cmp	r2, r3
	beq	.L726
	ldr	r2, [r7, #4]
	ldr	r3, .L735+44
	cmp	r2, r3
	beq	.L726
	.loc 1 2518 0 discriminator 3
	ldr	r2, [r7, #4]
	ldr	r3, .L735+48
	cmp	r2, r3
	bne	.L727
.L726:
	.loc 1 2518 0 discriminator 1
	movs	r3, #1
	b	.L728
.L727:
	movs	r3, #0
.L728:
	.loc 1 2518 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2519 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #1
	beq	.L729
	.loc 1 2519 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #2
	beq	.L729
	.loc 1 2519 0 discriminator 1
	ldrh	r3, [r7, #2]
	cmp	r3, #4
	beq	.L729
	ldrh	r3, [r7, #2]
	cmp	r3, #8
	beq	.L729
	ldrh	r3, [r7, #2]
	cmp	r3, #16
	beq	.L729
	ldrh	r3, [r7, #2]
	cmp	r3, #32
	beq	.L729
	ldrh	r3, [r7, #2]
	cmp	r3, #64
	beq	.L729
	ldrh	r3, [r7, #2]
	cmp	r3, #128
	bne	.L730
.L729:
	movs	r3, #1
	b	.L731
.L730:
	.loc 1 2519 0 discriminator 3
	movs	r3, #0
.L731:
	.loc 1 2519 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2521 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #16]	@ movhi
	uxth	r2, r3
	ldrh	r3, [r7, #2]	@ movhi
	ands	r3, r3, r2
	strh	r3, [r7, #12]	@ movhi
	.loc 1 2523 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #12]	@ movhi
	uxth	r2, r3
	ldrh	r3, [r7, #2]	@ movhi
	ands	r3, r3, r2
	strh	r3, [r7, #10]	@ movhi
	.loc 1 2524 0 discriminator 4
	ldrh	r3, [r7, #12]
	cmp	r3, #0
	beq	.L732
	.loc 1 2524 0 is_stmt 0 discriminator 1
	ldrh	r3, [r7, #10]
	cmp	r3, #0
	beq	.L732
	.loc 1 2526 0 is_stmt 1
	movs	r3, #1
	strb	r3, [r7, #15]
	b	.L733
.L732:
	.loc 1 2530 0
	movs	r3, #0
	strb	r3, [r7, #15]
.L733:
	.loc 1 2532 0
	ldrb	r3, [r7, #15]	@ zero_extendqisi2
	.loc 1 2533 0
	mov	r0, r3
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L736:
	.align	2
.L735:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073745920
	.word	1073746944
	.word	1073808384
	.word	1073823744
	.word	1073824768
	.word	1073825792
	.word	1073747968
	.word	1073748992
	.word	1073750016
.LFE181:
	.size	TIM_GetITStatus, .-TIM_GetITStatus
	.section	.text.TIM_ClearITPendingBit,"ax",%progbits
	.align	2
	.global	TIM_ClearITPendingBit
	.thumb
	.thumb_func
	.type	TIM_ClearITPendingBit, %function
TIM_ClearITPendingBit:
.LFB182:
	.loc 1 2555 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI213:
	sub	sp, sp, #8
.LCFI214:
	add	r7, sp, #0
.LCFI215:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 2557 0
	ldr	r2, [r7, #4]
	ldr	r3, .L741
	cmp	r2, r3
	beq	.L738
	.loc 1 2557 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L738
	.loc 1 2557 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L741+4
	cmp	r2, r3
	beq	.L738
	ldr	r2, [r7, #4]
	ldr	r3, .L741+8
	cmp	r2, r3
	beq	.L738
	ldr	r2, [r7, #4]
	ldr	r3, .L741+12
	cmp	r2, r3
	beq	.L738
	ldr	r2, [r7, #4]
	ldr	r3, .L741+16
	cmp	r2, r3
	beq	.L738
	ldr	r2, [r7, #4]
	ldr	r3, .L741+20
	cmp	r2, r3
	beq	.L738
	ldr	r2, [r7, #4]
	ldr	r3, .L741+24
	cmp	r2, r3
	beq	.L738
	ldr	r2, [r7, #4]
	ldr	r3, .L741+28
	cmp	r2, r3
	beq	.L738
	ldr	r2, [r7, #4]
	ldr	r3, .L741+32
	cmp	r2, r3
	beq	.L738
	ldr	r2, [r7, #4]
	ldr	r3, .L741+36
	cmp	r2, r3
	beq	.L738
	ldr	r2, [r7, #4]
	ldr	r3, .L741+40
	cmp	r2, r3
	beq	.L738
	ldr	r2, [r7, #4]
	ldr	r3, .L741+44
	cmp	r2, r3
	beq	.L738
	.loc 1 2557 0 discriminator 3
	ldr	r2, [r7, #4]
	ldr	r3, .L741+48
	cmp	r2, r3
	bne	.L739
.L738:
	.loc 1 2557 0 discriminator 1
	movs	r3, #1
	b	.L740
.L739:
	movs	r3, #0
.L740:
	.loc 1 2557 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2560 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]	@ movhi
	mvns	r3, r3
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #16]	@ movhi
	.loc 1 2561 0 discriminator 4
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L742:
	.align	2
.L741:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073745920
	.word	1073746944
	.word	1073808384
	.word	1073823744
	.word	1073824768
	.word	1073825792
	.word	1073747968
	.word	1073748992
	.word	1073750016
.LFE182:
	.size	TIM_ClearITPendingBit, .-TIM_ClearITPendingBit
	.section	.text.TIM_DMAConfig,"ax",%progbits
	.align	2
	.global	TIM_DMAConfig
	.thumb
	.thumb_func
	.type	TIM_DMAConfig, %function
TIM_DMAConfig:
.LFB183:
	.loc 1 2592 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI216:
	sub	sp, sp, #8
.LCFI217:
	add	r7, sp, #0
.LCFI218:
	str	r0, [r7, #4]
	mov	r3, r2
	mov	r2, r1	@ movhi
	strh	r2, [r7, #2]	@ movhi
	strh	r3, [r7]	@ movhi
	.loc 1 2594 0
	ldr	r2, [r7, #4]
	ldr	r3, .L753
	cmp	r2, r3
	beq	.L744
	.loc 1 2594 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L744
	.loc 1 2594 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L753+4
	cmp	r2, r3
	beq	.L744
	ldr	r2, [r7, #4]
	ldr	r3, .L753+8
	cmp	r2, r3
	beq	.L744
	ldr	r2, [r7, #4]
	ldr	r3, .L753+12
	cmp	r2, r3
	beq	.L744
	ldr	r2, [r7, #4]
	ldr	r3, .L753+16
	cmp	r2, r3
	bne	.L745
.L744:
	movs	r3, #1
	b	.L746
.L745:
	.loc 1 2594 0 discriminator 3
	movs	r3, #0
.L746:
	.loc 1 2594 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2595 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	beq	.L747
	.loc 1 2595 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #1
	beq	.L747
	.loc 1 2595 0 discriminator 1
	ldrh	r3, [r7, #2]
	cmp	r3, #2
	beq	.L747
	ldrh	r3, [r7, #2]
	cmp	r3, #3
	beq	.L747
	ldrh	r3, [r7, #2]
	cmp	r3, #4
	beq	.L747
	ldrh	r3, [r7, #2]
	cmp	r3, #5
	beq	.L747
	ldrh	r3, [r7, #2]
	cmp	r3, #6
	beq	.L747
	ldrh	r3, [r7, #2]
	cmp	r3, #7
	beq	.L747
	ldrh	r3, [r7, #2]
	cmp	r3, #8
	beq	.L747
	ldrh	r3, [r7, #2]
	cmp	r3, #9
	beq	.L747
	ldrh	r3, [r7, #2]
	cmp	r3, #10
	beq	.L747
	ldrh	r3, [r7, #2]
	cmp	r3, #11
	beq	.L747
	ldrh	r3, [r7, #2]
	cmp	r3, #12
	beq	.L747
	ldrh	r3, [r7, #2]
	cmp	r3, #13
	beq	.L747
	ldrh	r3, [r7, #2]
	cmp	r3, #14
	beq	.L747
	ldrh	r3, [r7, #2]
	cmp	r3, #15
	beq	.L747
	ldrh	r3, [r7, #2]
	cmp	r3, #16
	beq	.L747
	ldrh	r3, [r7, #2]
	cmp	r3, #17
	beq	.L747
	ldrh	r3, [r7, #2]
	cmp	r3, #18
	beq	.L747
	ldrh	r3, [r7, #2]
	cmp	r3, #19
	bne	.L748
.L747:
	movs	r3, #1
	b	.L749
.L748:
	.loc 1 2595 0 discriminator 3
	movs	r3, #0
.L749:
	.loc 1 2595 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2596 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7]
	cmp	r3, #0
	beq	.L750
	.loc 1 2596 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7]
	cmp	r3, #256
	beq	.L750
	.loc 1 2596 0 discriminator 1
	ldrh	r3, [r7]
	cmp	r3, #512
	beq	.L750
	ldrh	r3, [r7]
	cmp	r3, #768
	beq	.L750
	ldrh	r3, [r7]
	cmp	r3, #1024
	beq	.L750
	ldrh	r3, [r7]
	cmp	r3, #1280
	beq	.L750
	ldrh	r3, [r7]
	cmp	r3, #1536
	beq	.L750
	ldrh	r3, [r7]
	cmp	r3, #1792
	beq	.L750
	ldrh	r3, [r7]
	cmp	r3, #2048
	beq	.L750
	ldrh	r3, [r7]
	cmp	r3, #2304
	beq	.L750
	ldrh	r3, [r7]
	cmp	r3, #2560
	beq	.L750
	ldrh	r3, [r7]
	cmp	r3, #2816
	beq	.L750
	ldrh	r3, [r7]
	cmp	r3, #3072
	beq	.L750
	ldrh	r3, [r7]
	cmp	r3, #3328
	beq	.L750
	ldrh	r3, [r7]
	cmp	r3, #3584
	beq	.L750
	ldrh	r3, [r7]
	cmp	r3, #3840
	beq	.L750
	ldrh	r3, [r7]
	cmp	r3, #4096
	beq	.L750
	ldrh	r3, [r7]
	cmp	r3, #4352
	bne	.L751
.L750:
	movs	r3, #1
	b	.L752
.L751:
	.loc 1 2596 0 discriminator 3
	movs	r3, #0
.L752:
	.loc 1 2596 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2599 0 is_stmt 1 discriminator 4
	ldrh	r2, [r7, #2]	@ movhi
	ldrh	r3, [r7]	@ movhi
	orrs	r3, r3, r2
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #72]	@ movhi
	.loc 1 2600 0 discriminator 4
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L754:
	.align	2
.L753:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
.LFE183:
	.size	TIM_DMAConfig, .-TIM_DMAConfig
	.section	.text.TIM_DMACmd,"ax",%progbits
	.align	2
	.global	TIM_DMACmd
	.thumb
	.thumb_func
	.type	TIM_DMACmd, %function
TIM_DMACmd:
.LFB184:
	.loc 1 2619 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI219:
	sub	sp, sp, #8
.LCFI220:
	add	r7, sp, #0
.LCFI221:
	str	r0, [r7, #4]
	mov	r3, r2
	mov	r2, r1	@ movhi
	strh	r2, [r7, #2]	@ movhi
	strb	r3, [r7, #1]
	.loc 1 2621 0
	ldr	r2, [r7, #4]
	ldr	r3, .L766
	cmp	r2, r3
	beq	.L756
	.loc 1 2621 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L756
	.loc 1 2621 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L766+4
	cmp	r2, r3
	beq	.L756
	ldr	r2, [r7, #4]
	ldr	r3, .L766+8
	cmp	r2, r3
	beq	.L756
	ldr	r2, [r7, #4]
	ldr	r3, .L766+12
	cmp	r2, r3
	beq	.L756
	ldr	r2, [r7, #4]
	ldr	r3, .L766+16
	cmp	r2, r3
	beq	.L756
	ldr	r2, [r7, #4]
	ldr	r3, .L766+20
	cmp	r2, r3
	beq	.L756
	ldr	r2, [r7, #4]
	ldr	r3, .L766+24
	cmp	r2, r3
	bne	.L757
.L756:
	movs	r3, #1
	b	.L758
.L757:
	.loc 1 2621 0 discriminator 3
	movs	r3, #0
.L758:
	.loc 1 2621 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2622 0 is_stmt 1 discriminator 4
	ldrh	r2, [r7, #2]
	movw	r3, #33023
	ands	r3, r3, r2
	cmp	r3, #0
	bne	.L759
	.loc 1 2622 0 is_stmt 0 discriminator 1
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	beq	.L759
	.loc 1 2622 0 discriminator 3
	movs	r3, #1
	b	.L760
.L759:
	.loc 1 2622 0 discriminator 2
	movs	r3, #0
.L760:
	.loc 1 2622 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2623 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #1]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L761
	.loc 1 2623 0 is_stmt 0 discriminator 2
	ldrb	r3, [r7, #1]	@ zero_extendqisi2
	cmp	r3, #1
	bne	.L762
.L761:
	.loc 1 2623 0 discriminator 1
	movs	r3, #1
	b	.L763
.L762:
	.loc 1 2623 0 discriminator 3
	movs	r3, #0
.L763:
	.loc 1 2623 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2625 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #1]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L764
	.loc 1 2628 0
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #12]	@ movhi
	uxth	r2, r3
	ldrh	r3, [r7, #2]	@ movhi
	orrs	r3, r3, r2
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #12]	@ movhi
	b	.L755
.L764:
	.loc 1 2633 0
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #12]	@ movhi
	uxth	r2, r3
	ldrh	r3, [r7, #2]	@ movhi
	mvns	r3, r3
	uxth	r3, r3
	ands	r3, r3, r2
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #12]	@ movhi
.L755:
	.loc 1 2635 0
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L767:
	.align	2
.L766:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073745920
	.word	1073746944
	.word	1073808384
.LFE184:
	.size	TIM_DMACmd, .-TIM_DMACmd
	.section	.text.TIM_SelectCCDMA,"ax",%progbits
	.align	2
	.global	TIM_SelectCCDMA
	.thumb
	.thumb_func
	.type	TIM_SelectCCDMA, %function
TIM_SelectCCDMA:
.LFB185:
	.loc 1 2645 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI222:
	sub	sp, sp, #8
.LCFI223:
	add	r7, sp, #0
.LCFI224:
	str	r0, [r7, #4]
	mov	r3, r1
	strb	r3, [r7, #3]
	.loc 1 2647 0
	ldr	r2, [r7, #4]
	ldr	r3, .L777
	cmp	r2, r3
	beq	.L769
	.loc 1 2647 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L769
	.loc 1 2647 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L777+4
	cmp	r2, r3
	beq	.L769
	ldr	r2, [r7, #4]
	ldr	r3, .L777+8
	cmp	r2, r3
	beq	.L769
	ldr	r2, [r7, #4]
	ldr	r3, .L777+12
	cmp	r2, r3
	beq	.L769
	ldr	r2, [r7, #4]
	ldr	r3, .L777+16
	cmp	r2, r3
	bne	.L770
.L769:
	movs	r3, #1
	b	.L771
.L770:
	.loc 1 2647 0 discriminator 3
	movs	r3, #0
.L771:
	.loc 1 2647 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2648 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L772
	.loc 1 2648 0 is_stmt 0 discriminator 2
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #1
	bne	.L773
.L772:
	.loc 1 2648 0 discriminator 1
	movs	r3, #1
	b	.L774
.L773:
	.loc 1 2648 0 discriminator 3
	movs	r3, #0
.L774:
	.loc 1 2648 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2650 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L775
	.loc 1 2653 0
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #4]	@ movhi
	uxth	r3, r3
	orr	r3, r3, #8
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #4]	@ movhi
	b	.L768
.L775:
	.loc 1 2658 0
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #4]	@ movhi
	uxth	r3, r3
	bic	r3, r3, #8
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #4]	@ movhi
.L768:
	.loc 1 2660 0
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L778:
	.align	2
.L777:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
.LFE185:
	.size	TIM_SelectCCDMA, .-TIM_SelectCCDMA
	.section	.text.TIM_InternalClockConfig,"ax",%progbits
	.align	2
	.global	TIM_InternalClockConfig
	.thumb
	.thumb_func
	.type	TIM_InternalClockConfig, %function
TIM_InternalClockConfig:
.LFB186:
	.loc 1 2684 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI225:
	sub	sp, sp, #8
.LCFI226:
	add	r7, sp, #0
.LCFI227:
	str	r0, [r7, #4]
	.loc 1 2686 0
	ldr	r2, [r7, #4]
	ldr	r3, .L783
	cmp	r2, r3
	beq	.L780
	.loc 1 2686 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L780
	.loc 1 2686 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L783+4
	cmp	r2, r3
	beq	.L780
	ldr	r2, [r7, #4]
	ldr	r3, .L783+8
	cmp	r2, r3
	beq	.L780
	ldr	r2, [r7, #4]
	ldr	r3, .L783+12
	cmp	r2, r3
	beq	.L780
	ldr	r2, [r7, #4]
	ldr	r3, .L783+16
	cmp	r2, r3
	beq	.L780
	ldr	r2, [r7, #4]
	ldr	r3, .L783+20
	cmp	r2, r3
	beq	.L780
	ldr	r2, [r7, #4]
	ldr	r3, .L783+24
	cmp	r2, r3
	bne	.L781
.L780:
	movs	r3, #1
	b	.L782
.L781:
	.loc 1 2686 0 discriminator 3
	movs	r3, #0
.L782:
	.loc 1 2686 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2689 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #8]	@ movhi
	uxth	r3, r3
	bic	r3, r3, #7
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #8]	@ movhi
	.loc 1 2690 0 discriminator 4
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L784:
	.align	2
.L783:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
	.word	1073823744
	.word	1073747968
.LFE186:
	.size	TIM_InternalClockConfig, .-TIM_InternalClockConfig
	.section	.text.TIM_ITRxExternalClockConfig,"ax",%progbits
	.align	2
	.global	TIM_ITRxExternalClockConfig
	.thumb
	.thumb_func
	.type	TIM_ITRxExternalClockConfig, %function
TIM_ITRxExternalClockConfig:
.LFB187:
	.loc 1 2705 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI228:
	sub	sp, sp, #8
.LCFI229:
	add	r7, sp, #0
.LCFI230:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 2707 0
	ldr	r2, [r7, #4]
	ldr	r3, .L792
	cmp	r2, r3
	beq	.L786
	.loc 1 2707 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L786
	.loc 1 2707 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L792+4
	cmp	r2, r3
	beq	.L786
	ldr	r2, [r7, #4]
	ldr	r3, .L792+8
	cmp	r2, r3
	beq	.L786
	ldr	r2, [r7, #4]
	ldr	r3, .L792+12
	cmp	r2, r3
	beq	.L786
	ldr	r2, [r7, #4]
	ldr	r3, .L792+16
	cmp	r2, r3
	beq	.L786
	ldr	r2, [r7, #4]
	ldr	r3, .L792+20
	cmp	r2, r3
	beq	.L786
	ldr	r2, [r7, #4]
	ldr	r3, .L792+24
	cmp	r2, r3
	bne	.L787
.L786:
	movs	r3, #1
	b	.L788
.L787:
	.loc 1 2707 0 discriminator 3
	movs	r3, #0
.L788:
	.loc 1 2707 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2708 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	beq	.L789
	.loc 1 2708 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #16
	beq	.L789
	.loc 1 2708 0 discriminator 1
	ldrh	r3, [r7, #2]
	cmp	r3, #32
	beq	.L789
	ldrh	r3, [r7, #2]
	cmp	r3, #48
	bne	.L790
.L789:
	movs	r3, #1
	b	.L791
.L790:
	.loc 1 2708 0 discriminator 3
	movs	r3, #0
.L791:
	.loc 1 2708 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2711 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	ldr	r0, [r7, #4]
	mov	r1, r3
	bl	TIM_SelectInputTrigger
	.loc 1 2714 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #8]	@ movhi
	uxth	r3, r3
	orr	r3, r3, #7
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #8]	@ movhi
	.loc 1 2715 0 discriminator 4
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L793:
	.align	2
.L792:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
	.word	1073823744
	.word	1073747968
.LFE187:
	.size	TIM_ITRxExternalClockConfig, .-TIM_ITRxExternalClockConfig
	.section	.text.TIM_TIxExternalClockConfig,"ax",%progbits
	.align	2
	.global	TIM_TIxExternalClockConfig
	.thumb
	.thumb_func
	.type	TIM_TIxExternalClockConfig, %function
TIM_TIxExternalClockConfig:
.LFB188:
	.loc 1 2736 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI231:
	sub	sp, sp, #16
.LCFI232:
	add	r7, sp, #0
.LCFI233:
	str	r0, [r7, #12]
	strh	r1, [r7, #10]	@ movhi
	strh	r2, [r7, #8]	@ movhi
	strh	r3, [r7, #6]	@ movhi
	.loc 1 2738 0
	ldr	r2, [r7, #12]
	ldr	r3, .L803
	cmp	r2, r3
	beq	.L795
	.loc 1 2738 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #12]
	cmp	r3, #1073741824
	beq	.L795
	.loc 1 2738 0 discriminator 1
	ldr	r2, [r7, #12]
	ldr	r3, .L803+4
	cmp	r2, r3
	beq	.L795
	ldr	r2, [r7, #12]
	ldr	r3, .L803+8
	cmp	r2, r3
	beq	.L795
	ldr	r2, [r7, #12]
	ldr	r3, .L803+12
	cmp	r2, r3
	beq	.L795
	ldr	r2, [r7, #12]
	ldr	r3, .L803+16
	cmp	r2, r3
	beq	.L795
	ldr	r2, [r7, #12]
	ldr	r3, .L803+20
	cmp	r2, r3
	beq	.L795
	ldr	r2, [r7, #12]
	ldr	r3, .L803+24
	cmp	r2, r3
	beq	.L795
	ldr	r2, [r7, #12]
	ldr	r3, .L803+28
	cmp	r2, r3
	beq	.L795
	ldr	r2, [r7, #12]
	ldr	r3, .L803+32
	cmp	r2, r3
	beq	.L795
	ldr	r2, [r7, #12]
	ldr	r3, .L803+36
	cmp	r2, r3
	beq	.L795
	ldr	r2, [r7, #12]
	ldr	r3, .L803+40
	cmp	r2, r3
	bne	.L796
.L795:
	movs	r3, #1
	b	.L797
.L796:
	.loc 1 2738 0 discriminator 3
	movs	r3, #0
.L797:
	.loc 1 2738 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2739 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #8]
	cmp	r3, #0
	beq	.L798
	.loc 1 2739 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #8]
	cmp	r3, #2
	beq	.L798
	.loc 1 2739 0 discriminator 1
	ldrh	r3, [r7, #8]
	cmp	r3, #10
	bne	.L799
.L798:
	movs	r3, #1
	b	.L800
.L799:
	.loc 1 2739 0 discriminator 3
	movs	r3, #0
.L800:
	.loc 1 2739 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2740 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #6]
	cmp	r3, #15
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 2743 0 discriminator 4
	ldrh	r3, [r7, #10]
	cmp	r3, #96
	bne	.L801
	.loc 1 2745 0
	ldrh	r2, [r7, #8]
	ldrh	r3, [r7, #6]
	ldr	r0, [r7, #12]
	mov	r1, r2
	movs	r2, #1
	bl	TI2_Config
	b	.L802
.L801:
	.loc 1 2749 0
	ldrh	r2, [r7, #8]
	ldrh	r3, [r7, #6]
	ldr	r0, [r7, #12]
	mov	r1, r2
	movs	r2, #1
	bl	TI1_Config
.L802:
	.loc 1 2752 0
	ldrh	r3, [r7, #10]
	ldr	r0, [r7, #12]
	mov	r1, r3
	bl	TIM_SelectInputTrigger
	.loc 1 2754 0
	ldr	r3, [r7, #12]
	ldrh	r3, [r3, #8]	@ movhi
	uxth	r3, r3
	orr	r3, r3, #7
	uxth	r2, r3
	ldr	r3, [r7, #12]
	strh	r2, [r3, #8]	@ movhi
	.loc 1 2755 0
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L804:
	.align	2
.L803:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
	.word	1073823744
	.word	1073824768
	.word	1073825792
	.word	1073747968
	.word	1073748992
	.word	1073750016
.LFE188:
	.size	TIM_TIxExternalClockConfig, .-TIM_TIxExternalClockConfig
	.section	.text.TIM_ETRClockMode1Config,"ax",%progbits
	.align	2
	.global	TIM_ETRClockMode1Config
	.thumb
	.thumb_func
	.type	TIM_ETRClockMode1Config, %function
TIM_ETRClockMode1Config:
.LFB189:
	.loc 1 2776 0
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI234:
	sub	sp, sp, #24
.LCFI235:
	add	r7, sp, #0
.LCFI236:
	str	r0, [r7, #12]
	strh	r1, [r7, #10]	@ movhi
	strh	r2, [r7, #8]	@ movhi
	strh	r3, [r7, #6]	@ movhi
	.loc 1 2777 0
	movs	r3, #0
	strh	r3, [r7, #22]	@ movhi
	.loc 1 2780 0
	ldr	r2, [r7, #12]
	ldr	r3, .L815
	cmp	r2, r3
	beq	.L806
	.loc 1 2780 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #12]
	cmp	r3, #1073741824
	beq	.L806
	.loc 1 2780 0 discriminator 1
	ldr	r2, [r7, #12]
	ldr	r3, .L815+4
	cmp	r2, r3
	beq	.L806
	ldr	r2, [r7, #12]
	ldr	r3, .L815+8
	cmp	r2, r3
	beq	.L806
	ldr	r2, [r7, #12]
	ldr	r3, .L815+12
	cmp	r2, r3
	beq	.L806
	ldr	r2, [r7, #12]
	ldr	r3, .L815+16
	cmp	r2, r3
	bne	.L807
.L806:
	movs	r3, #1
	b	.L808
.L807:
	.loc 1 2780 0 discriminator 3
	movs	r3, #0
.L808:
	.loc 1 2780 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2781 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #10]
	cmp	r3, #0
	beq	.L809
	.loc 1 2781 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #10]
	cmp	r3, #4096
	beq	.L809
	.loc 1 2781 0 discriminator 1
	ldrh	r3, [r7, #10]
	cmp	r3, #8192
	beq	.L809
	ldrh	r3, [r7, #10]
	cmp	r3, #12288
	bne	.L810
.L809:
	movs	r3, #1
	b	.L811
.L810:
	.loc 1 2781 0 discriminator 3
	movs	r3, #0
.L811:
	.loc 1 2781 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2782 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #8]
	cmp	r3, #32768
	beq	.L812
	.loc 1 2782 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #8]
	cmp	r3, #0
	bne	.L813
.L812:
	.loc 1 2782 0 discriminator 1
	movs	r3, #1
	b	.L814
.L813:
	.loc 1 2782 0 discriminator 3
	movs	r3, #0
.L814:
	.loc 1 2782 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2783 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #6]
	cmp	r3, #15
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 2785 0 discriminator 4
	ldrh	r1, [r7, #10]
	ldrh	r2, [r7, #8]
	ldrh	r3, [r7, #6]
	ldr	r0, [r7, #12]
	bl	TIM_ETRConfig
	.loc 1 2788 0 discriminator 4
	ldr	r3, [r7, #12]
	ldrh	r3, [r3, #8]	@ movhi
	strh	r3, [r7, #22]	@ movhi
	.loc 1 2791 0 discriminator 4
	ldrh	r3, [r7, #22]	@ movhi
	bic	r3, r3, #7
	strh	r3, [r7, #22]	@ movhi
	.loc 1 2794 0 discriminator 4
	ldrh	r3, [r7, #22]	@ movhi
	orr	r3, r3, #7
	strh	r3, [r7, #22]	@ movhi
	.loc 1 2797 0 discriminator 4
	ldrh	r3, [r7, #22]	@ movhi
	bic	r3, r3, #112
	strh	r3, [r7, #22]	@ movhi
	.loc 1 2798 0 discriminator 4
	ldrh	r3, [r7, #22]	@ movhi
	orr	r3, r3, #112
	strh	r3, [r7, #22]	@ movhi
	.loc 1 2801 0 discriminator 4
	ldr	r3, [r7, #12]
	ldrh	r2, [r7, #22]	@ movhi
	strh	r2, [r3, #8]	@ movhi
	.loc 1 2802 0 discriminator 4
	adds	r7, r7, #24
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L816:
	.align	2
.L815:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
.LFE189:
	.size	TIM_ETRClockMode1Config, .-TIM_ETRClockMode1Config
	.section	.text.TIM_ETRClockMode2Config,"ax",%progbits
	.align	2
	.global	TIM_ETRClockMode2Config
	.thumb
	.thumb_func
	.type	TIM_ETRClockMode2Config, %function
TIM_ETRClockMode2Config:
.LFB190:
	.loc 1 2823 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI237:
	sub	sp, sp, #16
.LCFI238:
	add	r7, sp, #0
.LCFI239:
	str	r0, [r7, #12]
	strh	r1, [r7, #10]	@ movhi
	strh	r2, [r7, #8]	@ movhi
	strh	r3, [r7, #6]	@ movhi
	.loc 1 2825 0
	ldr	r2, [r7, #12]
	ldr	r3, .L827
	cmp	r2, r3
	beq	.L818
	.loc 1 2825 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #12]
	cmp	r3, #1073741824
	beq	.L818
	.loc 1 2825 0 discriminator 1
	ldr	r2, [r7, #12]
	ldr	r3, .L827+4
	cmp	r2, r3
	beq	.L818
	ldr	r2, [r7, #12]
	ldr	r3, .L827+8
	cmp	r2, r3
	beq	.L818
	ldr	r2, [r7, #12]
	ldr	r3, .L827+12
	cmp	r2, r3
	beq	.L818
	ldr	r2, [r7, #12]
	ldr	r3, .L827+16
	cmp	r2, r3
	bne	.L819
.L818:
	movs	r3, #1
	b	.L820
.L819:
	.loc 1 2825 0 discriminator 3
	movs	r3, #0
.L820:
	.loc 1 2825 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2826 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #10]
	cmp	r3, #0
	beq	.L821
	.loc 1 2826 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #10]
	cmp	r3, #4096
	beq	.L821
	.loc 1 2826 0 discriminator 1
	ldrh	r3, [r7, #10]
	cmp	r3, #8192
	beq	.L821
	ldrh	r3, [r7, #10]
	cmp	r3, #12288
	bne	.L822
.L821:
	movs	r3, #1
	b	.L823
.L822:
	.loc 1 2826 0 discriminator 3
	movs	r3, #0
.L823:
	.loc 1 2826 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2827 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #8]
	cmp	r3, #32768
	beq	.L824
	.loc 1 2827 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #8]
	cmp	r3, #0
	bne	.L825
.L824:
	.loc 1 2827 0 discriminator 1
	movs	r3, #1
	b	.L826
.L825:
	.loc 1 2827 0 discriminator 3
	movs	r3, #0
.L826:
	.loc 1 2827 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2828 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #6]
	cmp	r3, #15
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 2831 0 discriminator 4
	ldrh	r1, [r7, #10]
	ldrh	r2, [r7, #8]
	ldrh	r3, [r7, #6]
	ldr	r0, [r7, #12]
	bl	TIM_ETRConfig
	.loc 1 2834 0 discriminator 4
	ldr	r3, [r7, #12]
	ldrh	r3, [r3, #8]	@ movhi
	uxth	r3, r3
	orr	r3, r3, #16384
	uxth	r2, r3
	ldr	r3, [r7, #12]
	strh	r2, [r3, #8]	@ movhi
	.loc 1 2835 0 discriminator 4
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L828:
	.align	2
.L827:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
.LFE190:
	.size	TIM_ETRClockMode2Config, .-TIM_ETRClockMode2Config
	.section	.text.TIM_SelectInputTrigger,"ax",%progbits
	.align	2
	.global	TIM_SelectInputTrigger
	.thumb
	.thumb_func
	.type	TIM_SelectInputTrigger, %function
TIM_SelectInputTrigger:
.LFB191:
	.loc 1 2893 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI240:
	sub	sp, sp, #16
.LCFI241:
	add	r7, sp, #0
.LCFI242:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 2894 0
	movs	r3, #0
	strh	r3, [r7, #14]	@ movhi
	.loc 1 2897 0
	ldr	r2, [r7, #4]
	ldr	r3, .L836
	cmp	r2, r3
	beq	.L830
	.loc 1 2897 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L830
	.loc 1 2897 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L836+4
	cmp	r2, r3
	beq	.L830
	ldr	r2, [r7, #4]
	ldr	r3, .L836+8
	cmp	r2, r3
	beq	.L830
	ldr	r2, [r7, #4]
	ldr	r3, .L836+12
	cmp	r2, r3
	beq	.L830
	ldr	r2, [r7, #4]
	ldr	r3, .L836+16
	cmp	r2, r3
	beq	.L830
	ldr	r2, [r7, #4]
	ldr	r3, .L836+20
	cmp	r2, r3
	beq	.L830
	ldr	r2, [r7, #4]
	ldr	r3, .L836+24
	cmp	r2, r3
	beq	.L830
	ldr	r2, [r7, #4]
	ldr	r3, .L836+28
	cmp	r2, r3
	beq	.L830
	ldr	r2, [r7, #4]
	ldr	r3, .L836+32
	cmp	r2, r3
	beq	.L830
	ldr	r2, [r7, #4]
	ldr	r3, .L836+36
	cmp	r2, r3
	beq	.L830
	ldr	r2, [r7, #4]
	ldr	r3, .L836+40
	cmp	r2, r3
	bne	.L831
.L830:
	movs	r3, #1
	b	.L832
.L831:
	.loc 1 2897 0 discriminator 3
	movs	r3, #0
.L832:
	.loc 1 2897 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2898 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	beq	.L833
	.loc 1 2898 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #16
	beq	.L833
	.loc 1 2898 0 discriminator 1
	ldrh	r3, [r7, #2]
	cmp	r3, #32
	beq	.L833
	ldrh	r3, [r7, #2]
	cmp	r3, #48
	beq	.L833
	ldrh	r3, [r7, #2]
	cmp	r3, #64
	beq	.L833
	ldrh	r3, [r7, #2]
	cmp	r3, #80
	beq	.L833
	ldrh	r3, [r7, #2]
	cmp	r3, #96
	beq	.L833
	ldrh	r3, [r7, #2]
	cmp	r3, #112
	bne	.L834
.L833:
	movs	r3, #1
	b	.L835
.L834:
	.loc 1 2898 0 discriminator 3
	movs	r3, #0
.L835:
	.loc 1 2898 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2901 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #8]	@ movhi
	strh	r3, [r7, #14]	@ movhi
	.loc 1 2904 0 discriminator 4
	ldrh	r3, [r7, #14]	@ movhi
	bic	r3, r3, #112
	strh	r3, [r7, #14]	@ movhi
	.loc 1 2907 0 discriminator 4
	ldrh	r2, [r7, #14]	@ movhi
	ldrh	r3, [r7, #2]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #14]	@ movhi
	.loc 1 2910 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #14]	@ movhi
	strh	r2, [r3, #8]	@ movhi
	.loc 1 2911 0 discriminator 4
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L837:
	.align	2
.L836:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
	.word	1073823744
	.word	1073824768
	.word	1073825792
	.word	1073747968
	.word	1073748992
	.word	1073750016
.LFE191:
	.size	TIM_SelectInputTrigger, .-TIM_SelectInputTrigger
	.section	.text.TIM_SelectOutputTrigger,"ax",%progbits
	.align	2
	.global	TIM_SelectOutputTrigger
	.thumb
	.thumb_func
	.type	TIM_SelectOutputTrigger, %function
TIM_SelectOutputTrigger:
.LFB192:
	.loc 1 2936 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI243:
	sub	sp, sp, #8
.LCFI244:
	add	r7, sp, #0
.LCFI245:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 2938 0
	ldr	r2, [r7, #4]
	ldr	r3, .L845
	cmp	r2, r3
	beq	.L839
	.loc 1 2938 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L839
	.loc 1 2938 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L845+4
	cmp	r2, r3
	beq	.L839
	ldr	r2, [r7, #4]
	ldr	r3, .L845+8
	cmp	r2, r3
	beq	.L839
	ldr	r2, [r7, #4]
	ldr	r3, .L845+12
	cmp	r2, r3
	beq	.L839
	ldr	r2, [r7, #4]
	ldr	r3, .L845+16
	cmp	r2, r3
	beq	.L839
	ldr	r2, [r7, #4]
	ldr	r3, .L845+20
	cmp	r2, r3
	beq	.L839
	ldr	r2, [r7, #4]
	ldr	r3, .L845+24
	cmp	r2, r3
	bne	.L840
.L839:
	movs	r3, #1
	b	.L841
.L840:
	.loc 1 2938 0 discriminator 3
	movs	r3, #0
.L841:
	.loc 1 2938 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2939 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	beq	.L842
	.loc 1 2939 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #16
	beq	.L842
	.loc 1 2939 0 discriminator 1
	ldrh	r3, [r7, #2]
	cmp	r3, #32
	beq	.L842
	ldrh	r3, [r7, #2]
	cmp	r3, #48
	beq	.L842
	ldrh	r3, [r7, #2]
	cmp	r3, #64
	beq	.L842
	ldrh	r3, [r7, #2]
	cmp	r3, #80
	beq	.L842
	ldrh	r3, [r7, #2]
	cmp	r3, #96
	beq	.L842
	ldrh	r3, [r7, #2]
	cmp	r3, #112
	bne	.L843
.L842:
	movs	r3, #1
	b	.L844
.L843:
	.loc 1 2939 0 discriminator 3
	movs	r3, #0
.L844:
	.loc 1 2939 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2942 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #4]	@ movhi
	uxth	r3, r3
	bic	r3, r3, #112
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #4]	@ movhi
	.loc 1 2944 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #4]	@ movhi
	uxth	r2, r3
	ldrh	r3, [r7, #2]	@ movhi
	orrs	r3, r3, r2
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #4]	@ movhi
	.loc 1 2945 0 discriminator 4
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L846:
	.align	2
.L845:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073745920
	.word	1073746944
	.word	1073808384
.LFE192:
	.size	TIM_SelectOutputTrigger, .-TIM_SelectOutputTrigger
	.section	.text.TIM_SelectSlaveMode,"ax",%progbits
	.align	2
	.global	TIM_SelectSlaveMode
	.thumb
	.thumb_func
	.type	TIM_SelectSlaveMode, %function
TIM_SelectSlaveMode:
.LFB193:
	.loc 1 2960 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI246:
	sub	sp, sp, #8
.LCFI247:
	add	r7, sp, #0
.LCFI248:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 2962 0
	ldr	r2, [r7, #4]
	ldr	r3, .L854
	cmp	r2, r3
	beq	.L848
	.loc 1 2962 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L848
	.loc 1 2962 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L854+4
	cmp	r2, r3
	beq	.L848
	ldr	r2, [r7, #4]
	ldr	r3, .L854+8
	cmp	r2, r3
	beq	.L848
	ldr	r2, [r7, #4]
	ldr	r3, .L854+12
	cmp	r2, r3
	beq	.L848
	ldr	r2, [r7, #4]
	ldr	r3, .L854+16
	cmp	r2, r3
	beq	.L848
	ldr	r2, [r7, #4]
	ldr	r3, .L854+20
	cmp	r2, r3
	beq	.L848
	ldr	r2, [r7, #4]
	ldr	r3, .L854+24
	cmp	r2, r3
	bne	.L849
.L848:
	movs	r3, #1
	b	.L850
.L849:
	.loc 1 2962 0 discriminator 3
	movs	r3, #0
.L850:
	.loc 1 2962 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2963 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #4
	beq	.L851
	.loc 1 2963 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #5
	beq	.L851
	.loc 1 2963 0 discriminator 1
	ldrh	r3, [r7, #2]
	cmp	r3, #6
	beq	.L851
	ldrh	r3, [r7, #2]
	cmp	r3, #7
	bne	.L852
.L851:
	movs	r3, #1
	b	.L853
.L852:
	.loc 1 2963 0 discriminator 3
	movs	r3, #0
.L853:
	.loc 1 2963 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2966 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #8]	@ movhi
	uxth	r3, r3
	bic	r3, r3, #7
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #8]	@ movhi
	.loc 1 2969 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #8]	@ movhi
	uxth	r2, r3
	ldrh	r3, [r7, #2]	@ movhi
	orrs	r3, r3, r2
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #8]	@ movhi
	.loc 1 2970 0 discriminator 4
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L855:
	.align	2
.L854:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
	.word	1073823744
	.word	1073747968
.LFE193:
	.size	TIM_SelectSlaveMode, .-TIM_SelectSlaveMode
	.section	.text.TIM_SelectMasterSlaveMode,"ax",%progbits
	.align	2
	.global	TIM_SelectMasterSlaveMode
	.thumb
	.thumb_func
	.type	TIM_SelectMasterSlaveMode, %function
TIM_SelectMasterSlaveMode:
.LFB194:
	.loc 1 2983 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI249:
	sub	sp, sp, #8
.LCFI250:
	add	r7, sp, #0
.LCFI251:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 2985 0
	ldr	r2, [r7, #4]
	ldr	r3, .L863
	cmp	r2, r3
	beq	.L857
	.loc 1 2985 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L857
	.loc 1 2985 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L863+4
	cmp	r2, r3
	beq	.L857
	ldr	r2, [r7, #4]
	ldr	r3, .L863+8
	cmp	r2, r3
	beq	.L857
	ldr	r2, [r7, #4]
	ldr	r3, .L863+12
	cmp	r2, r3
	beq	.L857
	ldr	r2, [r7, #4]
	ldr	r3, .L863+16
	cmp	r2, r3
	beq	.L857
	ldr	r2, [r7, #4]
	ldr	r3, .L863+20
	cmp	r2, r3
	beq	.L857
	ldr	r2, [r7, #4]
	ldr	r3, .L863+24
	cmp	r2, r3
	bne	.L858
.L857:
	movs	r3, #1
	b	.L859
.L858:
	.loc 1 2985 0 discriminator 3
	movs	r3, #0
.L859:
	.loc 1 2985 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2986 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #128
	beq	.L860
	.loc 1 2986 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	bne	.L861
.L860:
	.loc 1 2986 0 discriminator 1
	movs	r3, #1
	b	.L862
.L861:
	.loc 1 2986 0 discriminator 3
	movs	r3, #0
.L862:
	.loc 1 2986 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 2989 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #8]	@ movhi
	uxth	r3, r3
	bic	r3, r3, #128
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #8]	@ movhi
	.loc 1 2992 0 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #8]	@ movhi
	uxth	r2, r3
	ldrh	r3, [r7, #2]	@ movhi
	orrs	r3, r3, r2
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #8]	@ movhi
	.loc 1 2993 0 discriminator 4
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L864:
	.align	2
.L863:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
	.word	1073823744
	.word	1073747968
.LFE194:
	.size	TIM_SelectMasterSlaveMode, .-TIM_SelectMasterSlaveMode
	.section	.text.TIM_ETRConfig,"ax",%progbits
	.align	2
	.global	TIM_ETRConfig
	.thumb
	.thumb_func
	.type	TIM_ETRConfig, %function
TIM_ETRConfig:
.LFB195:
	.loc 1 3014 0
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI252:
	sub	sp, sp, #24
.LCFI253:
	add	r7, sp, #0
.LCFI254:
	str	r0, [r7, #12]
	strh	r1, [r7, #10]	@ movhi
	strh	r2, [r7, #8]	@ movhi
	strh	r3, [r7, #6]	@ movhi
	.loc 1 3015 0
	movs	r3, #0
	strh	r3, [r7, #22]	@ movhi
	.loc 1 3018 0
	ldr	r2, [r7, #12]
	ldr	r3, .L875
	cmp	r2, r3
	beq	.L866
	.loc 1 3018 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #12]
	cmp	r3, #1073741824
	beq	.L866
	.loc 1 3018 0 discriminator 1
	ldr	r2, [r7, #12]
	ldr	r3, .L875+4
	cmp	r2, r3
	beq	.L866
	ldr	r2, [r7, #12]
	ldr	r3, .L875+8
	cmp	r2, r3
	beq	.L866
	ldr	r2, [r7, #12]
	ldr	r3, .L875+12
	cmp	r2, r3
	beq	.L866
	ldr	r2, [r7, #12]
	ldr	r3, .L875+16
	cmp	r2, r3
	bne	.L867
.L866:
	movs	r3, #1
	b	.L868
.L867:
	.loc 1 3018 0 discriminator 3
	movs	r3, #0
.L868:
	.loc 1 3018 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 3019 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #10]
	cmp	r3, #0
	beq	.L869
	.loc 1 3019 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #10]
	cmp	r3, #4096
	beq	.L869
	.loc 1 3019 0 discriminator 1
	ldrh	r3, [r7, #10]
	cmp	r3, #8192
	beq	.L869
	ldrh	r3, [r7, #10]
	cmp	r3, #12288
	bne	.L870
.L869:
	movs	r3, #1
	b	.L871
.L870:
	.loc 1 3019 0 discriminator 3
	movs	r3, #0
.L871:
	.loc 1 3019 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 3020 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #8]
	cmp	r3, #32768
	beq	.L872
	.loc 1 3020 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #8]
	cmp	r3, #0
	bne	.L873
.L872:
	.loc 1 3020 0 discriminator 1
	movs	r3, #1
	b	.L874
.L873:
	.loc 1 3020 0 discriminator 3
	movs	r3, #0
.L874:
	.loc 1 3020 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 3021 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #6]
	cmp	r3, #15
	ite	hi
	movhi	r3, #0
	movls	r3, #1
	uxtb	r3, r3
	mov	r0, r3
	bl	assert_param
	.loc 1 3023 0 discriminator 4
	ldr	r3, [r7, #12]
	ldrh	r3, [r3, #8]	@ movhi
	strh	r3, [r7, #22]	@ movhi
	.loc 1 3026 0 discriminator 4
	ldrh	r3, [r7, #22]	@ movhi
	uxtb	r3, r3
	strh	r3, [r7, #22]	@ movhi
	.loc 1 3029 0 discriminator 4
	ldrh	r3, [r7, #6]	@ movhi
	lsls	r3, r3, #8
	uxth	r2, r3
	ldrh	r3, [r7, #8]	@ movhi
	orrs	r3, r3, r2
	uxth	r2, r3
	ldrh	r3, [r7, #10]	@ movhi
	orrs	r3, r3, r2
	uxth	r2, r3
	ldrh	r3, [r7, #22]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #22]	@ movhi
	.loc 1 3032 0 discriminator 4
	ldr	r3, [r7, #12]
	ldrh	r2, [r7, #22]	@ movhi
	strh	r2, [r3, #8]	@ movhi
	.loc 1 3033 0 discriminator 4
	adds	r7, r7, #24
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L876:
	.align	2
.L875:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
.LFE195:
	.size	TIM_ETRConfig, .-TIM_ETRConfig
	.section	.text.TIM_EncoderInterfaceConfig,"ax",%progbits
	.align	2
	.global	TIM_EncoderInterfaceConfig
	.thumb
	.thumb_func
	.type	TIM_EncoderInterfaceConfig, %function
TIM_EncoderInterfaceConfig:
.LFB196:
	.loc 1 3072 0
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI255:
	sub	sp, sp, #24
.LCFI256:
	add	r7, sp, #0
.LCFI257:
	str	r0, [r7, #12]
	strh	r1, [r7, #10]	@ movhi
	strh	r2, [r7, #8]	@ movhi
	strh	r3, [r7, #6]	@ movhi
	.loc 1 3073 0
	movs	r3, #0
	strh	r3, [r7, #22]	@ movhi
	.loc 1 3074 0
	movs	r3, #0
	strh	r3, [r7, #20]	@ movhi
	.loc 1 3075 0
	movs	r3, #0
	strh	r3, [r7, #18]	@ movhi
	.loc 1 3078 0
	ldr	r2, [r7, #12]
	ldr	r3, .L890
	cmp	r2, r3
	beq	.L878
	.loc 1 3078 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #12]
	cmp	r3, #1073741824
	beq	.L878
	.loc 1 3078 0 discriminator 1
	ldr	r2, [r7, #12]
	ldr	r3, .L890+4
	cmp	r2, r3
	beq	.L878
	ldr	r2, [r7, #12]
	ldr	r3, .L890+8
	cmp	r2, r3
	beq	.L878
	ldr	r2, [r7, #12]
	ldr	r3, .L890+12
	cmp	r2, r3
	beq	.L878
	ldr	r2, [r7, #12]
	ldr	r3, .L890+16
	cmp	r2, r3
	beq	.L878
	ldr	r2, [r7, #12]
	ldr	r3, .L890+20
	cmp	r2, r3
	beq	.L878
	ldr	r2, [r7, #12]
	ldr	r3, .L890+24
	cmp	r2, r3
	bne	.L879
.L878:
	movs	r3, #1
	b	.L880
.L879:
	.loc 1 3078 0 discriminator 3
	movs	r3, #0
.L880:
	.loc 1 3078 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 3079 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #10]
	cmp	r3, #1
	beq	.L881
	.loc 1 3079 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #10]
	cmp	r3, #2
	beq	.L881
	.loc 1 3079 0 discriminator 1
	ldrh	r3, [r7, #10]
	cmp	r3, #3
	bne	.L882
.L881:
	movs	r3, #1
	b	.L883
.L882:
	.loc 1 3079 0 discriminator 3
	movs	r3, #0
.L883:
	.loc 1 3079 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 3080 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #8]
	cmp	r3, #0
	beq	.L884
	.loc 1 3080 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #8]
	cmp	r3, #2
	beq	.L884
	.loc 1 3080 0 discriminator 1
	ldrh	r3, [r7, #8]
	cmp	r3, #10
	bne	.L885
.L884:
	movs	r3, #1
	b	.L886
.L885:
	.loc 1 3080 0 discriminator 3
	movs	r3, #0
.L886:
	.loc 1 3080 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 3081 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #6]
	cmp	r3, #0
	beq	.L887
	.loc 1 3081 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #6]
	cmp	r3, #2
	beq	.L887
	.loc 1 3081 0 discriminator 1
	ldrh	r3, [r7, #6]
	cmp	r3, #10
	bne	.L888
.L887:
	movs	r3, #1
	b	.L889
.L888:
	.loc 1 3081 0 discriminator 3
	movs	r3, #0
.L889:
	.loc 1 3081 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 3084 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #12]
	ldrh	r3, [r3, #8]	@ movhi
	strh	r3, [r7, #22]	@ movhi
	.loc 1 3087 0 discriminator 4
	ldr	r3, [r7, #12]
	ldrh	r3, [r3, #24]	@ movhi
	strh	r3, [r7, #20]	@ movhi
	.loc 1 3090 0 discriminator 4
	ldr	r3, [r7, #12]
	ldrh	r3, [r3, #32]	@ movhi
	strh	r3, [r7, #18]	@ movhi
	.loc 1 3093 0 discriminator 4
	ldrh	r3, [r7, #22]	@ movhi
	bic	r3, r3, #7
	strh	r3, [r7, #22]	@ movhi
	.loc 1 3094 0 discriminator 4
	ldrh	r2, [r7, #22]	@ movhi
	ldrh	r3, [r7, #10]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #22]	@ movhi
	.loc 1 3097 0 discriminator 4
	ldrh	r3, [r7, #20]	@ movhi
	bic	r3, r3, #768
	bic	r3, r3, #3
	strh	r3, [r7, #20]	@ movhi
	.loc 1 3098 0 discriminator 4
	ldrh	r3, [r7, #20]	@ movhi
	orr	r3, r3, #256
	orr	r3, r3, #1
	strh	r3, [r7, #20]	@ movhi
	.loc 1 3101 0 discriminator 4
	ldrh	r3, [r7, #18]	@ movhi
	bic	r3, r3, #34
	strh	r3, [r7, #18]	@ movhi
	.loc 1 3102 0 discriminator 4
	ldrh	r3, [r7, #6]	@ movhi
	lsls	r3, r3, #4
	uxth	r2, r3
	ldrh	r3, [r7, #8]	@ movhi
	orrs	r3, r3, r2
	uxth	r2, r3
	ldrh	r3, [r7, #18]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #18]	@ movhi
	.loc 1 3105 0 discriminator 4
	ldr	r3, [r7, #12]
	ldrh	r2, [r7, #22]	@ movhi
	strh	r2, [r3, #8]	@ movhi
	.loc 1 3108 0 discriminator 4
	ldr	r3, [r7, #12]
	ldrh	r2, [r7, #20]	@ movhi
	strh	r2, [r3, #24]	@ movhi
	.loc 1 3111 0 discriminator 4
	ldr	r3, [r7, #12]
	ldrh	r2, [r7, #18]	@ movhi
	strh	r2, [r3, #32]	@ movhi
	.loc 1 3112 0 discriminator 4
	adds	r7, r7, #24
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L891:
	.align	2
.L890:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
	.word	1073823744
	.word	1073747968
.LFE196:
	.size	TIM_EncoderInterfaceConfig, .-TIM_EncoderInterfaceConfig
	.section	.text.TIM_SelectHallSensor,"ax",%progbits
	.align	2
	.global	TIM_SelectHallSensor
	.thumb
	.thumb_func
	.type	TIM_SelectHallSensor, %function
TIM_SelectHallSensor:
.LFB197:
	.loc 1 3123 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI258:
	sub	sp, sp, #8
.LCFI259:
	add	r7, sp, #0
.LCFI260:
	str	r0, [r7, #4]
	mov	r3, r1
	strb	r3, [r7, #3]
	.loc 1 3125 0
	ldr	r2, [r7, #4]
	ldr	r3, .L901
	cmp	r2, r3
	beq	.L893
	.loc 1 3125 0 is_stmt 0 discriminator 2
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L893
	.loc 1 3125 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L901+4
	cmp	r2, r3
	beq	.L893
	ldr	r2, [r7, #4]
	ldr	r3, .L901+8
	cmp	r2, r3
	beq	.L893
	ldr	r2, [r7, #4]
	ldr	r3, .L901+12
	cmp	r2, r3
	beq	.L893
	ldr	r2, [r7, #4]
	ldr	r3, .L901+16
	cmp	r2, r3
	beq	.L893
	ldr	r2, [r7, #4]
	ldr	r3, .L901+20
	cmp	r2, r3
	beq	.L893
	ldr	r2, [r7, #4]
	ldr	r3, .L901+24
	cmp	r2, r3
	bne	.L894
.L893:
	movs	r3, #1
	b	.L895
.L894:
	.loc 1 3125 0 discriminator 3
	movs	r3, #0
.L895:
	.loc 1 3125 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 3126 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L896
	.loc 1 3126 0 is_stmt 0 discriminator 2
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #1
	bne	.L897
.L896:
	.loc 1 3126 0 discriminator 1
	movs	r3, #1
	b	.L898
.L897:
	.loc 1 3126 0 discriminator 3
	movs	r3, #0
.L898:
	.loc 1 3126 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 3128 0 is_stmt 1 discriminator 4
	ldrb	r3, [r7, #3]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L899
	.loc 1 3131 0
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #4]	@ movhi
	uxth	r3, r3
	orr	r3, r3, #128
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #4]	@ movhi
	b	.L892
.L899:
	.loc 1 3136 0
	ldr	r3, [r7, #4]
	ldrh	r3, [r3, #4]	@ movhi
	uxth	r3, r3
	bic	r3, r3, #128
	uxth	r2, r3
	ldr	r3, [r7, #4]
	strh	r2, [r3, #4]	@ movhi
.L892:
	.loc 1 3138 0
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L902:
	.align	2
.L901:
	.word	1073807360
	.word	1073742848
	.word	1073743872
	.word	1073744896
	.word	1073808384
	.word	1073823744
	.word	1073747968
.LFE197:
	.size	TIM_SelectHallSensor, .-TIM_SelectHallSensor
	.section	.text.TIM_RemapConfig,"ax",%progbits
	.align	2
	.global	TIM_RemapConfig
	.thumb
	.thumb_func
	.type	TIM_RemapConfig, %function
TIM_RemapConfig:
.LFB198:
	.loc 1 3174 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI261:
	sub	sp, sp, #8
.LCFI262:
	add	r7, sp, #0
.LCFI263:
	str	r0, [r7, #4]
	mov	r3, r1
	strh	r3, [r7, #2]	@ movhi
	.loc 1 3176 0
	ldr	r3, [r7, #4]
	cmp	r3, #1073741824
	beq	.L904
	.loc 1 3176 0 is_stmt 0 discriminator 2
	ldr	r2, [r7, #4]
	ldr	r3, .L910
	cmp	r2, r3
	beq	.L904
	.loc 1 3176 0 discriminator 1
	ldr	r2, [r7, #4]
	ldr	r3, .L910+4
	cmp	r2, r3
	bne	.L905
.L904:
	movs	r3, #1
	b	.L906
.L905:
	.loc 1 3176 0 discriminator 3
	movs	r3, #0
.L906:
	.loc 1 3176 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 3177 0 is_stmt 1 discriminator 4
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	beq	.L907
	.loc 1 3177 0 is_stmt 0 discriminator 2
	ldrh	r3, [r7, #2]
	cmp	r3, #1024
	beq	.L907
	.loc 1 3177 0 discriminator 1
	ldrh	r3, [r7, #2]
	cmp	r3, #2048
	beq	.L907
	ldrh	r3, [r7, #2]
	cmp	r3, #3072
	beq	.L907
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	beq	.L907
	ldrh	r3, [r7, #2]
	cmp	r3, #64
	beq	.L907
	ldrh	r3, [r7, #2]
	cmp	r3, #128
	beq	.L907
	ldrh	r3, [r7, #2]
	cmp	r3, #192
	beq	.L907
	ldrh	r3, [r7, #2]
	cmp	r3, #0
	beq	.L907
	ldrh	r3, [r7, #2]
	cmp	r3, #2
	bne	.L908
.L907:
	movs	r3, #1
	b	.L909
.L908:
	.loc 1 3177 0 discriminator 3
	movs	r3, #0
.L909:
	.loc 1 3177 0 discriminator 4
	mov	r0, r3
	bl	assert_param
	.loc 1 3180 0 is_stmt 1 discriminator 4
	ldr	r3, [r7, #4]
	ldrh	r2, [r7, #2]	@ movhi
	strh	r2, [r3, #80]	@ movhi
	.loc 1 3181 0 discriminator 4
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L911:
	.align	2
.L910:
	.word	1073744896
	.word	1073825792
.LFE198:
	.size	TIM_RemapConfig, .-TIM_RemapConfig
	.section	.text.TI1_Config,"ax",%progbits
	.align	2
	.thumb
	.thumb_func
	.type	TI1_Config, %function
TI1_Config:
.LFB199:
	.loc 1 3206 0
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7}
.LCFI264:
	sub	sp, sp, #28
.LCFI265:
	add	r7, sp, #0
.LCFI266:
	str	r0, [r7, #12]
	strh	r1, [r7, #10]	@ movhi
	strh	r2, [r7, #8]	@ movhi
	strh	r3, [r7, #6]	@ movhi
	.loc 1 3207 0
	movs	r3, #0
	strh	r3, [r7, #22]	@ movhi
	movs	r3, #0
	strh	r3, [r7, #20]	@ movhi
	.loc 1 3210 0
	ldr	r3, [r7, #12]
	ldrh	r3, [r3, #32]	@ movhi
	uxth	r3, r3
	bic	r3, r3, #1
	uxth	r2, r3
	ldr	r3, [r7, #12]
	strh	r2, [r3, #32]	@ movhi
	.loc 1 3211 0
	ldr	r3, [r7, #12]
	ldrh	r3, [r3, #24]	@ movhi
	strh	r3, [r7, #22]	@ movhi
	.loc 1 3212 0
	ldr	r3, [r7, #12]
	ldrh	r3, [r3, #32]	@ movhi
	strh	r3, [r7, #20]	@ movhi
	.loc 1 3215 0
	ldrh	r3, [r7, #22]	@ movhi
	bic	r3, r3, #243
	strh	r3, [r7, #22]	@ movhi
	.loc 1 3216 0
	ldrh	r3, [r7, #6]	@ movhi
	lsls	r3, r3, #4
	uxth	r2, r3
	ldrh	r3, [r7, #8]	@ movhi
	orrs	r3, r3, r2
	uxth	r2, r3
	ldrh	r3, [r7, #22]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #22]	@ movhi
	.loc 1 3219 0
	ldrh	r3, [r7, #20]	@ movhi
	bic	r3, r3, #10
	strh	r3, [r7, #20]	@ movhi
	.loc 1 3220 0
	ldrh	r2, [r7, #10]	@ movhi
	ldrh	r3, [r7, #20]	@ movhi
	orrs	r3, r3, r2
	uxth	r3, r3
	orr	r3, r3, #1
	strh	r3, [r7, #20]	@ movhi
	.loc 1 3223 0
	ldr	r3, [r7, #12]
	ldrh	r2, [r7, #22]	@ movhi
	strh	r2, [r3, #24]	@ movhi
	.loc 1 3224 0
	ldr	r3, [r7, #12]
	ldrh	r2, [r7, #20]	@ movhi
	strh	r2, [r3, #32]	@ movhi
	.loc 1 3225 0
	adds	r7, r7, #28
	mov	sp, r7
	@ sp needed
	ldr	r7, [sp], #4
	bx	lr
.LFE199:
	.size	TI1_Config, .-TI1_Config
	.section	.text.TI2_Config,"ax",%progbits
	.align	2
	.thumb
	.thumb_func
	.type	TI2_Config, %function
TI2_Config:
.LFB200:
	.loc 1 3247 0
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7}
.LCFI267:
	sub	sp, sp, #28
.LCFI268:
	add	r7, sp, #0
.LCFI269:
	str	r0, [r7, #12]
	strh	r1, [r7, #10]	@ movhi
	strh	r2, [r7, #8]	@ movhi
	strh	r3, [r7, #6]	@ movhi
	.loc 1 3248 0
	movs	r3, #0
	strh	r3, [r7, #22]	@ movhi
	movs	r3, #0
	strh	r3, [r7, #20]	@ movhi
	movs	r3, #0
	strh	r3, [r7, #18]	@ movhi
	.loc 1 3251 0
	ldr	r3, [r7, #12]
	ldrh	r3, [r3, #32]	@ movhi
	uxth	r3, r3
	bic	r3, r3, #16
	uxth	r2, r3
	ldr	r3, [r7, #12]
	strh	r2, [r3, #32]	@ movhi
	.loc 1 3252 0
	ldr	r3, [r7, #12]
	ldrh	r3, [r3, #24]	@ movhi
	strh	r3, [r7, #22]	@ movhi
	.loc 1 3253 0
	ldr	r3, [r7, #12]
	ldrh	r3, [r3, #32]	@ movhi
	strh	r3, [r7, #20]	@ movhi
	.loc 1 3254 0
	ldrh	r3, [r7, #10]	@ movhi
	lsls	r3, r3, #4
	strh	r3, [r7, #18]	@ movhi
	.loc 1 3257 0
	ldrh	r3, [r7, #22]	@ movhi
	bic	r3, r3, #768
	lsls	r3, r3, #20
	lsrs	r3, r3, #20
	strh	r3, [r7, #22]	@ movhi
	.loc 1 3258 0
	ldrh	r3, [r7, #6]	@ movhi
	lsls	r3, r3, #12
	uxth	r2, r3
	ldrh	r3, [r7, #22]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #22]	@ movhi
	.loc 1 3259 0
	ldrh	r3, [r7, #8]	@ movhi
	lsls	r3, r3, #8
	uxth	r2, r3
	ldrh	r3, [r7, #22]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #22]	@ movhi
	.loc 1 3262 0
	ldrh	r3, [r7, #20]	@ movhi
	bic	r3, r3, #160
	strh	r3, [r7, #20]	@ movhi
	.loc 1 3263 0
	ldrh	r2, [r7, #18]	@ movhi
	ldrh	r3, [r7, #20]	@ movhi
	orrs	r3, r3, r2
	uxth	r3, r3
	orr	r3, r3, #16
	strh	r3, [r7, #20]	@ movhi
	.loc 1 3266 0
	ldr	r3, [r7, #12]
	ldrh	r2, [r7, #22]	@ movhi
	strh	r2, [r3, #24]	@ movhi
	.loc 1 3267 0
	ldr	r3, [r7, #12]
	ldrh	r2, [r7, #20]	@ movhi
	strh	r2, [r3, #32]	@ movhi
	.loc 1 3268 0
	adds	r7, r7, #28
	mov	sp, r7
	@ sp needed
	ldr	r7, [sp], #4
	bx	lr
.LFE200:
	.size	TI2_Config, .-TI2_Config
	.section	.text.TI3_Config,"ax",%progbits
	.align	2
	.thumb
	.thumb_func
	.type	TI3_Config, %function
TI3_Config:
.LFB201:
	.loc 1 3289 0
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7}
.LCFI270:
	sub	sp, sp, #28
.LCFI271:
	add	r7, sp, #0
.LCFI272:
	str	r0, [r7, #12]
	strh	r1, [r7, #10]	@ movhi
	strh	r2, [r7, #8]	@ movhi
	strh	r3, [r7, #6]	@ movhi
	.loc 1 3290 0
	movs	r3, #0
	strh	r3, [r7, #22]	@ movhi
	movs	r3, #0
	strh	r3, [r7, #20]	@ movhi
	movs	r3, #0
	strh	r3, [r7, #18]	@ movhi
	.loc 1 3293 0
	ldr	r3, [r7, #12]
	ldrh	r3, [r3, #32]	@ movhi
	uxth	r3, r3
	bic	r3, r3, #256
	uxth	r2, r3
	ldr	r3, [r7, #12]
	strh	r2, [r3, #32]	@ movhi
	.loc 1 3294 0
	ldr	r3, [r7, #12]
	ldrh	r3, [r3, #28]	@ movhi
	strh	r3, [r7, #22]	@ movhi
	.loc 1 3295 0
	ldr	r3, [r7, #12]
	ldrh	r3, [r3, #32]	@ movhi
	strh	r3, [r7, #20]	@ movhi
	.loc 1 3296 0
	ldrh	r3, [r7, #10]	@ movhi
	lsls	r3, r3, #8
	strh	r3, [r7, #18]	@ movhi
	.loc 1 3299 0
	ldrh	r3, [r7, #22]	@ movhi
	bic	r3, r3, #243
	strh	r3, [r7, #22]	@ movhi
	.loc 1 3300 0
	ldrh	r3, [r7, #6]	@ movhi
	lsls	r3, r3, #4
	uxth	r2, r3
	ldrh	r3, [r7, #8]	@ movhi
	orrs	r3, r3, r2
	uxth	r2, r3
	ldrh	r3, [r7, #22]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #22]	@ movhi
	.loc 1 3303 0
	ldrh	r3, [r7, #20]	@ movhi
	bic	r3, r3, #2560
	strh	r3, [r7, #20]	@ movhi
	.loc 1 3304 0
	ldrh	r2, [r7, #18]	@ movhi
	ldrh	r3, [r7, #20]	@ movhi
	orrs	r3, r3, r2
	uxth	r3, r3
	orr	r3, r3, #256
	strh	r3, [r7, #20]	@ movhi
	.loc 1 3307 0
	ldr	r3, [r7, #12]
	ldrh	r2, [r7, #22]	@ movhi
	strh	r2, [r3, #28]	@ movhi
	.loc 1 3308 0
	ldr	r3, [r7, #12]
	ldrh	r2, [r7, #20]	@ movhi
	strh	r2, [r3, #32]	@ movhi
	.loc 1 3309 0
	adds	r7, r7, #28
	mov	sp, r7
	@ sp needed
	ldr	r7, [sp], #4
	bx	lr
.LFE201:
	.size	TI3_Config, .-TI3_Config
	.section	.text.TI4_Config,"ax",%progbits
	.align	2
	.thumb
	.thumb_func
	.type	TI4_Config, %function
TI4_Config:
.LFB202:
	.loc 1 3330 0
	@ args = 0, pretend = 0, frame = 24
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7}
.LCFI273:
	sub	sp, sp, #28
.LCFI274:
	add	r7, sp, #0
.LCFI275:
	str	r0, [r7, #12]
	strh	r1, [r7, #10]	@ movhi
	strh	r2, [r7, #8]	@ movhi
	strh	r3, [r7, #6]	@ movhi
	.loc 1 3331 0
	movs	r3, #0
	strh	r3, [r7, #22]	@ movhi
	movs	r3, #0
	strh	r3, [r7, #20]	@ movhi
	movs	r3, #0
	strh	r3, [r7, #18]	@ movhi
	.loc 1 3334 0
	ldr	r3, [r7, #12]
	ldrh	r3, [r3, #32]	@ movhi
	uxth	r3, r3
	bic	r3, r3, #4096
	uxth	r2, r3
	ldr	r3, [r7, #12]
	strh	r2, [r3, #32]	@ movhi
	.loc 1 3335 0
	ldr	r3, [r7, #12]
	ldrh	r3, [r3, #28]	@ movhi
	strh	r3, [r7, #22]	@ movhi
	.loc 1 3336 0
	ldr	r3, [r7, #12]
	ldrh	r3, [r3, #32]	@ movhi
	strh	r3, [r7, #20]	@ movhi
	.loc 1 3337 0
	ldrh	r3, [r7, #10]	@ movhi
	lsls	r3, r3, #12
	strh	r3, [r7, #18]	@ movhi
	.loc 1 3340 0
	ldrh	r3, [r7, #22]	@ movhi
	bic	r3, r3, #768
	lsls	r3, r3, #20
	lsrs	r3, r3, #20
	strh	r3, [r7, #22]	@ movhi
	.loc 1 3341 0
	ldrh	r3, [r7, #8]	@ movhi
	lsls	r3, r3, #8
	uxth	r2, r3
	ldrh	r3, [r7, #22]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #22]	@ movhi
	.loc 1 3342 0
	ldrh	r3, [r7, #6]	@ movhi
	lsls	r3, r3, #12
	uxth	r2, r3
	ldrh	r3, [r7, #22]	@ movhi
	orrs	r3, r3, r2
	strh	r3, [r7, #22]	@ movhi
	.loc 1 3345 0
	ldrh	r3, [r7, #20]	@ movhi
	bic	r3, r3, #8192
	lsls	r3, r3, #17
	lsrs	r3, r3, #17
	strh	r3, [r7, #20]	@ movhi
	.loc 1 3346 0
	ldrh	r2, [r7, #18]	@ movhi
	ldrh	r3, [r7, #20]	@ movhi
	orrs	r3, r3, r2
	uxth	r3, r3
	orr	r3, r3, #4096
	strh	r3, [r7, #20]	@ movhi
	.loc 1 3349 0
	ldr	r3, [r7, #12]
	ldrh	r2, [r7, #22]	@ movhi
	strh	r2, [r3, #28]	@ movhi
	.loc 1 3350 0
	ldr	r3, [r7, #12]
	ldrh	r2, [r7, #20]	@ movhi
	strh	r2, [r3, #32]	@ movhi
	.loc 1 3351 0
	adds	r7, r7, #28
	mov	sp, r7
	@ sp needed
	ldr	r7, [sp], #4
	bx	lr
.LFE202:
	.size	TI4_Config, .-TI4_Config
	.section	.debug_frame,"",%progbits
.Lframe0:
	.4byte	.LECIE0-.LSCIE0
.LSCIE0:
	.4byte	0xffffffff
	.byte	0x3
	.ascii	"\000"
	.uleb128 0x1
	.sleb128 -4
	.uleb128 0xe
	.byte	0xc
	.uleb128 0xd
	.uleb128 0
	.align	2
.LECIE0:
.LSFDE0:
	.4byte	.LEFDE0-.LASFDE0
.LASFDE0:
	.4byte	.Lframe0
	.4byte	.LFB111
	.4byte	.LFE111-.LFB111
	.byte	0x4
	.4byte	.LCFI0-.LFB111
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI1-.LCFI0
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI2-.LCFI1
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE0:
.LSFDE2:
	.4byte	.LEFDE2-.LASFDE2
.LASFDE2:
	.4byte	.Lframe0
	.4byte	.LFB112
	.4byte	.LFE112-.LFB112
	.byte	0x4
	.4byte	.LCFI3-.LFB112
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI4-.LCFI3
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI5-.LCFI4
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE2:
.LSFDE4:
	.4byte	.LEFDE4-.LASFDE4
.LASFDE4:
	.4byte	.Lframe0
	.4byte	.LFB113
	.4byte	.LFE113-.LFB113
	.byte	0x4
	.4byte	.LCFI6-.LFB113
	.byte	0xe
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI7-.LCFI6
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI8-.LCFI7
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE4:
.LSFDE6:
	.4byte	.LEFDE6-.LASFDE6
.LASFDE6:
	.4byte	.Lframe0
	.4byte	.LFB114
	.4byte	.LFE114-.LFB114
	.byte	0x4
	.4byte	.LCFI9-.LFB114
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI10-.LCFI9
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI11-.LCFI10
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE6:
.LSFDE8:
	.4byte	.LEFDE8-.LASFDE8
.LASFDE8:
	.4byte	.Lframe0
	.4byte	.LFB115
	.4byte	.LFE115-.LFB115
	.byte	0x4
	.4byte	.LCFI12-.LFB115
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI13-.LCFI12
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI14-.LCFI13
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE8:
.LSFDE10:
	.4byte	.LEFDE10-.LASFDE10
.LASFDE10:
	.4byte	.Lframe0
	.4byte	.LFB116
	.4byte	.LFE116-.LFB116
	.byte	0x4
	.4byte	.LCFI15-.LFB116
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI16-.LCFI15
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI17-.LCFI16
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE10:
.LSFDE12:
	.4byte	.LEFDE12-.LASFDE12
.LASFDE12:
	.4byte	.Lframe0
	.4byte	.LFB117
	.4byte	.LFE117-.LFB117
	.byte	0x4
	.4byte	.LCFI18-.LFB117
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI19-.LCFI18
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI20-.LCFI19
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE12:
.LSFDE14:
	.4byte	.LEFDE14-.LASFDE14
.LASFDE14:
	.4byte	.Lframe0
	.4byte	.LFB118
	.4byte	.LFE118-.LFB118
	.byte	0x4
	.4byte	.LCFI21-.LFB118
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI22-.LCFI21
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI23-.LCFI22
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE14:
.LSFDE16:
	.4byte	.LEFDE16-.LASFDE16
.LASFDE16:
	.4byte	.Lframe0
	.4byte	.LFB119
	.4byte	.LFE119-.LFB119
	.byte	0x4
	.4byte	.LCFI24-.LFB119
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI25-.LCFI24
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI26-.LCFI25
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE16:
.LSFDE18:
	.4byte	.LEFDE18-.LASFDE18
.LASFDE18:
	.4byte	.Lframe0
	.4byte	.LFB120
	.4byte	.LFE120-.LFB120
	.byte	0x4
	.4byte	.LCFI27-.LFB120
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI28-.LCFI27
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI29-.LCFI28
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE18:
.LSFDE20:
	.4byte	.LEFDE20-.LASFDE20
.LASFDE20:
	.4byte	.Lframe0
	.4byte	.LFB121
	.4byte	.LFE121-.LFB121
	.byte	0x4
	.4byte	.LCFI30-.LFB121
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI31-.LCFI30
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI32-.LCFI31
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE20:
.LSFDE22:
	.4byte	.LEFDE22-.LASFDE22
.LASFDE22:
	.4byte	.Lframe0
	.4byte	.LFB122
	.4byte	.LFE122-.LFB122
	.byte	0x4
	.4byte	.LCFI33-.LFB122
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI34-.LCFI33
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI35-.LCFI34
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE22:
.LSFDE24:
	.4byte	.LEFDE24-.LASFDE24
.LASFDE24:
	.4byte	.Lframe0
	.4byte	.LFB123
	.4byte	.LFE123-.LFB123
	.byte	0x4
	.4byte	.LCFI36-.LFB123
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI37-.LCFI36
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI38-.LCFI37
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE24:
.LSFDE26:
	.4byte	.LEFDE26-.LASFDE26
.LASFDE26:
	.4byte	.Lframe0
	.4byte	.LFB124
	.4byte	.LFE124-.LFB124
	.byte	0x4
	.4byte	.LCFI39-.LFB124
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI40-.LCFI39
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI41-.LCFI40
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE26:
.LSFDE28:
	.4byte	.LEFDE28-.LASFDE28
.LASFDE28:
	.4byte	.Lframe0
	.4byte	.LFB125
	.4byte	.LFE125-.LFB125
	.byte	0x4
	.4byte	.LCFI42-.LFB125
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI43-.LCFI42
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI44-.LCFI43
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE28:
.LSFDE30:
	.4byte	.LEFDE30-.LASFDE30
.LASFDE30:
	.4byte	.Lframe0
	.4byte	.LFB126
	.4byte	.LFE126-.LFB126
	.byte	0x4
	.4byte	.LCFI45-.LFB126
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI46-.LCFI45
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI47-.LCFI46
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE30:
.LSFDE32:
	.4byte	.LEFDE32-.LASFDE32
.LASFDE32:
	.4byte	.Lframe0
	.4byte	.LFB127
	.4byte	.LFE127-.LFB127
	.byte	0x4
	.4byte	.LCFI48-.LFB127
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI49-.LCFI48
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI50-.LCFI49
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE32:
.LSFDE34:
	.4byte	.LEFDE34-.LASFDE34
.LASFDE34:
	.4byte	.Lframe0
	.4byte	.LFB128
	.4byte	.LFE128-.LFB128
	.byte	0x4
	.4byte	.LCFI51-.LFB128
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI52-.LCFI51
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI53-.LCFI52
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE34:
.LSFDE36:
	.4byte	.LEFDE36-.LASFDE36
.LASFDE36:
	.4byte	.Lframe0
	.4byte	.LFB129
	.4byte	.LFE129-.LFB129
	.byte	0x4
	.4byte	.LCFI54-.LFB129
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI55-.LCFI54
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI56-.LCFI55
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE36:
.LSFDE38:
	.4byte	.LEFDE38-.LASFDE38
.LASFDE38:
	.4byte	.Lframe0
	.4byte	.LFB130
	.4byte	.LFE130-.LFB130
	.byte	0x4
	.4byte	.LCFI57-.LFB130
	.byte	0xe
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI58-.LCFI57
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI59-.LCFI58
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE38:
.LSFDE40:
	.4byte	.LEFDE40-.LASFDE40
.LASFDE40:
	.4byte	.Lframe0
	.4byte	.LFB131
	.4byte	.LFE131-.LFB131
	.byte	0x4
	.4byte	.LCFI60-.LFB131
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI61-.LCFI60
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI62-.LCFI61
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE40:
.LSFDE42:
	.4byte	.LEFDE42-.LASFDE42
.LASFDE42:
	.4byte	.Lframe0
	.4byte	.LFB132
	.4byte	.LFE132-.LFB132
	.byte	0x4
	.4byte	.LCFI63-.LFB132
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI64-.LCFI63
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI65-.LCFI64
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE42:
.LSFDE44:
	.4byte	.LEFDE44-.LASFDE44
.LASFDE44:
	.4byte	.Lframe0
	.4byte	.LFB133
	.4byte	.LFE133-.LFB133
	.byte	0x4
	.4byte	.LCFI66-.LFB133
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI67-.LCFI66
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI68-.LCFI67
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE44:
.LSFDE46:
	.4byte	.LEFDE46-.LASFDE46
.LASFDE46:
	.4byte	.Lframe0
	.4byte	.LFB134
	.4byte	.LFE134-.LFB134
	.byte	0x4
	.4byte	.LCFI69-.LFB134
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI70-.LCFI69
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI71-.LCFI70
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE46:
.LSFDE48:
	.4byte	.LEFDE48-.LASFDE48
.LASFDE48:
	.4byte	.Lframe0
	.4byte	.LFB135
	.4byte	.LFE135-.LFB135
	.byte	0x4
	.4byte	.LCFI72-.LFB135
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI73-.LCFI72
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI74-.LCFI73
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE48:
.LSFDE50:
	.4byte	.LEFDE50-.LASFDE50
.LASFDE50:
	.4byte	.Lframe0
	.4byte	.LFB136
	.4byte	.LFE136-.LFB136
	.byte	0x4
	.4byte	.LCFI75-.LFB136
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI76-.LCFI75
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI77-.LCFI76
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE50:
.LSFDE52:
	.4byte	.LEFDE52-.LASFDE52
.LASFDE52:
	.4byte	.Lframe0
	.4byte	.LFB137
	.4byte	.LFE137-.LFB137
	.byte	0x4
	.4byte	.LCFI78-.LFB137
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI79-.LCFI78
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI80-.LCFI79
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE52:
.LSFDE54:
	.4byte	.LEFDE54-.LASFDE54
.LASFDE54:
	.4byte	.Lframe0
	.4byte	.LFB138
	.4byte	.LFE138-.LFB138
	.byte	0x4
	.4byte	.LCFI81-.LFB138
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI82-.LCFI81
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI83-.LCFI82
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE54:
.LSFDE56:
	.4byte	.LEFDE56-.LASFDE56
.LASFDE56:
	.4byte	.Lframe0
	.4byte	.LFB139
	.4byte	.LFE139-.LFB139
	.byte	0x4
	.4byte	.LCFI84-.LFB139
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI85-.LCFI84
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI86-.LCFI85
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE56:
.LSFDE58:
	.4byte	.LEFDE58-.LASFDE58
.LASFDE58:
	.4byte	.Lframe0
	.4byte	.LFB140
	.4byte	.LFE140-.LFB140
	.byte	0x4
	.4byte	.LCFI87-.LFB140
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI88-.LCFI87
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI89-.LCFI88
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE58:
.LSFDE60:
	.4byte	.LEFDE60-.LASFDE60
.LASFDE60:
	.4byte	.Lframe0
	.4byte	.LFB141
	.4byte	.LFE141-.LFB141
	.byte	0x4
	.4byte	.LCFI90-.LFB141
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI91-.LCFI90
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI92-.LCFI91
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE60:
.LSFDE62:
	.4byte	.LEFDE62-.LASFDE62
.LASFDE62:
	.4byte	.Lframe0
	.4byte	.LFB142
	.4byte	.LFE142-.LFB142
	.byte	0x4
	.4byte	.LCFI93-.LFB142
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI94-.LCFI93
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI95-.LCFI94
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE62:
.LSFDE64:
	.4byte	.LEFDE64-.LASFDE64
.LASFDE64:
	.4byte	.Lframe0
	.4byte	.LFB143
	.4byte	.LFE143-.LFB143
	.byte	0x4
	.4byte	.LCFI96-.LFB143
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI97-.LCFI96
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI98-.LCFI97
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE64:
.LSFDE66:
	.4byte	.LEFDE66-.LASFDE66
.LASFDE66:
	.4byte	.Lframe0
	.4byte	.LFB144
	.4byte	.LFE144-.LFB144
	.byte	0x4
	.4byte	.LCFI99-.LFB144
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI100-.LCFI99
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI101-.LCFI100
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE66:
.LSFDE68:
	.4byte	.LEFDE68-.LASFDE68
.LASFDE68:
	.4byte	.Lframe0
	.4byte	.LFB145
	.4byte	.LFE145-.LFB145
	.byte	0x4
	.4byte	.LCFI102-.LFB145
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI103-.LCFI102
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI104-.LCFI103
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE68:
.LSFDE70:
	.4byte	.LEFDE70-.LASFDE70
.LASFDE70:
	.4byte	.Lframe0
	.4byte	.LFB146
	.4byte	.LFE146-.LFB146
	.byte	0x4
	.4byte	.LCFI105-.LFB146
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI106-.LCFI105
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI107-.LCFI106
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE70:
.LSFDE72:
	.4byte	.LEFDE72-.LASFDE72
.LASFDE72:
	.4byte	.Lframe0
	.4byte	.LFB147
	.4byte	.LFE147-.LFB147
	.byte	0x4
	.4byte	.LCFI108-.LFB147
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI109-.LCFI108
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI110-.LCFI109
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE72:
.LSFDE74:
	.4byte	.LEFDE74-.LASFDE74
.LASFDE74:
	.4byte	.Lframe0
	.4byte	.LFB148
	.4byte	.LFE148-.LFB148
	.byte	0x4
	.4byte	.LCFI111-.LFB148
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI112-.LCFI111
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI113-.LCFI112
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE74:
.LSFDE76:
	.4byte	.LEFDE76-.LASFDE76
.LASFDE76:
	.4byte	.Lframe0
	.4byte	.LFB149
	.4byte	.LFE149-.LFB149
	.byte	0x4
	.4byte	.LCFI114-.LFB149
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI115-.LCFI114
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI116-.LCFI115
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE76:
.LSFDE78:
	.4byte	.LEFDE78-.LASFDE78
.LASFDE78:
	.4byte	.Lframe0
	.4byte	.LFB150
	.4byte	.LFE150-.LFB150
	.byte	0x4
	.4byte	.LCFI117-.LFB150
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI118-.LCFI117
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI119-.LCFI118
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE78:
.LSFDE80:
	.4byte	.LEFDE80-.LASFDE80
.LASFDE80:
	.4byte	.Lframe0
	.4byte	.LFB151
	.4byte	.LFE151-.LFB151
	.byte	0x4
	.4byte	.LCFI120-.LFB151
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI121-.LCFI120
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI122-.LCFI121
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE80:
.LSFDE82:
	.4byte	.LEFDE82-.LASFDE82
.LASFDE82:
	.4byte	.Lframe0
	.4byte	.LFB152
	.4byte	.LFE152-.LFB152
	.byte	0x4
	.4byte	.LCFI123-.LFB152
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI124-.LCFI123
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI125-.LCFI124
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE82:
.LSFDE84:
	.4byte	.LEFDE84-.LASFDE84
.LASFDE84:
	.4byte	.Lframe0
	.4byte	.LFB153
	.4byte	.LFE153-.LFB153
	.byte	0x4
	.4byte	.LCFI126-.LFB153
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI127-.LCFI126
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI128-.LCFI127
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE84:
.LSFDE86:
	.4byte	.LEFDE86-.LASFDE86
.LASFDE86:
	.4byte	.Lframe0
	.4byte	.LFB154
	.4byte	.LFE154-.LFB154
	.byte	0x4
	.4byte	.LCFI129-.LFB154
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI130-.LCFI129
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI131-.LCFI130
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE86:
.LSFDE88:
	.4byte	.LEFDE88-.LASFDE88
.LASFDE88:
	.4byte	.Lframe0
	.4byte	.LFB155
	.4byte	.LFE155-.LFB155
	.byte	0x4
	.4byte	.LCFI132-.LFB155
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI133-.LCFI132
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI134-.LCFI133
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE88:
.LSFDE90:
	.4byte	.LEFDE90-.LASFDE90
.LASFDE90:
	.4byte	.Lframe0
	.4byte	.LFB156
	.4byte	.LFE156-.LFB156
	.byte	0x4
	.4byte	.LCFI135-.LFB156
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI136-.LCFI135
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI137-.LCFI136
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE90:
.LSFDE92:
	.4byte	.LEFDE92-.LASFDE92
.LASFDE92:
	.4byte	.Lframe0
	.4byte	.LFB157
	.4byte	.LFE157-.LFB157
	.byte	0x4
	.4byte	.LCFI138-.LFB157
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI139-.LCFI138
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI140-.LCFI139
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE92:
.LSFDE94:
	.4byte	.LEFDE94-.LASFDE94
.LASFDE94:
	.4byte	.Lframe0
	.4byte	.LFB158
	.4byte	.LFE158-.LFB158
	.byte	0x4
	.4byte	.LCFI141-.LFB158
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI142-.LCFI141
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI143-.LCFI142
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE94:
.LSFDE96:
	.4byte	.LEFDE96-.LASFDE96
.LASFDE96:
	.4byte	.Lframe0
	.4byte	.LFB159
	.4byte	.LFE159-.LFB159
	.byte	0x4
	.4byte	.LCFI144-.LFB159
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI145-.LCFI144
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI146-.LCFI145
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE96:
.LSFDE98:
	.4byte	.LEFDE98-.LASFDE98
.LASFDE98:
	.4byte	.Lframe0
	.4byte	.LFB160
	.4byte	.LFE160-.LFB160
	.byte	0x4
	.4byte	.LCFI147-.LFB160
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI148-.LCFI147
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI149-.LCFI148
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE98:
.LSFDE100:
	.4byte	.LEFDE100-.LASFDE100
.LASFDE100:
	.4byte	.Lframe0
	.4byte	.LFB161
	.4byte	.LFE161-.LFB161
	.byte	0x4
	.4byte	.LCFI150-.LFB161
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI151-.LCFI150
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI152-.LCFI151
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE100:
.LSFDE102:
	.4byte	.LEFDE102-.LASFDE102
.LASFDE102:
	.4byte	.Lframe0
	.4byte	.LFB162
	.4byte	.LFE162-.LFB162
	.byte	0x4
	.4byte	.LCFI153-.LFB162
	.byte	0xe
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI154-.LCFI153
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI155-.LCFI154
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE102:
.LSFDE104:
	.4byte	.LEFDE104-.LASFDE104
.LASFDE104:
	.4byte	.Lframe0
	.4byte	.LFB163
	.4byte	.LFE163-.LFB163
	.byte	0x4
	.4byte	.LCFI156-.LFB163
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI157-.LCFI156
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI158-.LCFI157
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE104:
.LSFDE106:
	.4byte	.LEFDE106-.LASFDE106
.LASFDE106:
	.4byte	.Lframe0
	.4byte	.LFB164
	.4byte	.LFE164-.LFB164
	.byte	0x4
	.4byte	.LCFI159-.LFB164
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI160-.LCFI159
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI161-.LCFI160
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE106:
.LSFDE108:
	.4byte	.LEFDE108-.LASFDE108
.LASFDE108:
	.4byte	.Lframe0
	.4byte	.LFB165
	.4byte	.LFE165-.LFB165
	.byte	0x4
	.4byte	.LCFI162-.LFB165
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI163-.LCFI162
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI164-.LCFI163
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE108:
.LSFDE110:
	.4byte	.LEFDE110-.LASFDE110
.LASFDE110:
	.4byte	.Lframe0
	.4byte	.LFB166
	.4byte	.LFE166-.LFB166
	.byte	0x4
	.4byte	.LCFI165-.LFB166
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI166-.LCFI165
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI167-.LCFI166
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE110:
.LSFDE112:
	.4byte	.LEFDE112-.LASFDE112
.LASFDE112:
	.4byte	.Lframe0
	.4byte	.LFB167
	.4byte	.LFE167-.LFB167
	.byte	0x4
	.4byte	.LCFI168-.LFB167
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI169-.LCFI168
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI170-.LCFI169
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE112:
.LSFDE114:
	.4byte	.LEFDE114-.LASFDE114
.LASFDE114:
	.4byte	.Lframe0
	.4byte	.LFB168
	.4byte	.LFE168-.LFB168
	.byte	0x4
	.4byte	.LCFI171-.LFB168
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI172-.LCFI171
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI173-.LCFI172
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE114:
.LSFDE116:
	.4byte	.LEFDE116-.LASFDE116
.LASFDE116:
	.4byte	.Lframe0
	.4byte	.LFB169
	.4byte	.LFE169-.LFB169
	.byte	0x4
	.4byte	.LCFI174-.LFB169
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI175-.LCFI174
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI176-.LCFI175
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE116:
.LSFDE118:
	.4byte	.LEFDE118-.LASFDE118
.LASFDE118:
	.4byte	.Lframe0
	.4byte	.LFB170
	.4byte	.LFE170-.LFB170
	.byte	0x4
	.4byte	.LCFI177-.LFB170
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI178-.LCFI177
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI179-.LCFI178
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE118:
.LSFDE120:
	.4byte	.LEFDE120-.LASFDE120
.LASFDE120:
	.4byte	.Lframe0
	.4byte	.LFB171
	.4byte	.LFE171-.LFB171
	.byte	0x4
	.4byte	.LCFI180-.LFB171
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI181-.LCFI180
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI182-.LCFI181
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE120:
.LSFDE122:
	.4byte	.LEFDE122-.LASFDE122
.LASFDE122:
	.4byte	.Lframe0
	.4byte	.LFB172
	.4byte	.LFE172-.LFB172
	.byte	0x4
	.4byte	.LCFI183-.LFB172
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI184-.LCFI183
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI185-.LCFI184
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE122:
.LSFDE124:
	.4byte	.LEFDE124-.LASFDE124
.LASFDE124:
	.4byte	.Lframe0
	.4byte	.LFB173
	.4byte	.LFE173-.LFB173
	.byte	0x4
	.4byte	.LCFI186-.LFB173
	.byte	0xe
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI187-.LCFI186
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI188-.LCFI187
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE124:
.LSFDE126:
	.4byte	.LEFDE126-.LASFDE126
.LASFDE126:
	.4byte	.Lframe0
	.4byte	.LFB174
	.4byte	.LFE174-.LFB174
	.byte	0x4
	.4byte	.LCFI189-.LFB174
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI190-.LCFI189
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI191-.LCFI190
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE126:
.LSFDE128:
	.4byte	.LEFDE128-.LASFDE128
.LASFDE128:
	.4byte	.Lframe0
	.4byte	.LFB175
	.4byte	.LFE175-.LFB175
	.byte	0x4
	.4byte	.LCFI192-.LFB175
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI193-.LCFI192
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI194-.LCFI193
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE128:
.LSFDE130:
	.4byte	.LEFDE130-.LASFDE130
.LASFDE130:
	.4byte	.Lframe0
	.4byte	.LFB176
	.4byte	.LFE176-.LFB176
	.byte	0x4
	.4byte	.LCFI195-.LFB176
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI196-.LCFI195
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI197-.LCFI196
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE130:
.LSFDE132:
	.4byte	.LEFDE132-.LASFDE132
.LASFDE132:
	.4byte	.Lframe0
	.4byte	.LFB177
	.4byte	.LFE177-.LFB177
	.byte	0x4
	.4byte	.LCFI198-.LFB177
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI199-.LCFI198
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI200-.LCFI199
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE132:
.LSFDE134:
	.4byte	.LEFDE134-.LASFDE134
.LASFDE134:
	.4byte	.Lframe0
	.4byte	.LFB178
	.4byte	.LFE178-.LFB178
	.byte	0x4
	.4byte	.LCFI201-.LFB178
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI202-.LCFI201
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI203-.LCFI202
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE134:
.LSFDE136:
	.4byte	.LEFDE136-.LASFDE136
.LASFDE136:
	.4byte	.Lframe0
	.4byte	.LFB179
	.4byte	.LFE179-.LFB179
	.byte	0x4
	.4byte	.LCFI204-.LFB179
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI205-.LCFI204
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI206-.LCFI205
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE136:
.LSFDE138:
	.4byte	.LEFDE138-.LASFDE138
.LASFDE138:
	.4byte	.Lframe0
	.4byte	.LFB180
	.4byte	.LFE180-.LFB180
	.byte	0x4
	.4byte	.LCFI207-.LFB180
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI208-.LCFI207
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI209-.LCFI208
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE138:
.LSFDE140:
	.4byte	.LEFDE140-.LASFDE140
.LASFDE140:
	.4byte	.Lframe0
	.4byte	.LFB181
	.4byte	.LFE181-.LFB181
	.byte	0x4
	.4byte	.LCFI210-.LFB181
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI211-.LCFI210
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI212-.LCFI211
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE140:
.LSFDE142:
	.4byte	.LEFDE142-.LASFDE142
.LASFDE142:
	.4byte	.Lframe0
	.4byte	.LFB182
	.4byte	.LFE182-.LFB182
	.byte	0x4
	.4byte	.LCFI213-.LFB182
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI214-.LCFI213
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI215-.LCFI214
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE142:
.LSFDE144:
	.4byte	.LEFDE144-.LASFDE144
.LASFDE144:
	.4byte	.Lframe0
	.4byte	.LFB183
	.4byte	.LFE183-.LFB183
	.byte	0x4
	.4byte	.LCFI216-.LFB183
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI217-.LCFI216
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI218-.LCFI217
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE144:
.LSFDE146:
	.4byte	.LEFDE146-.LASFDE146
.LASFDE146:
	.4byte	.Lframe0
	.4byte	.LFB184
	.4byte	.LFE184-.LFB184
	.byte	0x4
	.4byte	.LCFI219-.LFB184
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI220-.LCFI219
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI221-.LCFI220
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE146:
.LSFDE148:
	.4byte	.LEFDE148-.LASFDE148
.LASFDE148:
	.4byte	.Lframe0
	.4byte	.LFB185
	.4byte	.LFE185-.LFB185
	.byte	0x4
	.4byte	.LCFI222-.LFB185
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI223-.LCFI222
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI224-.LCFI223
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE148:
.LSFDE150:
	.4byte	.LEFDE150-.LASFDE150
.LASFDE150:
	.4byte	.Lframe0
	.4byte	.LFB186
	.4byte	.LFE186-.LFB186
	.byte	0x4
	.4byte	.LCFI225-.LFB186
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI226-.LCFI225
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI227-.LCFI226
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE150:
.LSFDE152:
	.4byte	.LEFDE152-.LASFDE152
.LASFDE152:
	.4byte	.Lframe0
	.4byte	.LFB187
	.4byte	.LFE187-.LFB187
	.byte	0x4
	.4byte	.LCFI228-.LFB187
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI229-.LCFI228
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI230-.LCFI229
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE152:
.LSFDE154:
	.4byte	.LEFDE154-.LASFDE154
.LASFDE154:
	.4byte	.Lframe0
	.4byte	.LFB188
	.4byte	.LFE188-.LFB188
	.byte	0x4
	.4byte	.LCFI231-.LFB188
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI232-.LCFI231
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI233-.LCFI232
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE154:
.LSFDE156:
	.4byte	.LEFDE156-.LASFDE156
.LASFDE156:
	.4byte	.Lframe0
	.4byte	.LFB189
	.4byte	.LFE189-.LFB189
	.byte	0x4
	.4byte	.LCFI234-.LFB189
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI235-.LCFI234
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.4byte	.LCFI236-.LCFI235
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE156:
.LSFDE158:
	.4byte	.LEFDE158-.LASFDE158
.LASFDE158:
	.4byte	.Lframe0
	.4byte	.LFB190
	.4byte	.LFE190-.LFB190
	.byte	0x4
	.4byte	.LCFI237-.LFB190
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI238-.LCFI237
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI239-.LCFI238
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE158:
.LSFDE160:
	.4byte	.LEFDE160-.LASFDE160
.LASFDE160:
	.4byte	.Lframe0
	.4byte	.LFB191
	.4byte	.LFE191-.LFB191
	.byte	0x4
	.4byte	.LCFI240-.LFB191
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI241-.LCFI240
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI242-.LCFI241
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE160:
.LSFDE162:
	.4byte	.LEFDE162-.LASFDE162
.LASFDE162:
	.4byte	.Lframe0
	.4byte	.LFB192
	.4byte	.LFE192-.LFB192
	.byte	0x4
	.4byte	.LCFI243-.LFB192
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI244-.LCFI243
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI245-.LCFI244
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE162:
.LSFDE164:
	.4byte	.LEFDE164-.LASFDE164
.LASFDE164:
	.4byte	.Lframe0
	.4byte	.LFB193
	.4byte	.LFE193-.LFB193
	.byte	0x4
	.4byte	.LCFI246-.LFB193
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI247-.LCFI246
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI248-.LCFI247
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE164:
.LSFDE166:
	.4byte	.LEFDE166-.LASFDE166
.LASFDE166:
	.4byte	.Lframe0
	.4byte	.LFB194
	.4byte	.LFE194-.LFB194
	.byte	0x4
	.4byte	.LCFI249-.LFB194
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI250-.LCFI249
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI251-.LCFI250
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE166:
.LSFDE168:
	.4byte	.LEFDE168-.LASFDE168
.LASFDE168:
	.4byte	.Lframe0
	.4byte	.LFB195
	.4byte	.LFE195-.LFB195
	.byte	0x4
	.4byte	.LCFI252-.LFB195
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI253-.LCFI252
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.4byte	.LCFI254-.LCFI253
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE168:
.LSFDE170:
	.4byte	.LEFDE170-.LASFDE170
.LASFDE170:
	.4byte	.Lframe0
	.4byte	.LFB196
	.4byte	.LFE196-.LFB196
	.byte	0x4
	.4byte	.LCFI255-.LFB196
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI256-.LCFI255
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.4byte	.LCFI257-.LCFI256
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE170:
.LSFDE172:
	.4byte	.LEFDE172-.LASFDE172
.LASFDE172:
	.4byte	.Lframe0
	.4byte	.LFB197
	.4byte	.LFE197-.LFB197
	.byte	0x4
	.4byte	.LCFI258-.LFB197
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI259-.LCFI258
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI260-.LCFI259
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE172:
.LSFDE174:
	.4byte	.LEFDE174-.LASFDE174
.LASFDE174:
	.4byte	.Lframe0
	.4byte	.LFB198
	.4byte	.LFE198-.LFB198
	.byte	0x4
	.4byte	.LCFI261-.LFB198
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI262-.LCFI261
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI263-.LCFI262
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE174:
.LSFDE176:
	.4byte	.LEFDE176-.LASFDE176
.LASFDE176:
	.4byte	.Lframe0
	.4byte	.LFB199
	.4byte	.LFE199-.LFB199
	.byte	0x4
	.4byte	.LCFI264-.LFB199
	.byte	0xe
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI265-.LCFI264
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.4byte	.LCFI266-.LCFI265
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE176:
.LSFDE178:
	.4byte	.LEFDE178-.LASFDE178
.LASFDE178:
	.4byte	.Lframe0
	.4byte	.LFB200
	.4byte	.LFE200-.LFB200
	.byte	0x4
	.4byte	.LCFI267-.LFB200
	.byte	0xe
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI268-.LCFI267
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.4byte	.LCFI269-.LCFI268
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE178:
.LSFDE180:
	.4byte	.LEFDE180-.LASFDE180
.LASFDE180:
	.4byte	.Lframe0
	.4byte	.LFB201
	.4byte	.LFE201-.LFB201
	.byte	0x4
	.4byte	.LCFI270-.LFB201
	.byte	0xe
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI271-.LCFI270
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.4byte	.LCFI272-.LCFI271
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE180:
.LSFDE182:
	.4byte	.LEFDE182-.LASFDE182
.LASFDE182:
	.4byte	.Lframe0
	.4byte	.LFB202
	.4byte	.LFE202-.LFB202
	.byte	0x4
	.4byte	.LCFI273-.LFB202
	.byte	0xe
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI274-.LCFI273
	.byte	0xe
	.uleb128 0x20
	.byte	0x4
	.4byte	.LCFI275-.LCFI274
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE182:
	.text
.Letext0:
	.file 2 "/usr/share/crossworks_for_arm_3.3/include/stdint.h"
	.file 3 "../../../chip/stm32/stm32f407/lib/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
	.file 4 "../../../chip/stm32/stm32f407/lib/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
	.file 5 "../../../chip/stm32/stm32f407/lib/CMSIS/Include/core_cm4.h"
	.section	.debug_info,"",%progbits
.Ldebug_info0:
	.4byte	0x2079
	.2byte	0x4
	.4byte	.Ldebug_abbrev0
	.byte	0x4
	.uleb128 0x1
	.4byte	.LASF225
	.byte	0x1
	.4byte	.LASF226
	.4byte	.LASF227
	.4byte	.Ldebug_ranges0+0
	.4byte	0
	.4byte	.Ldebug_line0
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.4byte	.LASF0
	.uleb128 0x3
	.4byte	.LASF3
	.byte	0x2
	.byte	0xf
	.4byte	0x37
	.uleb128 0x2
	.byte	0x1
	.byte	0x8
	.4byte	.LASF1
	.uleb128 0x2
	.byte	0x2
	.byte	0x5
	.4byte	.LASF2
	.uleb128 0x3
	.4byte	.LASF4
	.byte	0x2
	.byte	0x15
	.4byte	0x50
	.uleb128 0x2
	.byte	0x2
	.byte	0x7
	.4byte	.LASF5
	.uleb128 0x3
	.4byte	.LASF6
	.byte	0x2
	.byte	0x16
	.4byte	0x62
	.uleb128 0x4
	.byte	0x4
	.byte	0x5
	.ascii	"int\000"
	.uleb128 0x3
	.4byte	.LASF7
	.byte	0x2
	.byte	0x17
	.4byte	0x74
	.uleb128 0x2
	.byte	0x4
	.byte	0x7
	.4byte	.LASF8
	.uleb128 0x2
	.byte	0x8
	.byte	0x5
	.4byte	.LASF9
	.uleb128 0x2
	.byte	0x8
	.byte	0x7
	.4byte	.LASF10
	.uleb128 0x2
	.byte	0x4
	.byte	0x7
	.4byte	.LASF11
	.uleb128 0x5
	.4byte	0x69
	.uleb128 0x5
	.4byte	0x45
	.uleb128 0x5
	.4byte	0x57
	.uleb128 0x6
	.byte	0x1
	.byte	0x3
	.2byte	0x12d
	.4byte	0xb5
	.uleb128 0x7
	.4byte	.LASF12
	.sleb128 0
	.uleb128 0x8
	.ascii	"SET\000"
	.sleb128 1
	.byte	0
	.uleb128 0x9
	.4byte	.LASF13
	.byte	0x3
	.2byte	0x12d
	.4byte	0x9f
	.uleb128 0x9
	.4byte	.LASF14
	.byte	0x3
	.2byte	0x12d
	.4byte	0x9f
	.uleb128 0x6
	.byte	0x1
	.byte	0x3
	.2byte	0x12f
	.4byte	0xe3
	.uleb128 0x7
	.4byte	.LASF15
	.sleb128 0
	.uleb128 0x7
	.4byte	.LASF16
	.sleb128 1
	.byte	0
	.uleb128 0x9
	.4byte	.LASF17
	.byte	0x3
	.2byte	0x12f
	.4byte	0xcd
	.uleb128 0xa
	.byte	0x54
	.byte	0x3
	.2byte	0x382
	.4byte	0x2cb
	.uleb128 0xb
	.ascii	"CR1\000"
	.byte	0x3
	.2byte	0x384
	.4byte	0x95
	.byte	0
	.uleb128 0xc
	.4byte	.LASF18
	.byte	0x3
	.2byte	0x385
	.4byte	0x45
	.byte	0x2
	.uleb128 0xb
	.ascii	"CR2\000"
	.byte	0x3
	.2byte	0x386
	.4byte	0x95
	.byte	0x4
	.uleb128 0xc
	.4byte	.LASF19
	.byte	0x3
	.2byte	0x387
	.4byte	0x45
	.byte	0x6
	.uleb128 0xc
	.4byte	.LASF20
	.byte	0x3
	.2byte	0x388
	.4byte	0x95
	.byte	0x8
	.uleb128 0xc
	.4byte	.LASF21
	.byte	0x3
	.2byte	0x389
	.4byte	0x45
	.byte	0xa
	.uleb128 0xc
	.4byte	.LASF22
	.byte	0x3
	.2byte	0x38a
	.4byte	0x95
	.byte	0xc
	.uleb128 0xc
	.4byte	.LASF23
	.byte	0x3
	.2byte	0x38b
	.4byte	0x45
	.byte	0xe
	.uleb128 0xb
	.ascii	"SR\000"
	.byte	0x3
	.2byte	0x38c
	.4byte	0x95
	.byte	0x10
	.uleb128 0xc
	.4byte	.LASF24
	.byte	0x3
	.2byte	0x38d
	.4byte	0x45
	.byte	0x12
	.uleb128 0xb
	.ascii	"EGR\000"
	.byte	0x3
	.2byte	0x38e
	.4byte	0x95
	.byte	0x14
	.uleb128 0xc
	.4byte	.LASF25
	.byte	0x3
	.2byte	0x38f
	.4byte	0x45
	.byte	0x16
	.uleb128 0xc
	.4byte	.LASF26
	.byte	0x3
	.2byte	0x390
	.4byte	0x95
	.byte	0x18
	.uleb128 0xc
	.4byte	.LASF27
	.byte	0x3
	.2byte	0x391
	.4byte	0x45
	.byte	0x1a
	.uleb128 0xc
	.4byte	.LASF28
	.byte	0x3
	.2byte	0x392
	.4byte	0x95
	.byte	0x1c
	.uleb128 0xc
	.4byte	.LASF29
	.byte	0x3
	.2byte	0x393
	.4byte	0x45
	.byte	0x1e
	.uleb128 0xc
	.4byte	.LASF30
	.byte	0x3
	.2byte	0x394
	.4byte	0x95
	.byte	0x20
	.uleb128 0xc
	.4byte	.LASF31
	.byte	0x3
	.2byte	0x395
	.4byte	0x45
	.byte	0x22
	.uleb128 0xb
	.ascii	"CNT\000"
	.byte	0x3
	.2byte	0x396
	.4byte	0x90
	.byte	0x24
	.uleb128 0xb
	.ascii	"PSC\000"
	.byte	0x3
	.2byte	0x397
	.4byte	0x95
	.byte	0x28
	.uleb128 0xc
	.4byte	.LASF32
	.byte	0x3
	.2byte	0x398
	.4byte	0x45
	.byte	0x2a
	.uleb128 0xb
	.ascii	"ARR\000"
	.byte	0x3
	.2byte	0x399
	.4byte	0x90
	.byte	0x2c
	.uleb128 0xb
	.ascii	"RCR\000"
	.byte	0x3
	.2byte	0x39a
	.4byte	0x95
	.byte	0x30
	.uleb128 0xc
	.4byte	.LASF33
	.byte	0x3
	.2byte	0x39b
	.4byte	0x45
	.byte	0x32
	.uleb128 0xc
	.4byte	.LASF34
	.byte	0x3
	.2byte	0x39c
	.4byte	0x90
	.byte	0x34
	.uleb128 0xc
	.4byte	.LASF35
	.byte	0x3
	.2byte	0x39d
	.4byte	0x90
	.byte	0x38
	.uleb128 0xc
	.4byte	.LASF36
	.byte	0x3
	.2byte	0x39e
	.4byte	0x90
	.byte	0x3c
	.uleb128 0xc
	.4byte	.LASF37
	.byte	0x3
	.2byte	0x39f
	.4byte	0x90
	.byte	0x40
	.uleb128 0xc
	.4byte	.LASF38
	.byte	0x3
	.2byte	0x3a0
	.4byte	0x95
	.byte	0x44
	.uleb128 0xc
	.4byte	.LASF39
	.byte	0x3
	.2byte	0x3a1
	.4byte	0x45
	.byte	0x46
	.uleb128 0xb
	.ascii	"DCR\000"
	.byte	0x3
	.2byte	0x3a2
	.4byte	0x95
	.byte	0x48
	.uleb128 0xc
	.4byte	.LASF40
	.byte	0x3
	.2byte	0x3a3
	.4byte	0x45
	.byte	0x4a
	.uleb128 0xc
	.4byte	.LASF41
	.byte	0x3
	.2byte	0x3a4
	.4byte	0x95
	.byte	0x4c
	.uleb128 0xc
	.4byte	.LASF42
	.byte	0x3
	.2byte	0x3a5
	.4byte	0x45
	.byte	0x4e
	.uleb128 0xb
	.ascii	"OR\000"
	.byte	0x3
	.2byte	0x3a6
	.4byte	0x95
	.byte	0x50
	.uleb128 0xc
	.4byte	.LASF43
	.byte	0x3
	.2byte	0x3a7
	.4byte	0x45
	.byte	0x52
	.byte	0
	.uleb128 0x9
	.4byte	.LASF44
	.byte	0x3
	.2byte	0x3a8
	.4byte	0xef
	.uleb128 0x2
	.byte	0x4
	.byte	0x5
	.4byte	.LASF45
	.uleb128 0x2
	.byte	0x1
	.byte	0x8
	.4byte	.LASF46
	.uleb128 0xd
	.byte	0xc
	.byte	0x4
	.byte	0x37
	.4byte	0x32a
	.uleb128 0xe
	.4byte	.LASF47
	.byte	0x4
	.byte	0x39
	.4byte	0x45
	.byte	0
	.uleb128 0xe
	.4byte	.LASF48
	.byte	0x4
	.byte	0x3c
	.4byte	0x45
	.byte	0x2
	.uleb128 0xe
	.4byte	.LASF49
	.byte	0x4
	.byte	0x3f
	.4byte	0x69
	.byte	0x4
	.uleb128 0xe
	.4byte	.LASF50
	.byte	0x4
	.byte	0x43
	.4byte	0x45
	.byte	0x8
	.uleb128 0xe
	.4byte	.LASF51
	.byte	0x4
	.byte	0x46
	.4byte	0x2c
	.byte	0xa
	.byte	0
	.uleb128 0x3
	.4byte	.LASF52
	.byte	0x4
	.byte	0x4e
	.4byte	0x2e5
	.uleb128 0xd
	.byte	0x14
	.byte	0x4
	.byte	0x54
	.4byte	0x39e
	.uleb128 0xe
	.4byte	.LASF53
	.byte	0x4
	.byte	0x56
	.4byte	0x45
	.byte	0
	.uleb128 0xe
	.4byte	.LASF54
	.byte	0x4
	.byte	0x59
	.4byte	0x45
	.byte	0x2
	.uleb128 0xe
	.4byte	.LASF55
	.byte	0x4
	.byte	0x5c
	.4byte	0x45
	.byte	0x4
	.uleb128 0xe
	.4byte	.LASF56
	.byte	0x4
	.byte	0x60
	.4byte	0x69
	.byte	0x8
	.uleb128 0xe
	.4byte	.LASF57
	.byte	0x4
	.byte	0x63
	.4byte	0x45
	.byte	0xc
	.uleb128 0xe
	.4byte	.LASF58
	.byte	0x4
	.byte	0x66
	.4byte	0x45
	.byte	0xe
	.uleb128 0xe
	.4byte	.LASF59
	.byte	0x4
	.byte	0x6a
	.4byte	0x45
	.byte	0x10
	.uleb128 0xe
	.4byte	.LASF60
	.byte	0x4
	.byte	0x6e
	.4byte	0x45
	.byte	0x12
	.byte	0
	.uleb128 0x3
	.4byte	.LASF61
	.byte	0x4
	.byte	0x71
	.4byte	0x335
	.uleb128 0xd
	.byte	0xa
	.byte	0x4
	.byte	0x77
	.4byte	0x3ee
	.uleb128 0xe
	.4byte	.LASF62
	.byte	0x4
	.byte	0x7a
	.4byte	0x45
	.byte	0
	.uleb128 0xe
	.4byte	.LASF63
	.byte	0x4
	.byte	0x7d
	.4byte	0x45
	.byte	0x2
	.uleb128 0xe
	.4byte	.LASF64
	.byte	0x4
	.byte	0x80
	.4byte	0x45
	.byte	0x4
	.uleb128 0xe
	.4byte	.LASF65
	.byte	0x4
	.byte	0x83
	.4byte	0x45
	.byte	0x6
	.uleb128 0xe
	.4byte	.LASF66
	.byte	0x4
	.byte	0x86
	.4byte	0x45
	.byte	0x8
	.byte	0
	.uleb128 0x3
	.4byte	.LASF67
	.byte	0x4
	.byte	0x88
	.4byte	0x3a9
	.uleb128 0xd
	.byte	0xe
	.byte	0x4
	.byte	0x8f
	.4byte	0x456
	.uleb128 0xe
	.4byte	.LASF68
	.byte	0x4
	.byte	0x92
	.4byte	0x45
	.byte	0
	.uleb128 0xe
	.4byte	.LASF69
	.byte	0x4
	.byte	0x95
	.4byte	0x45
	.byte	0x2
	.uleb128 0xe
	.4byte	.LASF70
	.byte	0x4
	.byte	0x98
	.4byte	0x45
	.byte	0x4
	.uleb128 0xe
	.4byte	.LASF71
	.byte	0x4
	.byte	0x9b
	.4byte	0x45
	.byte	0x6
	.uleb128 0xe
	.4byte	.LASF72
	.byte	0x4
	.byte	0x9f
	.4byte	0x45
	.byte	0x8
	.uleb128 0xe
	.4byte	.LASF73
	.byte	0x4
	.byte	0xa2
	.4byte	0x45
	.byte	0xa
	.uleb128 0xe
	.4byte	.LASF74
	.byte	0x4
	.byte	0xa5
	.4byte	0x45
	.byte	0xc
	.byte	0
	.uleb128 0x3
	.4byte	.LASF75
	.byte	0x4
	.byte	0xa7
	.4byte	0x3f9
	.uleb128 0xf
	.4byte	.LASF76
	.byte	0x1
	.byte	0xc8
	.4byte	.LFB111
	.4byte	.LFE111-.LFB111
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x492
	.uleb128 0x10
	.4byte	.LASF78
	.byte	0x1
	.byte	0xc8
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x13
	.byte	0x4
	.4byte	0x2cb
	.uleb128 0x14
	.4byte	.LASF77
	.byte	0x1
	.2byte	0x120
	.4byte	.LFB112
	.4byte	.LFE112-.LFB112
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x4e9
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x120
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF79
	.byte	0x1
	.2byte	0x120
	.4byte	0x4e9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x16
	.4byte	.LASF86
	.byte	0x1
	.2byte	0x122
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x13
	.byte	0x4
	.4byte	0x32a
	.uleb128 0x17
	.4byte	.LASF81
	.byte	0x1
	.2byte	0x154
	.4byte	.LFB113
	.4byte	.LFE113-.LFB113
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x515
	.uleb128 0x15
	.4byte	.LASF79
	.byte	0x1
	.2byte	0x154
	.4byte	0x4e9
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0x14
	.4byte	.LASF82
	.byte	0x1
	.2byte	0x168
	.4byte	.LFB114
	.4byte	.LFE114-.LFB114
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x566
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x168
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF83
	.byte	0x1
	.2byte	0x168
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.uleb128 0x15
	.4byte	.LASF84
	.byte	0x1
	.2byte	0x168
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF85
	.byte	0x1
	.2byte	0x17f
	.4byte	.LFB115
	.4byte	.LFE115-.LFB115
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x5b7
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x17f
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF48
	.byte	0x1
	.2byte	0x17f
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x16
	.4byte	.LASF86
	.byte	0x1
	.2byte	0x181
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF87
	.byte	0x1
	.2byte	0x199
	.4byte	.LFB116
	.4byte	.LFE116-.LFB116
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x5f9
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x199
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF88
	.byte	0x1
	.2byte	0x199
	.4byte	0x69
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF89
	.byte	0x1
	.2byte	0x1a8
	.4byte	.LFB117
	.4byte	.LFE117-.LFB117
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x63b
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x1a8
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF90
	.byte	0x1
	.2byte	0x1a8
	.4byte	0x69
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x18
	.4byte	.LASF91
	.byte	0x1
	.2byte	0x1b6
	.4byte	0x69
	.4byte	.LFB118
	.4byte	.LFE118-.LFB118
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x672
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x1b6
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x18
	.4byte	.LASF92
	.byte	0x1
	.2byte	0x1c4
	.4byte	0x45
	.4byte	.LFB119
	.4byte	.LFE119-.LFB119
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x6a9
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x1c4
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF93
	.byte	0x1
	.2byte	0x1d4
	.4byte	.LFB120
	.4byte	.LFE120-.LFB120
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x6eb
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x1d4
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF94
	.byte	0x1
	.2byte	0x1d4
	.4byte	0xe3
	.uleb128 0x2
	.byte	0x91
	.sleb128 -13
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF95
	.byte	0x1
	.2byte	0x1f1
	.4byte	.LFB121
	.4byte	.LFE121-.LFB121
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x72d
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x1f1
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF96
	.byte	0x1
	.2byte	0x1f1
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF97
	.byte	0x1
	.2byte	0x20a
	.4byte	.LFB122
	.4byte	.LFE122-.LFB122
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x76f
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x20a
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF94
	.byte	0x1
	.2byte	0x20a
	.4byte	0xe3
	.uleb128 0x2
	.byte	0x91
	.sleb128 -13
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF98
	.byte	0x1
	.2byte	0x225
	.4byte	.LFB123
	.4byte	.LFE123-.LFB123
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x7b1
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x225
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF99
	.byte	0x1
	.2byte	0x225
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF100
	.byte	0x1
	.2byte	0x23c
	.4byte	.LFB124
	.4byte	.LFE124-.LFB124
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x7f3
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x23c
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF101
	.byte	0x1
	.2byte	0x23c
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF102
	.byte	0x1
	.2byte	0x250
	.4byte	.LFB125
	.4byte	.LFE125-.LFB125
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x835
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x250
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF94
	.byte	0x1
	.2byte	0x250
	.4byte	0xe3
	.uleb128 0x2
	.byte	0x91
	.sleb128 -13
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF103
	.byte	0x1
	.2byte	0x2a1
	.4byte	.LFB126
	.4byte	.LFE126-.LFB126
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x8a4
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x2a1
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF104
	.byte	0x1
	.2byte	0x2a1
	.4byte	0x8a4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x16
	.4byte	.LASF105
	.byte	0x1
	.2byte	0x2a3
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.uleb128 0x16
	.4byte	.LASF106
	.byte	0x1
	.2byte	0x2a3
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x16
	.4byte	.LASF107
	.byte	0x1
	.2byte	0x2a3
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x13
	.byte	0x4
	.4byte	0x39e
	.uleb128 0x14
	.4byte	.LASF108
	.byte	0x1
	.2byte	0x2f2
	.4byte	.LFB127
	.4byte	.LFE127-.LFB127
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x919
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x2f2
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF104
	.byte	0x1
	.2byte	0x2f2
	.4byte	0x8a4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x16
	.4byte	.LASF105
	.byte	0x1
	.2byte	0x2f4
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.uleb128 0x16
	.4byte	.LASF106
	.byte	0x1
	.2byte	0x2f4
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x16
	.4byte	.LASF107
	.byte	0x1
	.2byte	0x2f4
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF109
	.byte	0x1
	.2byte	0x343
	.4byte	.LFB128
	.4byte	.LFE128-.LFB128
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x988
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x343
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF104
	.byte	0x1
	.2byte	0x343
	.4byte	0x8a4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x16
	.4byte	.LASF105
	.byte	0x1
	.2byte	0x345
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.uleb128 0x16
	.4byte	.LASF106
	.byte	0x1
	.2byte	0x345
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x16
	.4byte	.LASF107
	.byte	0x1
	.2byte	0x345
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF110
	.byte	0x1
	.2byte	0x393
	.4byte	.LFB129
	.4byte	.LFE129-.LFB129
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x9f7
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x393
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF104
	.byte	0x1
	.2byte	0x393
	.4byte	0x8a4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x16
	.4byte	.LASF105
	.byte	0x1
	.2byte	0x395
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x16
	.4byte	.LASF106
	.byte	0x1
	.2byte	0x395
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.uleb128 0x16
	.4byte	.LASF107
	.byte	0x1
	.2byte	0x395
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x17
	.4byte	.LASF111
	.byte	0x1
	.2byte	0x3d2
	.4byte	.LFB130
	.4byte	.LFE130-.LFB130
	.uleb128 0x1
	.byte	0x9c
	.4byte	0xa1d
	.uleb128 0x15
	.4byte	.LASF104
	.byte	0x1
	.2byte	0x3d2
	.4byte	0x8a4
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0x14
	.4byte	.LASF112
	.byte	0x1
	.2byte	0x3f6
	.4byte	.LFB131
	.4byte	.LFE131-.LFB131
	.uleb128 0x1
	.byte	0x9c
	.4byte	0xa8c
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x3f6
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF62
	.byte	0x1
	.2byte	0x3f6
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x15
	.4byte	.LASF53
	.byte	0x1
	.2byte	0x3f6
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x19
	.ascii	"tmp\000"
	.byte	0x1
	.2byte	0x3f8
	.4byte	0x69
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x16
	.4byte	.LASF113
	.byte	0x1
	.2byte	0x3f9
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF114
	.byte	0x1
	.2byte	0x424
	.4byte	.LFB132
	.4byte	.LFE132-.LFB132
	.uleb128 0x1
	.byte	0x9c
	.4byte	0xace
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x424
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF115
	.byte	0x1
	.2byte	0x424
	.4byte	0x69
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF116
	.byte	0x1
	.2byte	0x434
	.4byte	.LFB133
	.4byte	.LFE133-.LFB133
	.uleb128 0x1
	.byte	0x9c
	.4byte	0xb10
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x434
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF117
	.byte	0x1
	.2byte	0x434
	.4byte	0x69
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF118
	.byte	0x1
	.2byte	0x443
	.4byte	.LFB134
	.4byte	.LFE134-.LFB134
	.uleb128 0x1
	.byte	0x9c
	.4byte	0xb52
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x443
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF119
	.byte	0x1
	.2byte	0x443
	.4byte	0x69
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF120
	.byte	0x1
	.2byte	0x452
	.4byte	.LFB135
	.4byte	.LFE135-.LFB135
	.uleb128 0x1
	.byte	0x9c
	.4byte	0xb94
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x452
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF121
	.byte	0x1
	.2byte	0x452
	.4byte	0x69
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF122
	.byte	0x1
	.2byte	0x464
	.4byte	.LFB136
	.4byte	.LFE136-.LFB136
	.uleb128 0x1
	.byte	0x9c
	.4byte	0xbe5
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x464
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF123
	.byte	0x1
	.2byte	0x464
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x16
	.4byte	.LASF124
	.byte	0x1
	.2byte	0x466
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF125
	.byte	0x1
	.2byte	0x481
	.4byte	.LFB137
	.4byte	.LFE137-.LFB137
	.uleb128 0x1
	.byte	0x9c
	.4byte	0xc36
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x481
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF123
	.byte	0x1
	.2byte	0x481
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x16
	.4byte	.LASF124
	.byte	0x1
	.2byte	0x483
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF126
	.byte	0x1
	.2byte	0x49d
	.4byte	.LFB138
	.4byte	.LFE138-.LFB138
	.uleb128 0x1
	.byte	0x9c
	.4byte	0xc87
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x49d
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF123
	.byte	0x1
	.2byte	0x49d
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x16
	.4byte	.LASF127
	.byte	0x1
	.2byte	0x49f
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF128
	.byte	0x1
	.2byte	0x4ba
	.4byte	.LFB139
	.4byte	.LFE139-.LFB139
	.uleb128 0x1
	.byte	0x9c
	.4byte	0xcd8
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x4ba
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF123
	.byte	0x1
	.2byte	0x4ba
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x16
	.4byte	.LASF127
	.byte	0x1
	.2byte	0x4bc
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF129
	.byte	0x1
	.2byte	0x4d6
	.4byte	.LFB140
	.4byte	.LFE140-.LFB140
	.uleb128 0x1
	.byte	0x9c
	.4byte	0xd29
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x4d6
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF130
	.byte	0x1
	.2byte	0x4d6
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x16
	.4byte	.LASF124
	.byte	0x1
	.2byte	0x4d8
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF131
	.byte	0x1
	.2byte	0x4f4
	.4byte	.LFB141
	.4byte	.LFE141-.LFB141
	.uleb128 0x1
	.byte	0x9c
	.4byte	0xd7a
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x4f4
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF130
	.byte	0x1
	.2byte	0x4f4
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x16
	.4byte	.LASF124
	.byte	0x1
	.2byte	0x4f6
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF132
	.byte	0x1
	.2byte	0x511
	.4byte	.LFB142
	.4byte	.LFE142-.LFB142
	.uleb128 0x1
	.byte	0x9c
	.4byte	0xdcb
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x511
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF130
	.byte	0x1
	.2byte	0x511
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x16
	.4byte	.LASF127
	.byte	0x1
	.2byte	0x513
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF133
	.byte	0x1
	.2byte	0x52e
	.4byte	.LFB143
	.4byte	.LFE143-.LFB143
	.uleb128 0x1
	.byte	0x9c
	.4byte	0xe1c
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x52e
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF130
	.byte	0x1
	.2byte	0x52e
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x16
	.4byte	.LASF127
	.byte	0x1
	.2byte	0x530
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF134
	.byte	0x1
	.2byte	0x54b
	.4byte	.LFB144
	.4byte	.LFE144-.LFB144
	.uleb128 0x1
	.byte	0x9c
	.4byte	0xe6d
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x54b
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF135
	.byte	0x1
	.2byte	0x54b
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x16
	.4byte	.LASF124
	.byte	0x1
	.2byte	0x54d
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF136
	.byte	0x1
	.2byte	0x56a
	.4byte	.LFB145
	.4byte	.LFE145-.LFB145
	.uleb128 0x1
	.byte	0x9c
	.4byte	0xebe
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x56a
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF135
	.byte	0x1
	.2byte	0x56a
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x16
	.4byte	.LASF124
	.byte	0x1
	.2byte	0x56c
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF137
	.byte	0x1
	.2byte	0x588
	.4byte	.LFB146
	.4byte	.LFE146-.LFB146
	.uleb128 0x1
	.byte	0x9c
	.4byte	0xf0f
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x588
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF135
	.byte	0x1
	.2byte	0x588
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x16
	.4byte	.LASF127
	.byte	0x1
	.2byte	0x58a
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF138
	.byte	0x1
	.2byte	0x5a6
	.4byte	.LFB147
	.4byte	.LFE147-.LFB147
	.uleb128 0x1
	.byte	0x9c
	.4byte	0xf60
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x5a6
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF135
	.byte	0x1
	.2byte	0x5a6
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x16
	.4byte	.LASF127
	.byte	0x1
	.2byte	0x5a8
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF139
	.byte	0x1
	.2byte	0x5c4
	.4byte	.LFB148
	.4byte	.LFE148-.LFB148
	.uleb128 0x1
	.byte	0x9c
	.4byte	0xfb1
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x5c4
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF140
	.byte	0x1
	.2byte	0x5c4
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x16
	.4byte	.LASF124
	.byte	0x1
	.2byte	0x5c6
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF141
	.byte	0x1
	.2byte	0x5e2
	.4byte	.LFB149
	.4byte	.LFE149-.LFB149
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1002
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x5e2
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF140
	.byte	0x1
	.2byte	0x5e2
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x16
	.4byte	.LASF124
	.byte	0x1
	.2byte	0x5e4
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF142
	.byte	0x1
	.2byte	0x5ff
	.4byte	.LFB150
	.4byte	.LFE150-.LFB150
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1053
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x5ff
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF140
	.byte	0x1
	.2byte	0x5ff
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x16
	.4byte	.LASF127
	.byte	0x1
	.2byte	0x601
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF143
	.byte	0x1
	.2byte	0x61c
	.4byte	.LFB151
	.4byte	.LFE151-.LFB151
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x10a4
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x61c
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF140
	.byte	0x1
	.2byte	0x61c
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x16
	.4byte	.LASF127
	.byte	0x1
	.2byte	0x61e
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF144
	.byte	0x1
	.2byte	0x639
	.4byte	.LFB152
	.4byte	.LFE152-.LFB152
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x10f5
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x639
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF57
	.byte	0x1
	.2byte	0x639
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x16
	.4byte	.LASF106
	.byte	0x1
	.2byte	0x63b
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF145
	.byte	0x1
	.2byte	0x654
	.4byte	.LFB153
	.4byte	.LFE153-.LFB153
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1146
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x654
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF58
	.byte	0x1
	.2byte	0x654
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x16
	.4byte	.LASF106
	.byte	0x1
	.2byte	0x656
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF146
	.byte	0x1
	.2byte	0x66f
	.4byte	.LFB154
	.4byte	.LFE154-.LFB154
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1197
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x66f
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF57
	.byte	0x1
	.2byte	0x66f
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x16
	.4byte	.LASF106
	.byte	0x1
	.2byte	0x671
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF147
	.byte	0x1
	.2byte	0x68a
	.4byte	.LFB155
	.4byte	.LFE155-.LFB155
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x11e8
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x68a
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF58
	.byte	0x1
	.2byte	0x68a
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x16
	.4byte	.LASF106
	.byte	0x1
	.2byte	0x68c
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF148
	.byte	0x1
	.2byte	0x6a5
	.4byte	.LFB156
	.4byte	.LFE156-.LFB156
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1239
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x6a5
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF57
	.byte	0x1
	.2byte	0x6a5
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x16
	.4byte	.LASF106
	.byte	0x1
	.2byte	0x6a7
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF149
	.byte	0x1
	.2byte	0x6c0
	.4byte	.LFB157
	.4byte	.LFE157-.LFB157
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x128a
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x6c0
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF58
	.byte	0x1
	.2byte	0x6c0
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x16
	.4byte	.LASF106
	.byte	0x1
	.2byte	0x6c2
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF150
	.byte	0x1
	.2byte	0x6db
	.4byte	.LFB158
	.4byte	.LFE158-.LFB158
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x12db
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x6db
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF57
	.byte	0x1
	.2byte	0x6db
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x16
	.4byte	.LASF106
	.byte	0x1
	.2byte	0x6dd
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF151
	.byte	0x1
	.2byte	0x6fa
	.4byte	.LFB159
	.4byte	.LFE159-.LFB159
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x133b
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x6fa
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF62
	.byte	0x1
	.2byte	0x6fa
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x15
	.4byte	.LASF152
	.byte	0x1
	.2byte	0x6fa
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x19
	.ascii	"tmp\000"
	.byte	0x1
	.2byte	0x6fc
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF153
	.byte	0x1
	.2byte	0x718
	.4byte	.LFB160
	.4byte	.LFE160-.LFB160
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x139b
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x718
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF62
	.byte	0x1
	.2byte	0x718
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x15
	.4byte	.LASF154
	.byte	0x1
	.2byte	0x718
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x19
	.ascii	"tmp\000"
	.byte	0x1
	.2byte	0x71a
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF155
	.byte	0x1
	.2byte	0x76c
	.4byte	.LFB161
	.4byte	.LFE161-.LFB161
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x13dd
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x76c
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF156
	.byte	0x1
	.2byte	0x76c
	.4byte	0x13dd
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x13
	.byte	0x4
	.4byte	0x3ee
	.uleb128 0x17
	.4byte	.LASF157
	.byte	0x1
	.2byte	0x7a4
	.4byte	.LFB162
	.4byte	.LFE162-.LFB162
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1409
	.uleb128 0x15
	.4byte	.LASF156
	.byte	0x1
	.2byte	0x7a4
	.4byte	0x13dd
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0x14
	.4byte	.LASF158
	.byte	0x1
	.2byte	0x7b7
	.4byte	.LFB163
	.4byte	.LFE163-.LFB163
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1469
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x7b7
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF156
	.byte	0x1
	.2byte	0x7b7
	.4byte	0x13dd
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x16
	.4byte	.LASF159
	.byte	0x1
	.2byte	0x7b9
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x16
	.4byte	.LASF160
	.byte	0x1
	.2byte	0x7ba
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x18
	.4byte	.LASF161
	.byte	0x1
	.2byte	0x7f0
	.4byte	0x69
	.4byte	.LFB164
	.4byte	.LFE164-.LFB164
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x14a0
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x7f0
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x18
	.4byte	.LASF162
	.byte	0x1
	.2byte	0x7ff
	.4byte	0x69
	.4byte	.LFB165
	.4byte	.LFE165-.LFB165
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x14d7
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x7ff
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x18
	.4byte	.LASF163
	.byte	0x1
	.2byte	0x80d
	.4byte	0x69
	.4byte	.LFB166
	.4byte	.LFE166-.LFB166
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x150e
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x80d
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x18
	.4byte	.LASF164
	.byte	0x1
	.2byte	0x81b
	.4byte	0x69
	.4byte	.LFB167
	.4byte	.LFE167-.LFB167
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1545
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x81b
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF165
	.byte	0x1
	.2byte	0x82f
	.4byte	.LFB168
	.4byte	.LFE168-.LFB168
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1587
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x82f
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF166
	.byte	0x1
	.2byte	0x82f
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF167
	.byte	0x1
	.2byte	0x848
	.4byte	.LFB169
	.4byte	.LFE169-.LFB169
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x15c9
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x848
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF166
	.byte	0x1
	.2byte	0x848
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF168
	.byte	0x1
	.2byte	0x860
	.4byte	.LFB170
	.4byte	.LFE170-.LFB170
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x160b
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x860
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF166
	.byte	0x1
	.2byte	0x860
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF169
	.byte	0x1
	.2byte	0x878
	.4byte	.LFB171
	.4byte	.LFE171-.LFB171
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x164d
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x878
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF166
	.byte	0x1
	.2byte	0x878
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF170
	.byte	0x1
	.2byte	0x8ad
	.4byte	.LFB172
	.4byte	.LFE172-.LFB172
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x168f
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x8ad
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF171
	.byte	0x1
	.2byte	0x8ad
	.4byte	0x168f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x13
	.byte	0x4
	.4byte	0x456
	.uleb128 0x17
	.4byte	.LASF172
	.byte	0x1
	.2byte	0x8c6
	.4byte	.LFB173
	.4byte	.LFE173-.LFB173
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x16bb
	.uleb128 0x15
	.4byte	.LASF171
	.byte	0x1
	.2byte	0x8c6
	.4byte	0x168f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0x14
	.4byte	.LASF173
	.byte	0x1
	.2byte	0x8d9
	.4byte	.LFB174
	.4byte	.LFE174-.LFB174
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x16fd
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x8d9
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF94
	.byte	0x1
	.2byte	0x8d9
	.4byte	0xe3
	.uleb128 0x2
	.byte	0x91
	.sleb128 -13
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF174
	.byte	0x1
	.2byte	0x8f2
	.4byte	.LFB175
	.4byte	.LFE175-.LFB175
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x173f
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x8f2
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF94
	.byte	0x1
	.2byte	0x8f2
	.4byte	0xe3
	.uleb128 0x2
	.byte	0x91
	.sleb128 -13
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF175
	.byte	0x1
	.2byte	0x90b
	.4byte	.LFB176
	.4byte	.LFE176-.LFB176
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1781
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x90b
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF94
	.byte	0x1
	.2byte	0x90b
	.4byte	0xe3
	.uleb128 0x2
	.byte	0x91
	.sleb128 -13
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF176
	.byte	0x1
	.2byte	0x944
	.4byte	.LFB177
	.4byte	.LFE177-.LFB177
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x17d2
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x944
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF177
	.byte	0x1
	.2byte	0x944
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.uleb128 0x15
	.4byte	.LASF94
	.byte	0x1
	.2byte	0x944
	.4byte	0xe3
	.uleb128 0x2
	.byte	0x91
	.sleb128 -15
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF178
	.byte	0x1
	.2byte	0x96a
	.4byte	.LFB178
	.4byte	.LFE178-.LFB178
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1814
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x96a
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF179
	.byte	0x1
	.2byte	0x96a
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x18
	.4byte	.LASF180
	.byte	0x1
	.2byte	0x98b
	.4byte	0xb5
	.4byte	.LFB179
	.4byte	.LFE179-.LFB179
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1869
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x98b
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF181
	.byte	0x1
	.2byte	0x98b
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x16
	.4byte	.LASF182
	.byte	0x1
	.2byte	0x98d
	.4byte	0xc1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -9
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF183
	.byte	0x1
	.2byte	0x9b5
	.4byte	.LFB180
	.4byte	.LFE180-.LFB180
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x18ab
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x9b5
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF181
	.byte	0x1
	.2byte	0x9b5
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x18
	.4byte	.LASF184
	.byte	0x1
	.2byte	0x9d1
	.4byte	0xc1
	.4byte	.LFB181
	.4byte	.LFE181-.LFB181
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x191e
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x9d1
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF177
	.byte	0x1
	.2byte	0x9d1
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x16
	.4byte	.LASF182
	.byte	0x1
	.2byte	0x9d3
	.4byte	0xc1
	.uleb128 0x2
	.byte	0x91
	.sleb128 -9
	.uleb128 0x16
	.4byte	.LASF185
	.byte	0x1
	.2byte	0x9d4
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x16
	.4byte	.LASF186
	.byte	0x1
	.2byte	0x9d4
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF187
	.byte	0x1
	.2byte	0x9fa
	.4byte	.LFB182
	.4byte	.LFE182-.LFB182
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1960
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0x9fa
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF177
	.byte	0x1
	.2byte	0x9fa
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF188
	.byte	0x1
	.2byte	0xa1f
	.4byte	.LFB183
	.4byte	.LFE183-.LFB183
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x19b1
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0xa1f
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF189
	.byte	0x1
	.2byte	0xa1f
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.uleb128 0x15
	.4byte	.LASF190
	.byte	0x1
	.2byte	0xa1f
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF191
	.byte	0x1
	.2byte	0xa3a
	.4byte	.LFB184
	.4byte	.LFE184-.LFB184
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1a02
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0xa3a
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF192
	.byte	0x1
	.2byte	0xa3a
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.uleb128 0x15
	.4byte	.LASF94
	.byte	0x1
	.2byte	0xa3a
	.4byte	0xe3
	.uleb128 0x2
	.byte	0x91
	.sleb128 -15
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF193
	.byte	0x1
	.2byte	0xa54
	.4byte	.LFB185
	.4byte	.LFE185-.LFB185
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1a44
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0xa54
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF94
	.byte	0x1
	.2byte	0xa54
	.4byte	0xe3
	.uleb128 0x2
	.byte	0x91
	.sleb128 -13
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF194
	.byte	0x1
	.2byte	0xa7b
	.4byte	.LFB186
	.4byte	.LFE186-.LFB186
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1a77
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0xa7b
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF195
	.byte	0x1
	.2byte	0xa90
	.4byte	.LFB187
	.4byte	.LFE187-.LFB187
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1ab9
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0xa90
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF196
	.byte	0x1
	.2byte	0xa90
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF197
	.byte	0x1
	.2byte	0xaae
	.4byte	.LFB188
	.4byte	.LFE188-.LFB188
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1b19
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0xaae
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF198
	.byte	0x1
	.2byte	0xaae
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.uleb128 0x15
	.4byte	.LASF63
	.byte	0x1
	.2byte	0xaaf
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x15
	.4byte	.LASF199
	.byte	0x1
	.2byte	0xaaf
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -18
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF200
	.byte	0x1
	.2byte	0xad6
	.4byte	.LFB189
	.4byte	.LFE189-.LFB189
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1b88
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0xad6
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF201
	.byte	0x1
	.2byte	0xad6
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x15
	.4byte	.LASF202
	.byte	0x1
	.2byte	0xad7
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x15
	.4byte	.LASF203
	.byte	0x1
	.2byte	0xad7
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -26
	.uleb128 0x16
	.4byte	.LASF204
	.byte	0x1
	.2byte	0xad9
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF205
	.byte	0x1
	.2byte	0xb05
	.4byte	.LFB190
	.4byte	.LFE190-.LFB190
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1be8
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0xb05
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF201
	.byte	0x1
	.2byte	0xb05
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.uleb128 0x15
	.4byte	.LASF202
	.byte	0x1
	.2byte	0xb06
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x15
	.4byte	.LASF203
	.byte	0x1
	.2byte	0xb06
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -18
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF206
	.byte	0x1
	.2byte	0xb4c
	.4byte	.LFB191
	.4byte	.LFE191-.LFB191
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1c39
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0xb4c
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF196
	.byte	0x1
	.2byte	0xb4c
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x16
	.4byte	.LASF204
	.byte	0x1
	.2byte	0xb4e
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF207
	.byte	0x1
	.2byte	0xb77
	.4byte	.LFB192
	.4byte	.LFE192-.LFB192
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1c7b
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0xb77
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF208
	.byte	0x1
	.2byte	0xb77
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF209
	.byte	0x1
	.2byte	0xb8f
	.4byte	.LFB193
	.4byte	.LFE193-.LFB193
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1cbd
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0xb8f
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF210
	.byte	0x1
	.2byte	0xb8f
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF211
	.byte	0x1
	.2byte	0xba6
	.4byte	.LFB194
	.4byte	.LFE194-.LFB194
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1cff
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0xba6
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF212
	.byte	0x1
	.2byte	0xba6
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF213
	.byte	0x1
	.2byte	0xbc4
	.4byte	.LFB195
	.4byte	.LFE195-.LFB195
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1d6e
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0xbc4
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF201
	.byte	0x1
	.2byte	0xbc4
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x15
	.4byte	.LASF202
	.byte	0x1
	.2byte	0xbc5
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x15
	.4byte	.LASF203
	.byte	0x1
	.2byte	0xbc5
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -26
	.uleb128 0x16
	.4byte	.LASF204
	.byte	0x1
	.2byte	0xbc7
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF214
	.byte	0x1
	.2byte	0xbfe
	.4byte	.LFB196
	.4byte	.LFE196-.LFB196
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1dfb
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0xbfe
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF215
	.byte	0x1
	.2byte	0xbfe
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x15
	.4byte	.LASF216
	.byte	0x1
	.2byte	0xbff
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x15
	.4byte	.LASF217
	.byte	0x1
	.2byte	0xbff
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -26
	.uleb128 0x16
	.4byte	.LASF204
	.byte	0x1
	.2byte	0xc01
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x16
	.4byte	.LASF124
	.byte	0x1
	.2byte	0xc02
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x16
	.4byte	.LASF106
	.byte	0x1
	.2byte	0xc03
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF218
	.byte	0x1
	.2byte	0xc32
	.4byte	.LFB197
	.4byte	.LFE197-.LFB197
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1e3d
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0xc32
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF94
	.byte	0x1
	.2byte	0xc32
	.4byte	0xe3
	.uleb128 0x2
	.byte	0x91
	.sleb128 -13
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x14
	.4byte	.LASF219
	.byte	0x1
	.2byte	0xc65
	.4byte	.LFB198
	.4byte	.LFE198-.LFB198
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1e7f
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0xc65
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x15
	.4byte	.LASF220
	.byte	0x1
	.2byte	0xc65
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.uleb128 0x11
	.4byte	.LASF80
	.byte	0x1
	.byte	0xcb
	.4byte	0x62
	.uleb128 0x12
	.byte	0
	.byte	0
	.uleb128 0x1a
	.4byte	.LASF221
	.byte	0x1
	.2byte	0xc84
	.4byte	.LFB199
	.4byte	.LFE199-.LFB199
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1ef0
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0xc84
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF63
	.byte	0x1
	.2byte	0xc84
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x15
	.4byte	.LASF64
	.byte	0x1
	.2byte	0xc84
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x15
	.4byte	.LASF66
	.byte	0x1
	.2byte	0xc85
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -26
	.uleb128 0x16
	.4byte	.LASF124
	.byte	0x1
	.2byte	0xc87
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x16
	.4byte	.LASF106
	.byte	0x1
	.2byte	0xc87
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0x1a
	.4byte	.LASF222
	.byte	0x1
	.2byte	0xcad
	.4byte	.LFB200
	.4byte	.LFE200-.LFB200
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1f70
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0xcad
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF63
	.byte	0x1
	.2byte	0xcad
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x15
	.4byte	.LASF64
	.byte	0x1
	.2byte	0xcad
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x15
	.4byte	.LASF66
	.byte	0x1
	.2byte	0xcae
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -26
	.uleb128 0x16
	.4byte	.LASF124
	.byte	0x1
	.2byte	0xcb0
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x16
	.4byte	.LASF106
	.byte	0x1
	.2byte	0xcb0
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x19
	.ascii	"tmp\000"
	.byte	0x1
	.2byte	0xcb0
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.byte	0
	.uleb128 0x1a
	.4byte	.LASF223
	.byte	0x1
	.2byte	0xcd7
	.4byte	.LFB201
	.4byte	.LFE201-.LFB201
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x1ff0
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0xcd7
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF63
	.byte	0x1
	.2byte	0xcd7
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x15
	.4byte	.LASF64
	.byte	0x1
	.2byte	0xcd7
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x15
	.4byte	.LASF66
	.byte	0x1
	.2byte	0xcd8
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -26
	.uleb128 0x16
	.4byte	.LASF127
	.byte	0x1
	.2byte	0xcda
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x16
	.4byte	.LASF106
	.byte	0x1
	.2byte	0xcda
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x19
	.ascii	"tmp\000"
	.byte	0x1
	.2byte	0xcda
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.byte	0
	.uleb128 0x1a
	.4byte	.LASF224
	.byte	0x1
	.2byte	0xd00
	.4byte	.LFB202
	.4byte	.LFE202-.LFB202
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x2070
	.uleb128 0x15
	.4byte	.LASF78
	.byte	0x1
	.2byte	0xd00
	.4byte	0x492
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x15
	.4byte	.LASF63
	.byte	0x1
	.2byte	0xd00
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -22
	.uleb128 0x15
	.4byte	.LASF64
	.byte	0x1
	.2byte	0xd00
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x15
	.4byte	.LASF66
	.byte	0x1
	.2byte	0xd01
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -26
	.uleb128 0x16
	.4byte	.LASF127
	.byte	0x1
	.2byte	0xd03
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -10
	.uleb128 0x16
	.4byte	.LASF106
	.byte	0x1
	.2byte	0xd03
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x19
	.ascii	"tmp\000"
	.byte	0x1
	.2byte	0xd03
	.4byte	0x45
	.uleb128 0x2
	.byte	0x91
	.sleb128 -14
	.byte	0
	.uleb128 0x1b
	.4byte	.LASF228
	.byte	0x5
	.2byte	0x698
	.4byte	0x9a
	.byte	0
	.section	.debug_abbrev,"",%progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0xe
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1b
	.uleb128 0xe
	.uleb128 0x55
	.uleb128 0x17
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0x35
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0x4
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1c
	.uleb128 0xd
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x1c
	.uleb128 0xd
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0x18
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x15
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x16
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x17
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x18
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x19
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x1a
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1b
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_aranges,"",%progbits
	.4byte	0x2f4
	.2byte	0x2
	.4byte	.Ldebug_info0
	.byte	0x4
	.byte	0
	.2byte	0
	.2byte	0
	.4byte	.LFB111
	.4byte	.LFE111-.LFB111
	.4byte	.LFB112
	.4byte	.LFE112-.LFB112
	.4byte	.LFB113
	.4byte	.LFE113-.LFB113
	.4byte	.LFB114
	.4byte	.LFE114-.LFB114
	.4byte	.LFB115
	.4byte	.LFE115-.LFB115
	.4byte	.LFB116
	.4byte	.LFE116-.LFB116
	.4byte	.LFB117
	.4byte	.LFE117-.LFB117
	.4byte	.LFB118
	.4byte	.LFE118-.LFB118
	.4byte	.LFB119
	.4byte	.LFE119-.LFB119
	.4byte	.LFB120
	.4byte	.LFE120-.LFB120
	.4byte	.LFB121
	.4byte	.LFE121-.LFB121
	.4byte	.LFB122
	.4byte	.LFE122-.LFB122
	.4byte	.LFB123
	.4byte	.LFE123-.LFB123
	.4byte	.LFB124
	.4byte	.LFE124-.LFB124
	.4byte	.LFB125
	.4byte	.LFE125-.LFB125
	.4byte	.LFB126
	.4byte	.LFE126-.LFB126
	.4byte	.LFB127
	.4byte	.LFE127-.LFB127
	.4byte	.LFB128
	.4byte	.LFE128-.LFB128
	.4byte	.LFB129
	.4byte	.LFE129-.LFB129
	.4byte	.LFB130
	.4byte	.LFE130-.LFB130
	.4byte	.LFB131
	.4byte	.LFE131-.LFB131
	.4byte	.LFB132
	.4byte	.LFE132-.LFB132
	.4byte	.LFB133
	.4byte	.LFE133-.LFB133
	.4byte	.LFB134
	.4byte	.LFE134-.LFB134
	.4byte	.LFB135
	.4byte	.LFE135-.LFB135
	.4byte	.LFB136
	.4byte	.LFE136-.LFB136
	.4byte	.LFB137
	.4byte	.LFE137-.LFB137
	.4byte	.LFB138
	.4byte	.LFE138-.LFB138
	.4byte	.LFB139
	.4byte	.LFE139-.LFB139
	.4byte	.LFB140
	.4byte	.LFE140-.LFB140
	.4byte	.LFB141
	.4byte	.LFE141-.LFB141
	.4byte	.LFB142
	.4byte	.LFE142-.LFB142
	.4byte	.LFB143
	.4byte	.LFE143-.LFB143
	.4byte	.LFB144
	.4byte	.LFE144-.LFB144
	.4byte	.LFB145
	.4byte	.LFE145-.LFB145
	.4byte	.LFB146
	.4byte	.LFE146-.LFB146
	.4byte	.LFB147
	.4byte	.LFE147-.LFB147
	.4byte	.LFB148
	.4byte	.LFE148-.LFB148
	.4byte	.LFB149
	.4byte	.LFE149-.LFB149
	.4byte	.LFB150
	.4byte	.LFE150-.LFB150
	.4byte	.LFB151
	.4byte	.LFE151-.LFB151
	.4byte	.LFB152
	.4byte	.LFE152-.LFB152
	.4byte	.LFB153
	.4byte	.LFE153-.LFB153
	.4byte	.LFB154
	.4byte	.LFE154-.LFB154
	.4byte	.LFB155
	.4byte	.LFE155-.LFB155
	.4byte	.LFB156
	.4byte	.LFE156-.LFB156
	.4byte	.LFB157
	.4byte	.LFE157-.LFB157
	.4byte	.LFB158
	.4byte	.LFE158-.LFB158
	.4byte	.LFB159
	.4byte	.LFE159-.LFB159
	.4byte	.LFB160
	.4byte	.LFE160-.LFB160
	.4byte	.LFB161
	.4byte	.LFE161-.LFB161
	.4byte	.LFB162
	.4byte	.LFE162-.LFB162
	.4byte	.LFB163
	.4byte	.LFE163-.LFB163
	.4byte	.LFB164
	.4byte	.LFE164-.LFB164
	.4byte	.LFB165
	.4byte	.LFE165-.LFB165
	.4byte	.LFB166
	.4byte	.LFE166-.LFB166
	.4byte	.LFB167
	.4byte	.LFE167-.LFB167
	.4byte	.LFB168
	.4byte	.LFE168-.LFB168
	.4byte	.LFB169
	.4byte	.LFE169-.LFB169
	.4byte	.LFB170
	.4byte	.LFE170-.LFB170
	.4byte	.LFB171
	.4byte	.LFE171-.LFB171
	.4byte	.LFB172
	.4byte	.LFE172-.LFB172
	.4byte	.LFB173
	.4byte	.LFE173-.LFB173
	.4byte	.LFB174
	.4byte	.LFE174-.LFB174
	.4byte	.LFB175
	.4byte	.LFE175-.LFB175
	.4byte	.LFB176
	.4byte	.LFE176-.LFB176
	.4byte	.LFB177
	.4byte	.LFE177-.LFB177
	.4byte	.LFB178
	.4byte	.LFE178-.LFB178
	.4byte	.LFB179
	.4byte	.LFE179-.LFB179
	.4byte	.LFB180
	.4byte	.LFE180-.LFB180
	.4byte	.LFB181
	.4byte	.LFE181-.LFB181
	.4byte	.LFB182
	.4byte	.LFE182-.LFB182
	.4byte	.LFB183
	.4byte	.LFE183-.LFB183
	.4byte	.LFB184
	.4byte	.LFE184-.LFB184
	.4byte	.LFB185
	.4byte	.LFE185-.LFB185
	.4byte	.LFB186
	.4byte	.LFE186-.LFB186
	.4byte	.LFB187
	.4byte	.LFE187-.LFB187
	.4byte	.LFB188
	.4byte	.LFE188-.LFB188
	.4byte	.LFB189
	.4byte	.LFE189-.LFB189
	.4byte	.LFB190
	.4byte	.LFE190-.LFB190
	.4byte	.LFB191
	.4byte	.LFE191-.LFB191
	.4byte	.LFB192
	.4byte	.LFE192-.LFB192
	.4byte	.LFB193
	.4byte	.LFE193-.LFB193
	.4byte	.LFB194
	.4byte	.LFE194-.LFB194
	.4byte	.LFB195
	.4byte	.LFE195-.LFB195
	.4byte	.LFB196
	.4byte	.LFE196-.LFB196
	.4byte	.LFB197
	.4byte	.LFE197-.LFB197
	.4byte	.LFB198
	.4byte	.LFE198-.LFB198
	.4byte	.LFB199
	.4byte	.LFE199-.LFB199
	.4byte	.LFB200
	.4byte	.LFE200-.LFB200
	.4byte	.LFB201
	.4byte	.LFE201-.LFB201
	.4byte	.LFB202
	.4byte	.LFE202-.LFB202
	.4byte	0
	.4byte	0
	.section	.debug_ranges,"",%progbits
.Ldebug_ranges0:
	.4byte	.LFB111
	.4byte	.LFE111
	.4byte	.LFB112
	.4byte	.LFE112
	.4byte	.LFB113
	.4byte	.LFE113
	.4byte	.LFB114
	.4byte	.LFE114
	.4byte	.LFB115
	.4byte	.LFE115
	.4byte	.LFB116
	.4byte	.LFE116
	.4byte	.LFB117
	.4byte	.LFE117
	.4byte	.LFB118
	.4byte	.LFE118
	.4byte	.LFB119
	.4byte	.LFE119
	.4byte	.LFB120
	.4byte	.LFE120
	.4byte	.LFB121
	.4byte	.LFE121
	.4byte	.LFB122
	.4byte	.LFE122
	.4byte	.LFB123
	.4byte	.LFE123
	.4byte	.LFB124
	.4byte	.LFE124
	.4byte	.LFB125
	.4byte	.LFE125
	.4byte	.LFB126
	.4byte	.LFE126
	.4byte	.LFB127
	.4byte	.LFE127
	.4byte	.LFB128
	.4byte	.LFE128
	.4byte	.LFB129
	.4byte	.LFE129
	.4byte	.LFB130
	.4byte	.LFE130
	.4byte	.LFB131
	.4byte	.LFE131
	.4byte	.LFB132
	.4byte	.LFE132
	.4byte	.LFB133
	.4byte	.LFE133
	.4byte	.LFB134
	.4byte	.LFE134
	.4byte	.LFB135
	.4byte	.LFE135
	.4byte	.LFB136
	.4byte	.LFE136
	.4byte	.LFB137
	.4byte	.LFE137
	.4byte	.LFB138
	.4byte	.LFE138
	.4byte	.LFB139
	.4byte	.LFE139
	.4byte	.LFB140
	.4byte	.LFE140
	.4byte	.LFB141
	.4byte	.LFE141
	.4byte	.LFB142
	.4byte	.LFE142
	.4byte	.LFB143
	.4byte	.LFE143
	.4byte	.LFB144
	.4byte	.LFE144
	.4byte	.LFB145
	.4byte	.LFE145
	.4byte	.LFB146
	.4byte	.LFE146
	.4byte	.LFB147
	.4byte	.LFE147
	.4byte	.LFB148
	.4byte	.LFE148
	.4byte	.LFB149
	.4byte	.LFE149
	.4byte	.LFB150
	.4byte	.LFE150
	.4byte	.LFB151
	.4byte	.LFE151
	.4byte	.LFB152
	.4byte	.LFE152
	.4byte	.LFB153
	.4byte	.LFE153
	.4byte	.LFB154
	.4byte	.LFE154
	.4byte	.LFB155
	.4byte	.LFE155
	.4byte	.LFB156
	.4byte	.LFE156
	.4byte	.LFB157
	.4byte	.LFE157
	.4byte	.LFB158
	.4byte	.LFE158
	.4byte	.LFB159
	.4byte	.LFE159
	.4byte	.LFB160
	.4byte	.LFE160
	.4byte	.LFB161
	.4byte	.LFE161
	.4byte	.LFB162
	.4byte	.LFE162
	.4byte	.LFB163
	.4byte	.LFE163
	.4byte	.LFB164
	.4byte	.LFE164
	.4byte	.LFB165
	.4byte	.LFE165
	.4byte	.LFB166
	.4byte	.LFE166
	.4byte	.LFB167
	.4byte	.LFE167
	.4byte	.LFB168
	.4byte	.LFE168
	.4byte	.LFB169
	.4byte	.LFE169
	.4byte	.LFB170
	.4byte	.LFE170
	.4byte	.LFB171
	.4byte	.LFE171
	.4byte	.LFB172
	.4byte	.LFE172
	.4byte	.LFB173
	.4byte	.LFE173
	.4byte	.LFB174
	.4byte	.LFE174
	.4byte	.LFB175
	.4byte	.LFE175
	.4byte	.LFB176
	.4byte	.LFE176
	.4byte	.LFB177
	.4byte	.LFE177
	.4byte	.LFB178
	.4byte	.LFE178
	.4byte	.LFB179
	.4byte	.LFE179
	.4byte	.LFB180
	.4byte	.LFE180
	.4byte	.LFB181
	.4byte	.LFE181
	.4byte	.LFB182
	.4byte	.LFE182
	.4byte	.LFB183
	.4byte	.LFE183
	.4byte	.LFB184
	.4byte	.LFE184
	.4byte	.LFB185
	.4byte	.LFE185
	.4byte	.LFB186
	.4byte	.LFE186
	.4byte	.LFB187
	.4byte	.LFE187
	.4byte	.LFB188
	.4byte	.LFE188
	.4byte	.LFB189
	.4byte	.LFE189
	.4byte	.LFB190
	.4byte	.LFE190
	.4byte	.LFB191
	.4byte	.LFE191
	.4byte	.LFB192
	.4byte	.LFE192
	.4byte	.LFB193
	.4byte	.LFE193
	.4byte	.LFB194
	.4byte	.LFE194
	.4byte	.LFB195
	.4byte	.LFE195
	.4byte	.LFB196
	.4byte	.LFE196
	.4byte	.LFB197
	.4byte	.LFE197
	.4byte	.LFB198
	.4byte	.LFE198
	.4byte	.LFB199
	.4byte	.LFE199
	.4byte	.LFB200
	.4byte	.LFE200
	.4byte	.LFB201
	.4byte	.LFE201
	.4byte	.LFB202
	.4byte	.LFE202
	.4byte	0
	.4byte	0
	.section	.debug_line,"",%progbits
.Ldebug_line0:
	.section	.debug_str,"MS",%progbits,1
.LASF99:
	.ascii	"TIM_OPMode\000"
.LASF94:
	.ascii	"NewState\000"
.LASF125:
	.ascii	"TIM_ForcedOC2Config\000"
.LASF98:
	.ascii	"TIM_SelectOnePulseMode\000"
.LASF191:
	.ascii	"TIM_DMACmd\000"
.LASF22:
	.ascii	"DIER\000"
.LASF196:
	.ascii	"TIM_InputTriggerSource\000"
.LASF208:
	.ascii	"TIM_TRGOSource\000"
.LASF48:
	.ascii	"TIM_CounterMode\000"
.LASF90:
	.ascii	"Autoreload\000"
.LASF128:
	.ascii	"TIM_ForcedOC4Config\000"
.LASF139:
	.ascii	"TIM_ClearOC1Ref\000"
.LASF13:
	.ascii	"FlagStatus\000"
.LASF181:
	.ascii	"TIM_FLAG\000"
.LASF120:
	.ascii	"TIM_SetCompare4\000"
.LASF115:
	.ascii	"Compare1\000"
.LASF217:
	.ascii	"TIM_IC2Polarity\000"
.LASF93:
	.ascii	"TIM_UpdateDisableConfig\000"
.LASF119:
	.ascii	"Compare3\000"
.LASF56:
	.ascii	"TIM_Pulse\000"
.LASF124:
	.ascii	"tmpccmr1\000"
.LASF127:
	.ascii	"tmpccmr2\000"
.LASF15:
	.ascii	"DISABLE\000"
.LASF107:
	.ascii	"tmpcr2\000"
.LASF206:
	.ascii	"TIM_SelectInputTrigger\000"
.LASF35:
	.ascii	"CCR2\000"
.LASF66:
	.ascii	"TIM_ICFilter\000"
.LASF194:
	.ascii	"TIM_InternalClockConfig\000"
.LASF146:
	.ascii	"TIM_OC2PolarityConfig\000"
.LASF97:
	.ascii	"TIM_ARRPreloadConfig\000"
.LASF228:
	.ascii	"ITM_RxBuffer\000"
.LASF64:
	.ascii	"TIM_ICSelection\000"
.LASF113:
	.ascii	"tmp1\000"
.LASF214:
	.ascii	"TIM_EncoderInterfaceConfig\000"
.LASF131:
	.ascii	"TIM_OC2PreloadConfig\000"
.LASF178:
	.ascii	"TIM_GenerateEvent\000"
.LASF216:
	.ascii	"TIM_IC1Polarity\000"
.LASF135:
	.ascii	"TIM_OCFast\000"
.LASF62:
	.ascii	"TIM_Channel\000"
.LASF26:
	.ascii	"CCMR1\000"
.LASF28:
	.ascii	"CCMR2\000"
.LASF85:
	.ascii	"TIM_CounterModeConfig\000"
.LASF0:
	.ascii	"signed char\000"
.LASF123:
	.ascii	"TIM_ForcedAction\000"
.LASF151:
	.ascii	"TIM_CCxCmd\000"
.LASF10:
	.ascii	"long long unsigned int\000"
.LASF130:
	.ascii	"TIM_OCPreload\000"
.LASF33:
	.ascii	"RESERVED10\000"
.LASF39:
	.ascii	"RESERVED11\000"
.LASF40:
	.ascii	"RESERVED12\000"
.LASF42:
	.ascii	"RESERVED13\000"
.LASF43:
	.ascii	"RESERVED14\000"
.LASF177:
	.ascii	"TIM_IT\000"
.LASF45:
	.ascii	"long int\000"
.LASF55:
	.ascii	"TIM_OutputNState\000"
.LASF16:
	.ascii	"ENABLE\000"
.LASF105:
	.ascii	"tmpccmrx\000"
.LASF30:
	.ascii	"CCER\000"
.LASF9:
	.ascii	"long long int\000"
.LASF4:
	.ascii	"uint16_t\000"
.LASF101:
	.ascii	"TIM_CKD\000"
.LASF89:
	.ascii	"TIM_SetAutoreload\000"
.LASF157:
	.ascii	"TIM_ICStructInit\000"
.LASF162:
	.ascii	"TIM_GetCapture2\000"
.LASF163:
	.ascii	"TIM_GetCapture3\000"
.LASF164:
	.ascii	"TIM_GetCapture4\000"
.LASF109:
	.ascii	"TIM_OC3Init\000"
.LASF159:
	.ascii	"icoppositepolarity\000"
.LASF226:
	.ascii	"/home/mike/Documents/caribou-rtos/branches/0.9/cari"
	.ascii	"bou/target/board/xcore407i/crossworks/../../../chip"
	.ascii	"/stm32/stm32f407/lib/STM32F4xx_StdPeriph_Driver/src"
	.ascii	"/stm32f4xx_tim.c\000"
.LASF154:
	.ascii	"TIM_CCxN\000"
.LASF193:
	.ascii	"TIM_SelectCCDMA\000"
.LASF44:
	.ascii	"TIM_TypeDef\000"
.LASF143:
	.ascii	"TIM_ClearOC4Ref\000"
.LASF129:
	.ascii	"TIM_OC1PreloadConfig\000"
.LASF190:
	.ascii	"TIM_DMABurstLength\000"
.LASF183:
	.ascii	"TIM_ClearFlag\000"
.LASF114:
	.ascii	"TIM_SetCompare1\000"
.LASF116:
	.ascii	"TIM_SetCompare2\000"
.LASF118:
	.ascii	"TIM_SetCompare3\000"
.LASF174:
	.ascii	"TIM_SelectCOM\000"
.LASF106:
	.ascii	"tmpccer\000"
.LASF147:
	.ascii	"TIM_OC2NPolarityConfig\000"
.LASF8:
	.ascii	"unsigned int\000"
.LASF224:
	.ascii	"TI4_Config\000"
.LASF57:
	.ascii	"TIM_OCPolarity\000"
.LASF50:
	.ascii	"TIM_ClockDivision\000"
.LASF92:
	.ascii	"TIM_GetPrescaler\000"
.LASF91:
	.ascii	"TIM_GetCounter\000"
.LASF81:
	.ascii	"TIM_TimeBaseStructInit\000"
.LASF161:
	.ascii	"TIM_GetCapture1\000"
.LASF212:
	.ascii	"TIM_MasterSlaveMode\000"
.LASF209:
	.ascii	"TIM_SelectSlaveMode\000"
.LASF211:
	.ascii	"TIM_SelectMasterSlaveMode\000"
.LASF180:
	.ascii	"TIM_GetFlagStatus\000"
.LASF75:
	.ascii	"TIM_BDTRInitTypeDef\000"
.LASF104:
	.ascii	"TIM_OCInitStruct\000"
.LASF20:
	.ascii	"SMCR\000"
.LASF68:
	.ascii	"TIM_OSSRState\000"
.LASF78:
	.ascii	"TIMx\000"
.LASF215:
	.ascii	"TIM_EncoderMode\000"
.LASF150:
	.ascii	"TIM_OC4PolarityConfig\000"
.LASF74:
	.ascii	"TIM_AutomaticOutput\000"
.LASF207:
	.ascii	"TIM_SelectOutputTrigger\000"
.LASF165:
	.ascii	"TIM_SetIC1Prescaler\000"
.LASF158:
	.ascii	"TIM_PWMIConfig\000"
.LASF223:
	.ascii	"TI3_Config\000"
.LASF192:
	.ascii	"TIM_DMASource\000"
.LASF111:
	.ascii	"TIM_OCStructInit\000"
.LASF84:
	.ascii	"TIM_PSCReloadMode\000"
.LASF12:
	.ascii	"RESET\000"
.LASF204:
	.ascii	"tmpsmcr\000"
.LASF202:
	.ascii	"TIM_ExtTRGPolarity\000"
.LASF172:
	.ascii	"TIM_BDTRStructInit\000"
.LASF86:
	.ascii	"tmpcr1\000"
.LASF122:
	.ascii	"TIM_ForcedOC1Config\000"
.LASF11:
	.ascii	"sizetype\000"
.LASF201:
	.ascii	"TIM_ExtTRGPrescaler\000"
.LASF72:
	.ascii	"TIM_Break\000"
.LASF225:
	.ascii	"GNU C 4.8.4 20140725 (release) [ARM/embedded-4_8-br"
	.ascii	"anch revision 213147] -fmessage-length=0 -mtp=soft "
	.ascii	"-mcpu=cortex-m4 -mlittle-endian -mfloat-abi=softfp "
	.ascii	"-mfpu=fpv4-sp-d16 -mthumb -g2 -std=gnu99 -fno-dwarf"
	.ascii	"2-cfi-asm -fno-builtin -ffunction-sections -fdata-s"
	.ascii	"ections -fshort-double -fshort-enums -fno-common\000"
.LASF71:
	.ascii	"TIM_DeadTime\000"
.LASF144:
	.ascii	"TIM_OC1PolarityConfig\000"
.LASF126:
	.ascii	"TIM_ForcedOC3Config\000"
.LASF65:
	.ascii	"TIM_ICPrescaler\000"
.LASF153:
	.ascii	"TIM_CCxNCmd\000"
.LASF121:
	.ascii	"Compare4\000"
.LASF60:
	.ascii	"TIM_OCNIdleState\000"
.LASF185:
	.ascii	"itstatus\000"
.LASF189:
	.ascii	"TIM_DMABase\000"
.LASF160:
	.ascii	"icoppositeselection\000"
.LASF80:
	.ascii	"assert_param\000"
.LASF17:
	.ascii	"FunctionalState\000"
.LASF220:
	.ascii	"TIM_Remap\000"
.LASF184:
	.ascii	"TIM_GetITStatus\000"
.LASF79:
	.ascii	"TIM_TimeBaseInitStruct\000"
.LASF188:
	.ascii	"TIM_DMAConfig\000"
.LASF100:
	.ascii	"TIM_SetClockDivision\000"
.LASF152:
	.ascii	"TIM_CCx\000"
.LASF88:
	.ascii	"Counter\000"
.LASF117:
	.ascii	"Compare2\000"
.LASF54:
	.ascii	"TIM_OutputState\000"
.LASF179:
	.ascii	"TIM_EventSource\000"
.LASF63:
	.ascii	"TIM_ICPolarity\000"
.LASF19:
	.ascii	"RESERVED1\000"
.LASF21:
	.ascii	"RESERVED2\000"
.LASF23:
	.ascii	"RESERVED3\000"
.LASF24:
	.ascii	"RESERVED4\000"
.LASF25:
	.ascii	"RESERVED5\000"
.LASF27:
	.ascii	"RESERVED6\000"
.LASF31:
	.ascii	"RESERVED8\000"
.LASF32:
	.ascii	"RESERVED9\000"
.LASF47:
	.ascii	"TIM_Prescaler\000"
.LASF197:
	.ascii	"TIM_TIxExternalClockConfig\000"
.LASF6:
	.ascii	"int32_t\000"
.LASF1:
	.ascii	"unsigned char\000"
.LASF70:
	.ascii	"TIM_LOCKLevel\000"
.LASF173:
	.ascii	"TIM_CtrlPWMOutputs\000"
.LASF170:
	.ascii	"TIM_BDTRConfig\000"
.LASF2:
	.ascii	"short int\000"
.LASF38:
	.ascii	"BDTR\000"
.LASF167:
	.ascii	"TIM_SetIC2Prescaler\000"
.LASF82:
	.ascii	"TIM_PrescalerConfig\000"
.LASF195:
	.ascii	"TIM_ITRxExternalClockConfig\000"
.LASF149:
	.ascii	"TIM_OC3NPolarityConfig\000"
.LASF69:
	.ascii	"TIM_OSSIState\000"
.LASF18:
	.ascii	"RESERVED0\000"
.LASF77:
	.ascii	"TIM_TimeBaseInit\000"
.LASF198:
	.ascii	"TIM_TIxExternalCLKSource\000"
.LASF29:
	.ascii	"RESERVED7\000"
.LASF171:
	.ascii	"TIM_BDTRInitStruct\000"
.LASF222:
	.ascii	"TI2_Config\000"
.LASF136:
	.ascii	"TIM_OC2FastConfig\000"
.LASF138:
	.ascii	"TIM_OC4FastConfig\000"
.LASF58:
	.ascii	"TIM_OCNPolarity\000"
.LASF46:
	.ascii	"char\000"
.LASF205:
	.ascii	"TIM_ETRClockMode2Config\000"
.LASF221:
	.ascii	"TI1_Config\000"
.LASF102:
	.ascii	"TIM_Cmd\000"
.LASF41:
	.ascii	"DMAR\000"
.LASF96:
	.ascii	"TIM_UpdateSource\000"
.LASF168:
	.ascii	"TIM_SetIC3Prescaler\000"
.LASF108:
	.ascii	"TIM_OC2Init\000"
.LASF49:
	.ascii	"TIM_Period\000"
.LASF52:
	.ascii	"TIM_TimeBaseInitTypeDef\000"
.LASF187:
	.ascii	"TIM_ClearITPendingBit\000"
.LASF67:
	.ascii	"TIM_ICInitTypeDef\000"
.LASF110:
	.ascii	"TIM_OC4Init\000"
.LASF155:
	.ascii	"TIM_ICInit\000"
.LASF227:
	.ascii	"/home/mike/Documents/caribou-rtos/branches/0.9/cari"
	.ascii	"bou/target/board/xcore407i/crossworks\000"
.LASF112:
	.ascii	"TIM_SelectOCxM\000"
.LASF95:
	.ascii	"TIM_UpdateRequestConfig\000"
.LASF83:
	.ascii	"Prescaler\000"
.LASF133:
	.ascii	"TIM_OC4PreloadConfig\000"
.LASF5:
	.ascii	"short unsigned int\000"
.LASF210:
	.ascii	"TIM_SlaveMode\000"
.LASF53:
	.ascii	"TIM_OCMode\000"
.LASF73:
	.ascii	"TIM_BreakPolarity\000"
.LASF145:
	.ascii	"TIM_OC1NPolarityConfig\000"
.LASF175:
	.ascii	"TIM_CCPreloadControl\000"
.LASF142:
	.ascii	"TIM_ClearOC3Ref\000"
.LASF7:
	.ascii	"uint32_t\000"
.LASF34:
	.ascii	"CCR1\000"
.LASF200:
	.ascii	"TIM_ETRClockMode1Config\000"
.LASF36:
	.ascii	"CCR3\000"
.LASF37:
	.ascii	"CCR4\000"
.LASF61:
	.ascii	"TIM_OCInitTypeDef\000"
.LASF87:
	.ascii	"TIM_SetCounter\000"
.LASF186:
	.ascii	"itenable\000"
.LASF3:
	.ascii	"uint8_t\000"
.LASF148:
	.ascii	"TIM_OC3PolarityConfig\000"
.LASF219:
	.ascii	"TIM_RemapConfig\000"
.LASF14:
	.ascii	"ITStatus\000"
.LASF103:
	.ascii	"TIM_OC1Init\000"
.LASF51:
	.ascii	"TIM_RepetitionCounter\000"
.LASF218:
	.ascii	"TIM_SelectHallSensor\000"
.LASF156:
	.ascii	"TIM_ICInitStruct\000"
.LASF182:
	.ascii	"bitstatus\000"
.LASF199:
	.ascii	"ICFilter\000"
.LASF141:
	.ascii	"TIM_ClearOC2Ref\000"
.LASF203:
	.ascii	"ExtTRGFilter\000"
.LASF176:
	.ascii	"TIM_ITConfig\000"
.LASF59:
	.ascii	"TIM_OCIdleState\000"
.LASF140:
	.ascii	"TIM_OCClear\000"
.LASF166:
	.ascii	"TIM_ICPSC\000"
.LASF213:
	.ascii	"TIM_ETRConfig\000"
.LASF76:
	.ascii	"TIM_DeInit\000"
.LASF137:
	.ascii	"TIM_OC3FastConfig\000"
.LASF132:
	.ascii	"TIM_OC3PreloadConfig\000"
.LASF169:
	.ascii	"TIM_SetIC4Prescaler\000"
.LASF134:
	.ascii	"TIM_OC1FastConfig\000"
	.ident	"GCC: (GNU) 4.8.4 20140725 (release) [ARM/embedded-4_8-branch revision 213147]"
