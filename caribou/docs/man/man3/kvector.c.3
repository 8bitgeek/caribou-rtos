.TH "src/kernel/kvector.c" 3 "Thu Dec 29 2016" "Version 0.9" "CARIBOU RTOS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/kernel/kvector.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <caribou/kernel/swi\&.h>\fP
.br
\fC#include <caribou/kernel/kvector\&.h>\fP
.br
\fC#include <caribou/kernel/interrupt\&.h>\fP
.br
\fC#include <caribou/lib/bitmap_heap\&.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBcaribou_vector_isr_s\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBcaribou_vector_isr_s\fP \fBcaribou_vector_isr_t\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "static int \fBisr_map_extend\fP (int size)"
.br
.ti -1c
.RI "int \fBkvector_install\fP (void *arg)"
.br
.ti -1c
.RI "int \fBkvector_remove\fP (void *arg)"
.br
.ti -1c
.RI "int \fBkvector_remove_all\fP (void *arg)"
.br
.ti -1c
.RI "int \fBkvector_installed\fP (void *arg)"
.br
.ti -1c
.RI "int \fBkvector_enable\fP (void *arg)"
.br
.ti -1c
.RI "int \fBkvector_disable\fP (void *arg)"
.br
.ti -1c
.RI "int \fBkvector_enabled\fP (void *arg)"
.br
.ti -1c
.RI "int \fBkvector_set\fP (void *arg)"
.br
.ti -1c
.RI "\fB__attribute__\fP ((weak))"
.br
.RI "\fIInterrupt service entry point from hardware vector\&. \fP"
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "static \fBcaribou_vector_isr_t\fP ** \fBisr_map\fP = \fBNULL\fP"
.br
.ti -1c
.RI "static int \fBisr_map_size\fP = 0"
.br
.in -1c
.SH "Detailed Description"
.PP 

.PP
.PP
\fBAuthor:\fP
.RS 4
Mike Sharkey mike@pikeaero.com\&. 
.RE
.PP
\fBCopyright:\fP
.RS 4
© 2005-2013 by Pike Aerospace Research Corporation 
.PP
© 2014-2015 by Mike Sharkey
.RE
.PP
This file is part of CARIBOU RTOS CARIBOU RTOS is free software: you can redistribute it and/or modify it under the terms of the Beerware License Version 43\&. 'THE BEER-WARE LICENSE' (Revision 43): Mike Sharkey mike@pikeaero.com wrote this file\&. As long as you retain this notice you can do whatever you want with this stuff\&. If we meet some day, and you think this stuff is worth it, you can buy me a beer in return ~ Mike Sharkey 
.PP
Definition in file \fBkvector\&.c\fP\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBcaribou_vector_isr_s\fP  \fBcaribou_vector_isr_t\fP"

.SH "Function Documentation"
.PP 
.SS "__attribute__ ((weak))"

.PP
Interrupt service entry point from hardware vector\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvector\fP The hardware vector number 
.RE
.PP

.PP
Definition at line 198 of file kvector\&.c\&.
.SS "static int isr_map_extend (intsize)\fC [static]\fP"
extend the size of the isr map table 
.PP
Definition at line 31 of file kvector\&.c\&.
.SS "int kvector_disable (void *arg)"

.PP
Definition at line 173 of file kvector\&.c\&.
.SS "int kvector_enable (void *arg)"

.PP
Definition at line 166 of file kvector\&.c\&.
.SS "int kvector_enabled (void *arg)"

.PP
Definition at line 180 of file kvector\&.c\&.
.SS "int kvector_install (void *arg)"

.PP
Definition at line 49 of file kvector\&.c\&.
.SS "int kvector_installed (void *arg)"

.PP
Definition at line 144 of file kvector\&.c\&.
.SS "int kvector_remove (void *arg)"

.PP
Definition at line 83 of file kvector\&.c\&.
.SS "int kvector_remove_all (void *arg)"

.PP
Definition at line 112 of file kvector\&.c\&.
.SS "int kvector_set (void *arg)"

.PP
Definition at line 187 of file kvector\&.c\&.
.SH "Variable Documentation"
.PP 
.SS "\fBcaribou_vector_isr_t\fP** isr_map = \fBNULL\fP\fC [static]\fP"

.PP
Definition at line 27 of file kvector\&.c\&.
.SS "int isr_map_size = 0\fC [static]\fP"

.PP
Definition at line 28 of file kvector\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for CARIBOU RTOS from the source code\&.
