//*******************************************************
//* SAM3X initialization file (running code from SDRAM) *
//*******************************************************

FUNC void pllInit()
{
   _WDWORD(0x400E0620, 0x01370101);            //CKGR_MOR
   while(!(_RDWORD(0x400E0668) & 0x00000001)); //PMC_SR
   
   _WDWORD(0x400E0628, 0x200D0601);            //CKGR_PLLAR
   while(!(_RDWORD(0x400E0668) & 0x00000002)); //PMC_SR
   
   _WDWORD(0x400E0630, 0x00000011);            //PMC_MCKR
   while(!(_RDWORD(0x400E0668) & 0x00000008)); //PMC_SR
   
   _WDWORD(0x400E0630, 0x00000012);            //PMC_MCKR
   while(!(_RDWORD(0x400E0668) & 0x00000008)); //PMC_SR
}

FUNC void sdramInit()
{
   _WDWORD(0x400E0610, 0x00006000); //PMC_PCER0
   _WDWORD(0x400E0610, 0x00000200); //PMC_PCER0
   
   _WDWORD(0x400E1270, 0x00000000); //PIOC_ABSR
   _WDWORD(0x400E1204, 0x7FA3FFFC); //PIOC_PDR
   _WDWORD(0x400E1264, 0x7FA3FFFC); //PIOC_PUER
   
   _WDWORD(0x400E1470, 0x00000000); //PIOD_ABSR
   _WDWORD(0x400E1404, 0x02C1FCD0); //PIOD_PDR
   _WDWORD(0x400E1464, 0x02C1FCD0); //PIOD_PUER
   
   _WDWORD(0x400E1400, 0x00040000); //PIOD_PER
   _WDWORD(0x400E1410, 0x00040000); //PIOD_OER
   _WDWORD(0x400E1430, 0x00040000); //PIOD_SODR
   
   _WDWORD(0x400E0208, 0xA63392D9); //SDRAMC_CR
   _WDWORD(0x400E0210, 0x00000000); //SDRAMC_LPR
   _WDWORD(0x400E0224, 0x00000000); //SDRAMC_MDR
   
   _sleep_(10);
   
   _WDWORD(0x400E0200, 0x00000001); //SDRAMC_MR
   _WDWORD(0x70000000, 0x00000000);
   
   _WDWORD(0x400E0200, 0x00000002); //SDRAMC_MR
   _WDWORD(0x70000000, 0x00000000);
   
   _WDWORD(0x400E0200, 0x00000004); //SDRAMC_MR
   _WDWORD(0x70000000, 0x00000000);
   _WDWORD(0x400E0200, 0x00000004); //SDRAMC_MR
   _WDWORD(0x70000000, 0x00000000);
   _WDWORD(0x400E0200, 0x00000004); //SDRAMC_MR
   _WDWORD(0x70000000, 0x00000000);
   _WDWORD(0x400E0200, 0x00000004); //SDRAMC_MR
   _WDWORD(0x70000000, 0x00000000);
   _WDWORD(0x400E0200, 0x00000004); //SDRAMC_MR
   _WDWORD(0x70000000, 0x00000000);
   _WDWORD(0x400E0200, 0x00000004); //SDRAMC_MR
   _WDWORD(0x70000000, 0x00000000);
   _WDWORD(0x400E0200, 0x00000004); //SDRAMC_MR
   _WDWORD(0x70000000, 0x00000000);
   _WDWORD(0x400E0200, 0x00000004); //SDRAMC_MR
   _WDWORD(0x70000000, 0x00000000);
   
   _WDWORD(0x400E0200, 0x00000003); //SDRAMC_MR
   _WDWORD(0x70000000, 0x00000000);
   
   _WDWORD(0x400E0200, 0x00000005); //SDRAMC_MR
   _WDWORD(0x71000000, 0x00000000);
   
   _WDWORD(0x400E0200, 0x00000000); //SDRAMC_MR
   _WDWORD(0x70000000, 0x00000000);
   
   _WDWORD(0x400E0204, 0x00000520); //SDRAMC_TR
}

//PLL initialization
pllInit();

//SDRAM initialization
sdramInit();

//Load object file
LOAD web_server_demo_sdram\web_server_demo_sdram.axf INCREMENTAL

//Setup Vector Table Offset Register
_WDWORD(0xE000ED08, 0x20000000);

//Setup stack pointer
SP = _RDWORD(0x20000000);

//Setup program counter
PC = _RDWORD(0x20000004);

//Run to main
G ,main
