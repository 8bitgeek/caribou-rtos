	.syntax unified
	.cpu cortex-m4
	.eabi_attribute 27, 3
	.fpu fpv4-sp-d16
	.eabi_attribute 20, 1
	.eabi_attribute 21, 1
	.eabi_attribute 23, 3
	.eabi_attribute 24, 1
	.eabi_attribute 25, 1
	.eabi_attribute 26, 1
	.eabi_attribute 30, 6
	.eabi_attribute 34, 1
	.eabi_attribute 18, 4
	.thumb
	.file	"demo.c"
	.text
.Ltext0:
	.global	test
	.section	.bss.test,"aw",%nobits
	.align	2
	.type	test, %object
	.size	test, 2136
test:
	.space	2136
	.section	.text.notify_heap_alloc_failed,"ax",%progbits
	.align	2
	.global	notify_heap_alloc_failed
	.thumb
	.thumb_func
	.type	notify_heap_alloc_failed, %function
notify_heap_alloc_failed:
.LFB111:
	.file 1 "/home/mike/Documents/caribou-rtos/branches/0.9/caribou/target/board/xcore407i/crossworks/../src/demo.c"
	.loc 1 51 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7}
.LCFI0:
	sub	sp, sp, #12
.LCFI1:
	add	r7, sp, #0
.LCFI2:
	str	r0, [r7, #4]
.L2:
	.loc 1 52 0 discriminator 1
	b	.L2
.LFE111:
	.size	notify_heap_alloc_failed, .-notify_heap_alloc_failed
	.section	.text.wakeup_timer_callback,"ax",%progbits
	.align	2
	.global	wakeup_timer_callback
	.thumb
	.thumb_func
	.type	wakeup_timer_callback, %function
wakeup_timer_callback:
.LFB112:
	.loc 1 56 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI3:
	sub	sp, sp, #16
.LCFI4:
	add	r7, sp, #0
.LCFI5:
	str	r0, [r7, #12]
	str	r1, [r7, #8]
	str	r2, [r7, #4]
	.loc 1 57 0
	ldr	r0, [r7, #12]
	bl	caribou_thread_wakeup
	.loc 1 58 0
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.LFE112:
	.size	wakeup_timer_callback, .-wakeup_timer_callback
	.section	.text.enqueue_test,"ax",%progbits
	.align	2
	.thumb
	.thumb_func
	.type	enqueue_test, %function
enqueue_test:
.LFB113:
	.loc 1 63 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI6:
	sub	sp, sp, #16
.LCFI7:
	add	r7, sp, #0
.LCFI8:
	.loc 1 64 0
	movs	r3, #1
	strb	r3, [r7, #15]
.LBB2:
	.loc 1 65 0
	movs	r3, #0
	str	r3, [r7, #8]
	b	.L5
.L8:
.LBB3:
	.loc 1 67 0
	movs	r0, #32
	bl	malloc
	str	r0, [r7, #4]
	.loc 1 68 0
	ldr	r3, [r7, #4]
	cmp	r3, #0
	ite	eq
	moveq	r3, #0
	movne	r3, #1
	uxtb	r3, r3
	strb	r3, [r7, #15]
	.loc 1 69 0
	ldrb	r3, [r7, #15]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L6
	.loc 1 72 0
	ldr	r0, [r7, #4]
	movs	r1, #65
	movs	r2, #32
	bl	memset
	.loc 1 73 0
	ldr	r0, .L10
	ldr	r1, [r7, #4]
	mov	r2, #1000
	mov	r3, #0
	bl	caribou_queue_post
	mov	r3, r0
	strb	r3, [r7, #15]
.L6:
.LBE3:
	.loc 1 65 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
.L5:
	.loc 1 65 0 is_stmt 0 discriminator 1
	ldrb	r3, [r7, #15]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L7
	.loc 1 65 0 discriminator 2
	ldr	r3, [r7, #8]
	cmp	r3, #15
	ble	.L8
.L7:
.LBE2:
	.loc 1 76 0 is_stmt 1
	ldrb	r3, [r7, #15]	@ zero_extendqisi2
	.loc 1 77 0
	mov	r0, r3
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L11:
	.align	2
.L10:
	.word	test+2056
.LFE113:
	.size	enqueue_test, .-enqueue_test
	.section	.text.dequeue_test,"ax",%progbits
	.align	2
	.thumb
	.thumb_func
	.type	dequeue_test, %function
dequeue_test:
.LFB114:
	.loc 1 80 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI9:
	sub	sp, sp, #16
.LCFI10:
	add	r7, sp, #0
.LCFI11:
	.loc 1 81 0
	movs	r3, #1
	strb	r3, [r7, #15]
	.loc 1 84 0
	ldr	r0, .L18
	movs	r1, #65
	movs	r2, #32
	bl	memset
.LBB4:
	.loc 1 86 0
	movs	r3, #0
	str	r3, [r7, #8]
	b	.L13
.L16:
.LBB5:
	.loc 1 89 0
	adds	r3, r7, #4
	ldr	r0, .L18+4
	mov	r1, r3
	mov	r2, #1000
	mov	r3, #0
	bl	caribou_queue_take_first
	mov	r3, r0
	strb	r3, [r7, #15]
	.loc 1 90 0
	ldrb	r3, [r7, #15]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L14
	.loc 1 92 0
	ldr	r3, [r7, #4]
	cmp	r3, #0
	ite	eq
	moveq	r3, #0
	movne	r3, #1
	uxtb	r3, r3
	strb	r3, [r7, #15]
	.loc 1 93 0
	ldrb	r3, [r7, #15]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L14
	.loc 1 95 0
	ldr	r3, [r7, #4]
	mov	r0, r3
	ldr	r1, .L18
	movs	r2, #32
	bl	memcmp
	mov	r3, r0
	cmp	r3, #0
	ite	ne
	movne	r3, #0
	moveq	r3, #1
	uxtb	r3, r3
	strb	r3, [r7, #15]
	.loc 1 96 0
	ldr	r3, [r7, #4]
	mov	r0, r3
	bl	free
.L14:
.LBE5:
	.loc 1 86 0
	ldr	r3, [r7, #8]
	adds	r3, r3, #1
	str	r3, [r7, #8]
.L13:
	.loc 1 86 0 is_stmt 0 discriminator 1
	ldrb	r3, [r7, #15]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L15
	.loc 1 86 0 discriminator 2
	ldr	r3, [r7, #8]
	cmp	r3, #15
	ble	.L16
.L15:
.LBE4:
	.loc 1 100 0 is_stmt 1
	ldrb	r3, [r7, #15]	@ zero_extendqisi2
	.loc 1 101 0
	mov	r0, r3
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L19:
	.align	2
.L18:
	.word	message_b.6799
	.word	test+2056
.LFE114:
	.size	dequeue_test, .-dequeue_test
	.section .rodata
	.align	2
.LC0:
	.ascii	"passed\000"
	.align	2
.LC1:
	.ascii	"failed\000"
	.align	2
.LC2:
	.ascii	"%s: %d %s\012\000"
	.section	.text.status,"ax",%progbits
	.align	2
	.thumb
	.thumb_func
	.type	status, %function
status:
.LFB115:
	.loc 1 104 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI12:
	sub	sp, sp, #16
.LCFI13:
	add	r7, sp, #0
.LCFI14:
	str	r0, [r7, #12]
	str	r1, [r7, #8]
	mov	r3, r2
	strb	r3, [r7, #7]
	.loc 1 105 0
	ldrb	r3, [r7, #7]	@ zero_extendqisi2
	cmp	r3, #0
	bne	.L21
	.loc 1 106 0
	ldrb	r3, [r7, #7]	@ zero_extendqisi2
	cmp	r3, #0
	beq	.L22
	.loc 1 106 0 is_stmt 0 discriminator 1
	ldr	r3, .L25
	b	.L23
.L22:
	.loc 1 106 0 discriminator 2
	ldr	r3, .L25+4
.L23:
	.loc 1 106 0 discriminator 3
	ldr	r0, .L25+8
	ldr	r1, [r7, #12]
	ldr	r2, [r7, #8]
	bl	printf
.L21:
	.loc 1 108 0 is_stmt 1
	ldrb	r3, [r7, #7]	@ zero_extendqisi2
	.loc 1 109 0
	mov	r0, r3
	adds	r7, r7, #16
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L26:
	.align	2
.L25:
	.word	.LC0
	.word	.LC1
	.word	.LC2
.LFE115:
	.size	status, .-status
	.section .rodata
	.align	2
.LC3:
	.ascii	"test1_thread\000"
	.section	.text.test1_thread,"ax",%progbits
	.align	2
	.global	test1_thread
	.thumb
	.thumb_func
	.type	test1_thread, %function
test1_thread:
.LFB116:
	.loc 1 116 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI15:
	sub	sp, sp, #16
.LCFI16:
	add	r7, sp, #0
.LCFI17:
	str	r0, [r7, #4]
	.loc 1 117 0
	movs	r3, #1
	strb	r3, [r7, #15]
.L30:
	.loc 1 120 0
	ldr	r3, .L31
	ldrb	r3, [r3, #2132]	@ zero_extendqisi2
	cmp	r3, #0
	bne	.L28
	.loc 1 123 0
	bl	enqueue_test
	mov	r3, r0
	strb	r3, [r7, #15]
	.loc 1 124 0
	nop
.L28:
	.loc 1 126 0
	ldr	r3, .L31
	ldrb	r3, [r3, #2132]	@ zero_extendqisi2
	mov	r2, r3
	ldrb	r3, [r7, #15]	@ zero_extendqisi2
	ldr	r0, .L31+4
	mov	r1, r2
	mov	r2, r3
	bl	status
	.loc 1 127 0
	movs	r0, #100
	bl	caribou_thread_sleep_current
	.loc 1 128 0
	b	.L30
.L32:
	.align	2
.L31:
	.word	test
	.word	.LC3
.LFE116:
	.size	test1_thread, .-test1_thread
	.section .rodata
	.align	2
.LC4:
	.ascii	"test2_thread\000"
	.section	.text.test2_thread,"ax",%progbits
	.align	2
	.global	test2_thread
	.thumb
	.thumb_func
	.type	test2_thread, %function
test2_thread:
.LFB117:
	.loc 1 136 0
	@ args = 0, pretend = 0, frame = 16
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI18:
	sub	sp, sp, #16
.LCFI19:
	add	r7, sp, #0
.LCFI20:
	str	r0, [r7, #4]
	.loc 1 137 0
	movs	r3, #1
	strb	r3, [r7, #15]
.L36:
	.loc 1 140 0
	ldr	r3, .L37
	ldrb	r3, [r3, #2132]	@ zero_extendqisi2
	cmp	r3, #0
	bne	.L34
	.loc 1 143 0
	bl	dequeue_test
	mov	r3, r0
	strb	r3, [r7, #15]
	.loc 1 144 0
	nop
.L34:
	.loc 1 146 0
	ldr	r3, .L37
	ldrb	r3, [r3, #2132]	@ zero_extendqisi2
	mov	r2, r3
	ldrb	r3, [r7, #15]	@ zero_extendqisi2
	ldr	r0, .L37+4
	mov	r1, r2
	mov	r2, r3
	bl	status
	.loc 1 147 0
	bl	caribou_thread_yield
	.loc 1 148 0
	b	.L36
.L38:
	.align	2
.L37:
	.word	test
	.word	.LC4
.LFE117:
	.size	test2_thread, .-test2_thread
	.section	.text.network_init,"ax",%progbits
	.align	2
	.global	network_init
	.thumb
	.thumb_func
	.type	network_init, %function
network_init:
.LFB118:
	.loc 1 152 0
	@ args = 0, pretend = 0, frame = 0
	@ frame_needed = 1, uses_anonymous_args = 0
	@ link register save eliminated.
	push	{r7}
.LCFI21:
	add	r7, sp, #0
.LCFI22:
	.loc 1 153 0
	mov	sp, r7
	@ sp needed
	ldr	r7, [sp], #4
	bx	lr
.LFE118:
	.size	network_init, .-network_init
	.section .rodata
	.align	2
.LC5:
	.ascii	"** CARIBOU 0.9 STM32F407IGT6 DEMO **\012\000"
	.section	.text.main,"ax",%progbits
	.align	2
	.global	main
	.thumb
	.thumb_func
	.type	main, %function
main:
.LFB119:
	.loc 1 156 0
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r7, lr}
.LCFI23:
	sub	sp, sp, #8
.LCFI24:
	add	r7, sp, #0
.LCFI25:
	str	r0, [r7, #4]
	str	r1, [r7]
	.loc 1 160 0
	movs	r0, #0
	bl	caribou_init
	.loc 1 162 0
	ldr	r0, .L42
	bl	printf
	.loc 1 163 0
	bl	LwIP_Init
	.loc 1 166 0
	ldr	r0, .L42+4
	movs	r1, #0
	bl	caribou_mutex_init
	.loc 1 169 0
	ldr	r0, .L42+8
	movs	r1, #16
	ldr	r2, .L42+12
	bl	caribou_queue_init
	.loc 1 179 0
	bl	caribou_exec
	movs	r3, #0
	.loc 1 180 0
	mov	r0, r3
	adds	r7, r7, #8
	mov	sp, r7
	@ sp needed
	pop	{r7, pc}
.L43:
	.align	2
.L42:
	.word	.LC5
	.word	test+2048
	.word	test+2056
	.word	test+2068
.LFE119:
	.size	main, .-main
	.section	.bss.message_b.6799,"aw",%nobits
	.align	2
	.type	message_b.6799, %object
	.size	message_b.6799, 32
message_b.6799:
	.space	32
	.section	.debug_frame,"",%progbits
.Lframe0:
	.4byte	.LECIE0-.LSCIE0
.LSCIE0:
	.4byte	0xffffffff
	.byte	0x3
	.ascii	"\000"
	.uleb128 0x1
	.sleb128 -4
	.uleb128 0xe
	.byte	0xc
	.uleb128 0xd
	.uleb128 0
	.align	2
.LECIE0:
.LSFDE0:
	.4byte	.LEFDE0-.LASFDE0
.LASFDE0:
	.4byte	.Lframe0
	.4byte	.LFB111
	.4byte	.LFE111-.LFB111
	.byte	0x4
	.4byte	.LCFI0-.LFB111
	.byte	0xe
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI1-.LCFI0
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI2-.LCFI1
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE0:
.LSFDE2:
	.4byte	.LEFDE2-.LASFDE2
.LASFDE2:
	.4byte	.Lframe0
	.4byte	.LFB112
	.4byte	.LFE112-.LFB112
	.byte	0x4
	.4byte	.LCFI3-.LFB112
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI4-.LCFI3
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI5-.LCFI4
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE2:
.LSFDE4:
	.4byte	.LEFDE4-.LASFDE4
.LASFDE4:
	.4byte	.Lframe0
	.4byte	.LFB113
	.4byte	.LFE113-.LFB113
	.byte	0x4
	.4byte	.LCFI6-.LFB113
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI7-.LCFI6
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI8-.LCFI7
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE4:
.LSFDE6:
	.4byte	.LEFDE6-.LASFDE6
.LASFDE6:
	.4byte	.Lframe0
	.4byte	.LFB114
	.4byte	.LFE114-.LFB114
	.byte	0x4
	.4byte	.LCFI9-.LFB114
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI10-.LCFI9
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI11-.LCFI10
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE6:
.LSFDE8:
	.4byte	.LEFDE8-.LASFDE8
.LASFDE8:
	.4byte	.Lframe0
	.4byte	.LFB115
	.4byte	.LFE115-.LFB115
	.byte	0x4
	.4byte	.LCFI12-.LFB115
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI13-.LCFI12
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI14-.LCFI13
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE8:
.LSFDE10:
	.4byte	.LEFDE10-.LASFDE10
.LASFDE10:
	.4byte	.Lframe0
	.4byte	.LFB116
	.4byte	.LFE116-.LFB116
	.byte	0x4
	.4byte	.LCFI15-.LFB116
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI16-.LCFI15
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI17-.LCFI16
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE10:
.LSFDE12:
	.4byte	.LEFDE12-.LASFDE12
.LASFDE12:
	.4byte	.Lframe0
	.4byte	.LFB117
	.4byte	.LFE117-.LFB117
	.byte	0x4
	.4byte	.LCFI18-.LFB117
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI19-.LCFI18
	.byte	0xe
	.uleb128 0x18
	.byte	0x4
	.4byte	.LCFI20-.LCFI19
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE12:
.LSFDE14:
	.4byte	.LEFDE14-.LASFDE14
.LASFDE14:
	.4byte	.Lframe0
	.4byte	.LFB118
	.4byte	.LFE118-.LFB118
	.byte	0x4
	.4byte	.LCFI21-.LFB118
	.byte	0xe
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI22-.LCFI21
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE14:
.LSFDE16:
	.4byte	.LEFDE16-.LASFDE16
.LASFDE16:
	.4byte	.Lframe0
	.4byte	.LFB119
	.4byte	.LFE119-.LFB119
	.byte	0x4
	.4byte	.LCFI23-.LFB119
	.byte	0xe
	.uleb128 0x8
	.byte	0x87
	.uleb128 0x2
	.byte	0x8e
	.uleb128 0x1
	.byte	0x4
	.4byte	.LCFI24-.LCFI23
	.byte	0xe
	.uleb128 0x10
	.byte	0x4
	.4byte	.LCFI25-.LCFI24
	.byte	0xd
	.uleb128 0x7
	.align	2
.LEFDE16:
	.text
.Letext0:
	.file 2 "/usr/share/crossworks_for_arm_3.3/include/stdint.h"
	.file 3 "/usr/share/crossworks_for_arm_3.3/include/stddef.h"
	.file 4 "../../../../include/caribou/kernel/timer.h"
	.file 5 "../../../../include/caribou/lib/errno.h"
	.file 6 "../../../../include/caribou/kernel/thread.h"
	.file 7 "../../../../include/caribou/lib/mutex.h"
	.file 8 "../../../../include/caribou/lib/queue.h"
	.file 9 "../../../chip/stm32/stm32f407/lib/CMSIS/Include/core_cm4.h"
	.section	.debug_info,"",%progbits
.Ldebug_info0:
	.4byte	0x60f
	.2byte	0x4
	.4byte	.Ldebug_abbrev0
	.byte	0x4
	.uleb128 0x1
	.4byte	.LASF76
	.byte	0x1
	.4byte	.LASF77
	.4byte	.LASF78
	.4byte	.Ldebug_ranges0+0
	.4byte	0
	.4byte	.Ldebug_line0
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.4byte	.LASF0
	.uleb128 0x3
	.4byte	.LASF2
	.byte	0x2
	.byte	0xf
	.4byte	0x37
	.uleb128 0x2
	.byte	0x1
	.byte	0x8
	.4byte	.LASF1
	.uleb128 0x3
	.4byte	.LASF3
	.byte	0x2
	.byte	0x14
	.4byte	0x49
	.uleb128 0x2
	.byte	0x2
	.byte	0x5
	.4byte	.LASF4
	.uleb128 0x3
	.4byte	.LASF5
	.byte	0x2
	.byte	0x15
	.4byte	0x5b
	.uleb128 0x2
	.byte	0x2
	.byte	0x7
	.4byte	.LASF6
	.uleb128 0x3
	.4byte	.LASF7
	.byte	0x2
	.byte	0x16
	.4byte	0x6d
	.uleb128 0x4
	.byte	0x4
	.byte	0x5
	.ascii	"int\000"
	.uleb128 0x3
	.4byte	.LASF8
	.byte	0x2
	.byte	0x17
	.4byte	0x7f
	.uleb128 0x2
	.byte	0x4
	.byte	0x7
	.4byte	.LASF9
	.uleb128 0x2
	.byte	0x8
	.byte	0x5
	.4byte	.LASF10
	.uleb128 0x3
	.4byte	.LASF11
	.byte	0x2
	.byte	0x24
	.4byte	0x98
	.uleb128 0x2
	.byte	0x8
	.byte	0x7
	.4byte	.LASF12
	.uleb128 0x5
	.byte	0x4
	.uleb128 0x2
	.byte	0x4
	.byte	0x5
	.4byte	.LASF13
	.uleb128 0x6
	.byte	0x4
	.4byte	0xae
	.uleb128 0x2
	.byte	0x1
	.byte	0x8
	.4byte	.LASF14
	.uleb128 0x6
	.byte	0x4
	.4byte	0xbb
	.uleb128 0x7
	.4byte	0xae
	.uleb128 0x2
	.byte	0x4
	.byte	0x7
	.4byte	.LASF15
	.uleb128 0x3
	.4byte	.LASF16
	.byte	0x3
	.byte	0x16
	.4byte	0x7f
	.uleb128 0x8
	.4byte	0x62
	.uleb128 0x3
	.4byte	.LASF17
	.byte	0x4
	.byte	0x2f
	.4byte	0xe2
	.uleb128 0x9
	.4byte	0x9f
	.4byte	0xfb
	.uleb128 0xa
	.4byte	0x9f
	.uleb128 0xa
	.4byte	0xfb
	.uleb128 0xa
	.4byte	0x9f
	.byte	0
	.uleb128 0x6
	.byte	0x4
	.4byte	0x101
	.uleb128 0xb
	.4byte	.LASF27
	.uleb128 0xc
	.4byte	.LASF27
	.byte	0x1c
	.byte	0x4
	.byte	0x38
	.4byte	0x167
	.uleb128 0xd
	.4byte	.LASF18
	.byte	0x4
	.byte	0x3b
	.4byte	0x167
	.byte	0
	.uleb128 0xd
	.4byte	.LASF19
	.byte	0x4
	.byte	0x3d
	.4byte	0x167
	.byte	0x4
	.uleb128 0xd
	.4byte	.LASF20
	.byte	0x4
	.byte	0x3f
	.4byte	0x16d
	.byte	0x8
	.uleb128 0xd
	.4byte	.LASF21
	.byte	0x4
	.byte	0x41
	.4byte	0x9f
	.byte	0xc
	.uleb128 0xd
	.4byte	.LASF22
	.byte	0x4
	.byte	0x43
	.4byte	0x74
	.byte	0x10
	.uleb128 0xd
	.4byte	.LASF23
	.byte	0x4
	.byte	0x45
	.4byte	0x74
	.byte	0x14
	.uleb128 0xd
	.4byte	.LASF24
	.byte	0x4
	.byte	0x47
	.4byte	0x2c
	.byte	0x18
	.byte	0
	.uleb128 0x6
	.byte	0x4
	.4byte	0x106
	.uleb128 0x6
	.byte	0x4
	.4byte	0xd7
	.uleb128 0x3
	.4byte	.LASF25
	.byte	0x4
	.byte	0x48
	.4byte	0x106
	.uleb128 0xe
	.4byte	.LASF26
	.byte	0x5
	.2byte	0x108
	.4byte	0x6d
	.uleb128 0xc
	.4byte	.LASF28
	.byte	0x48
	.byte	0x6
	.byte	0x1f
	.4byte	0x262
	.uleb128 0xd
	.4byte	.LASF19
	.byte	0x6
	.byte	0x22
	.4byte	0x262
	.byte	0
	.uleb128 0xd
	.4byte	.LASF29
	.byte	0x6
	.byte	0x25
	.4byte	0x262
	.byte	0x4
	.uleb128 0xf
	.ascii	"sp\000"
	.byte	0x6
	.byte	0x28
	.4byte	0x9f
	.byte	0x8
	.uleb128 0xd
	.4byte	.LASF30
	.byte	0x6
	.byte	0x2b
	.4byte	0x9f
	.byte	0xc
	.uleb128 0xd
	.4byte	.LASF31
	.byte	0x6
	.byte	0x2e
	.4byte	0x9f
	.byte	0x10
	.uleb128 0xd
	.4byte	.LASF32
	.byte	0x6
	.byte	0x31
	.4byte	0x9f
	.byte	0x14
	.uleb128 0xd
	.4byte	.LASF33
	.byte	0x6
	.byte	0x34
	.4byte	0x9f
	.byte	0x18
	.uleb128 0xd
	.4byte	.LASF34
	.byte	0x6
	.byte	0x37
	.4byte	0x50
	.byte	0x1c
	.uleb128 0xd
	.4byte	.LASF35
	.byte	0x6
	.byte	0x3a
	.4byte	0x3e
	.byte	0x1e
	.uleb128 0xd
	.4byte	.LASF36
	.byte	0x6
	.byte	0x3d
	.4byte	0xb5
	.byte	0x20
	.uleb128 0xf
	.ascii	"arg\000"
	.byte	0x6
	.byte	0x40
	.4byte	0x9f
	.byte	0x24
	.uleb128 0xd
	.4byte	.LASF37
	.byte	0x6
	.byte	0x43
	.4byte	0x8d
	.byte	0x28
	.uleb128 0xd
	.4byte	.LASF38
	.byte	0x6
	.byte	0x46
	.4byte	0x3e
	.byte	0x30
	.uleb128 0xd
	.4byte	.LASF39
	.byte	0x6
	.byte	0x49
	.4byte	0x273
	.byte	0x34
	.uleb128 0xd
	.4byte	.LASF40
	.byte	0x6
	.byte	0x4c
	.4byte	0x279
	.byte	0x38
	.uleb128 0xd
	.4byte	.LASF41
	.byte	0x6
	.byte	0x4f
	.4byte	0x17e
	.byte	0x3c
	.uleb128 0xd
	.4byte	.LASF42
	.byte	0x6
	.byte	0x52
	.4byte	0x3e
	.byte	0x40
	.byte	0
	.uleb128 0x6
	.byte	0x4
	.4byte	0x18a
	.uleb128 0x10
	.4byte	0x273
	.uleb128 0xa
	.4byte	0x9f
	.byte	0
	.uleb128 0x6
	.byte	0x4
	.4byte	0x268
	.uleb128 0x6
	.byte	0x4
	.4byte	0x173
	.uleb128 0x3
	.4byte	.LASF43
	.byte	0x6
	.byte	0x55
	.4byte	0x18a
	.uleb128 0x6
	.byte	0x4
	.4byte	0x27f
	.uleb128 0x11
	.byte	0x8
	.byte	0x7
	.byte	0x1e
	.4byte	0x2c9
	.uleb128 0xd
	.4byte	.LASF44
	.byte	0x7
	.byte	0x20
	.4byte	0x9f
	.byte	0
	.uleb128 0xd
	.4byte	.LASF45
	.byte	0x7
	.byte	0x21
	.4byte	0x2c
	.byte	0x4
	.uleb128 0xd
	.4byte	.LASF24
	.byte	0x7
	.byte	0x22
	.4byte	0x2c
	.byte	0x5
	.uleb128 0xd
	.4byte	.LASF46
	.byte	0x7
	.byte	0x23
	.4byte	0x2c
	.byte	0x6
	.byte	0
	.uleb128 0x3
	.4byte	.LASF47
	.byte	0x7
	.byte	0x24
	.4byte	0x290
	.uleb128 0x12
	.4byte	.LASF79
	.byte	0x8
	.byte	0x1e
	.uleb128 0xc
	.4byte	.LASF48
	.byte	0xc
	.byte	0x8
	.byte	0x20
	.4byte	0x30c
	.uleb128 0xd
	.4byte	.LASF49
	.byte	0x8
	.byte	0x22
	.4byte	0x6d
	.byte	0
	.uleb128 0xd
	.4byte	.LASF50
	.byte	0x8
	.byte	0x23
	.4byte	0x6d
	.byte	0x4
	.uleb128 0xd
	.4byte	.LASF51
	.byte	0x8
	.byte	0x24
	.4byte	0x30c
	.byte	0x8
	.byte	0
	.uleb128 0x6
	.byte	0x4
	.4byte	0x312
	.uleb128 0x6
	.byte	0x4
	.4byte	0x2d4
	.uleb128 0x3
	.4byte	.LASF52
	.byte	0x8
	.byte	0x25
	.4byte	0x2db
	.uleb128 0x13
	.byte	0x1
	.byte	0x1
	.byte	0x1d
	.4byte	0x338
	.uleb128 0x14
	.4byte	.LASF53
	.sleb128 0
	.uleb128 0x14
	.4byte	.LASF54
	.sleb128 1
	.byte	0
	.uleb128 0x3
	.4byte	.LASF55
	.byte	0x1
	.byte	0x20
	.4byte	0x323
	.uleb128 0x15
	.2byte	0x858
	.byte	0x1
	.byte	0x22
	.4byte	0x39a
	.uleb128 0xd
	.4byte	.LASF56
	.byte	0x1
	.byte	0x24
	.4byte	0x39a
	.byte	0
	.uleb128 0x16
	.4byte	.LASF57
	.byte	0x1
	.byte	0x25
	.4byte	0x39a
	.2byte	0x400
	.uleb128 0x16
	.4byte	.LASF58
	.byte	0x1
	.byte	0x26
	.4byte	0x2c9
	.2byte	0x800
	.uleb128 0x16
	.4byte	.LASF59
	.byte	0x1
	.byte	0x27
	.4byte	0x318
	.2byte	0x808
	.uleb128 0x16
	.4byte	.LASF60
	.byte	0x1
	.byte	0x28
	.4byte	0x3ab
	.2byte	0x814
	.uleb128 0x17
	.ascii	"seq\000"
	.byte	0x1
	.byte	0x29
	.4byte	0x338
	.2byte	0x854
	.byte	0
	.uleb128 0x18
	.4byte	0xae
	.4byte	0x3ab
	.uleb128 0x19
	.4byte	0xc0
	.2byte	0x3ff
	.byte	0
	.uleb128 0x18
	.4byte	0x9f
	.4byte	0x3bb
	.uleb128 0x1a
	.4byte	0xc0
	.byte	0xf
	.byte	0
	.uleb128 0x3
	.4byte	.LASF61
	.byte	0x1
	.byte	0x2a
	.4byte	0x343
	.uleb128 0x1b
	.4byte	.LASF62
	.byte	0x1
	.byte	0x32
	.4byte	.LFB111
	.4byte	.LFE111-.LFB111
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x3ea
	.uleb128 0x1c
	.4byte	.LASF64
	.byte	0x1
	.byte	0x32
	.4byte	0xc7
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.byte	0
	.uleb128 0x1d
	.4byte	.LASF63
	.byte	0x1
	.byte	0x37
	.4byte	.LFB112
	.4byte	.LFE112-.LFB112
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x42a
	.uleb128 0x1c
	.4byte	.LASF44
	.byte	0x1
	.byte	0x37
	.4byte	0x28a
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x1c
	.4byte	.LASF40
	.byte	0x1
	.byte	0x37
	.4byte	0x167
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x1e
	.ascii	"arg\000"
	.byte	0x1
	.byte	0x37
	.4byte	0x9f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.uleb128 0x1f
	.4byte	.LASF67
	.byte	0x1
	.byte	0x3e
	.4byte	0xae
	.4byte	.LFB113
	.4byte	.LFE113-.LFB113
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x480
	.uleb128 0x20
	.4byte	.LASF65
	.byte	0x1
	.byte	0x40
	.4byte	0xae
	.uleb128 0x2
	.byte	0x91
	.sleb128 -9
	.uleb128 0x21
	.4byte	.LBB2
	.4byte	.LBE2-.LBB2
	.uleb128 0x22
	.ascii	"n\000"
	.byte	0x1
	.byte	0x41
	.4byte	0x6d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x21
	.4byte	.LBB3
	.4byte	.LBE3-.LBB3
	.uleb128 0x20
	.4byte	.LASF66
	.byte	0x1
	.byte	0x43
	.4byte	0xa8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x1f
	.4byte	.LASF68
	.byte	0x1
	.byte	0x4f
	.4byte	0xae
	.4byte	.LFB114
	.4byte	.LFE114-.LFB114
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x4e7
	.uleb128 0x20
	.4byte	.LASF65
	.byte	0x1
	.byte	0x51
	.4byte	0xae
	.uleb128 0x2
	.byte	0x91
	.sleb128 -9
	.uleb128 0x20
	.4byte	.LASF69
	.byte	0x1
	.byte	0x53
	.4byte	0x4e7
	.uleb128 0x5
	.byte	0x3
	.4byte	message_b.6799
	.uleb128 0x21
	.4byte	.LBB4
	.4byte	.LBE4-.LBB4
	.uleb128 0x22
	.ascii	"n\000"
	.byte	0x1
	.byte	0x56
	.4byte	0x6d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x21
	.4byte	.LBB5
	.4byte	.LBE5-.LBB5
	.uleb128 0x20
	.4byte	.LASF66
	.byte	0x1
	.byte	0x58
	.4byte	0xa8
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x18
	.4byte	0xae
	.4byte	0x4f7
	.uleb128 0x1a
	.4byte	0xc0
	.byte	0x1f
	.byte	0
	.uleb128 0x23
	.4byte	.LASF80
	.byte	0x1
	.byte	0x67
	.4byte	0xae
	.4byte	.LFB115
	.4byte	.LFE115-.LFB115
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x53a
	.uleb128 0x1e
	.ascii	"fn\000"
	.byte	0x1
	.byte	0x67
	.4byte	0xb5
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x1e
	.ascii	"seq\000"
	.byte	0x1
	.byte	0x67
	.4byte	0x6d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x1c
	.4byte	.LASF65
	.byte	0x1
	.byte	0x67
	.4byte	0xae
	.uleb128 0x2
	.byte	0x91
	.sleb128 -17
	.byte	0
	.uleb128 0x1d
	.4byte	.LASF70
	.byte	0x1
	.byte	0x73
	.4byte	.LFB116
	.4byte	.LFE116-.LFB116
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x56c
	.uleb128 0x1e
	.ascii	"arg\000"
	.byte	0x1
	.byte	0x73
	.4byte	0x9f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x20
	.4byte	.LASF65
	.byte	0x1
	.byte	0x75
	.4byte	0xae
	.uleb128 0x2
	.byte	0x91
	.sleb128 -9
	.byte	0
	.uleb128 0x1d
	.4byte	.LASF71
	.byte	0x1
	.byte	0x87
	.4byte	.LFB117
	.4byte	.LFE117-.LFB117
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x59e
	.uleb128 0x1e
	.ascii	"arg\000"
	.byte	0x1
	.byte	0x87
	.4byte	0x9f
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x20
	.4byte	.LASF65
	.byte	0x1
	.byte	0x89
	.4byte	0xae
	.uleb128 0x2
	.byte	0x91
	.sleb128 -9
	.byte	0
	.uleb128 0x24
	.4byte	.LASF81
	.byte	0x1
	.byte	0x97
	.4byte	.LFB118
	.4byte	.LFE118-.LFB118
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x25
	.4byte	.LASF82
	.byte	0x1
	.byte	0x9b
	.4byte	0x6d
	.4byte	.LFB119
	.4byte	.LFE119-.LFB119
	.uleb128 0x1
	.byte	0x9c
	.4byte	0x5ef
	.uleb128 0x1c
	.4byte	.LASF72
	.byte	0x1
	.byte	0x9b
	.4byte	0x6d
	.uleb128 0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x1c
	.4byte	.LASF73
	.byte	0x1
	.byte	0x9b
	.4byte	0x5ef
	.uleb128 0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x26
	.ascii	"rc\000"
	.byte	0x1
	.byte	0x9d
	.4byte	0x6d
	.byte	0
	.uleb128 0x6
	.byte	0x4
	.4byte	0xa8
	.uleb128 0x27
	.4byte	.LASF74
	.byte	0x9
	.2byte	0x698
	.4byte	0xd2
	.uleb128 0x28
	.4byte	.LASF75
	.byte	0x1
	.byte	0x2c
	.4byte	0x3bb
	.uleb128 0x5
	.byte	0x3
	.4byte	test
	.byte	0
	.section	.debug_abbrev,"",%progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0xe
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1b
	.uleb128 0xe
	.uleb128 0x55
	.uleb128 0x17
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x26
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0x35
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0x15
	.byte	0x1
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0x13
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0x15
	.byte	0x1
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0x4
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1c
	.uleb128 0xd
	.byte	0
	.byte	0
	.uleb128 0x15
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0x5
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x16
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x17
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x18
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x19
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x1a
	.uleb128 0x21
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x1b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1c
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x1d
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1e
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x1f
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x20
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x21
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.byte	0
	.byte	0
	.uleb128 0x22
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x23
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x24
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x25
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x6
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2116
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x26
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x27
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x28
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_aranges,"",%progbits
	.4byte	0x5c
	.2byte	0x2
	.4byte	.Ldebug_info0
	.byte	0x4
	.byte	0
	.2byte	0
	.2byte	0
	.4byte	.LFB111
	.4byte	.LFE111-.LFB111
	.4byte	.LFB112
	.4byte	.LFE112-.LFB112
	.4byte	.LFB113
	.4byte	.LFE113-.LFB113
	.4byte	.LFB114
	.4byte	.LFE114-.LFB114
	.4byte	.LFB115
	.4byte	.LFE115-.LFB115
	.4byte	.LFB116
	.4byte	.LFE116-.LFB116
	.4byte	.LFB117
	.4byte	.LFE117-.LFB117
	.4byte	.LFB118
	.4byte	.LFE118-.LFB118
	.4byte	.LFB119
	.4byte	.LFE119-.LFB119
	.4byte	0
	.4byte	0
	.section	.debug_ranges,"",%progbits
.Ldebug_ranges0:
	.4byte	.LFB111
	.4byte	.LFE111
	.4byte	.LFB112
	.4byte	.LFE112
	.4byte	.LFB113
	.4byte	.LFE113
	.4byte	.LFB114
	.4byte	.LFE114
	.4byte	.LFB115
	.4byte	.LFE115
	.4byte	.LFB116
	.4byte	.LFE116
	.4byte	.LFB117
	.4byte	.LFE117
	.4byte	.LFB118
	.4byte	.LFE118
	.4byte	.LFB119
	.4byte	.LFE119
	.4byte	0
	.4byte	0
	.section	.debug_line,"",%progbits
.Ldebug_line0:
	.section	.debug_str,"MS",%progbits,1
.LASF22:
	.ascii	"ticks\000"
.LASF54:
	.ascii	"sEND\000"
.LASF79:
	.ascii	"caribou_queue_msg_t\000"
.LASF45:
	.ascii	"locks\000"
.LASF43:
	.ascii	"caribou_thread_t\000"
.LASF34:
	.ascii	"state\000"
.LASF11:
	.ascii	"uint64_t\000"
.LASF4:
	.ascii	"short int\000"
.LASF16:
	.ascii	"size_t\000"
.LASF15:
	.ascii	"sizetype\000"
.LASF23:
	.ascii	"reloadticks\000"
.LASF12:
	.ascii	"long long unsigned int\000"
.LASF78:
	.ascii	"/home/mike/Documents/caribou-rtos/branches/0.9/cari"
	.ascii	"bou/target/board/xcore407i/crossworks\000"
.LASF82:
	.ascii	"main\000"
.LASF56:
	.ascii	"stack_thread1\000"
.LASF81:
	.ascii	"network_init\000"
.LASF2:
	.ascii	"uint8_t\000"
.LASF40:
	.ascii	"timer\000"
.LASF29:
	.ascii	"parent\000"
.LASF46:
	.ascii	"blocking\000"
.LASF8:
	.ascii	"uint32_t\000"
.LASF55:
	.ascii	"test_seq_t\000"
.LASF66:
	.ascii	"message_a\000"
.LASF60:
	.ascii	"queue_msgs\000"
.LASF10:
	.ascii	"long long int\000"
.LASF67:
	.ascii	"enqueue_test\000"
.LASF13:
	.ascii	"long int\000"
.LASF65:
	.ascii	"passed\000"
.LASF36:
	.ascii	"name\000"
.LASF77:
	.ascii	"/home/mike/Documents/caribou-rtos/branches/0.9/cari"
	.ascii	"bou/target/board/xcore407i/crossworks/../src/demo.c"
	.ascii	"\000"
.LASF39:
	.ascii	"finishfn\000"
.LASF47:
	.ascii	"caribou_mutex_t\000"
.LASF1:
	.ascii	"unsigned char\000"
.LASF26:
	.ascii	"errno_t\000"
.LASF33:
	.ascii	"stack_base\000"
.LASF72:
	.ascii	"argc\000"
.LASF18:
	.ascii	"prev\000"
.LASF0:
	.ascii	"signed char\000"
.LASF24:
	.ascii	"flags\000"
.LASF30:
	.ascii	"stack_usage\000"
.LASF37:
	.ascii	"runtime\000"
.LASF9:
	.ascii	"unsigned int\000"
.LASF5:
	.ascii	"uint16_t\000"
.LASF51:
	.ascii	"msgs\000"
.LASF58:
	.ascii	"mutex_a\000"
.LASF63:
	.ascii	"wakeup_timer_callback\000"
.LASF73:
	.ascii	"argv\000"
.LASF42:
	.ascii	"sleep\000"
.LASF20:
	.ascii	"timerfn\000"
.LASF44:
	.ascii	"thread\000"
.LASF25:
	.ascii	"caribou_timer_t\000"
.LASF48:
	.ascii	"_caribou_queue_t\000"
.LASF80:
	.ascii	"status\000"
.LASF69:
	.ascii	"message_b\000"
.LASF14:
	.ascii	"char\000"
.LASF61:
	.ascii	"test_t\000"
.LASF7:
	.ascii	"int32_t\000"
.LASF70:
	.ascii	"test1_thread\000"
.LASF38:
	.ascii	"lock\000"
.LASF6:
	.ascii	"short unsigned int\000"
.LASF3:
	.ascii	"int16_t\000"
.LASF53:
	.ascii	"sQueueTest\000"
.LASF49:
	.ascii	"depth\000"
.LASF75:
	.ascii	"test\000"
.LASF57:
	.ascii	"stack_thread2\000"
.LASF28:
	.ascii	"_caribou_thread_t\000"
.LASF52:
	.ascii	"caribou_queue_t\000"
.LASF31:
	.ascii	"stack_low\000"
.LASF76:
	.ascii	"GNU C 4.8.4 20140725 (release) [ARM/embedded-4_8-br"
	.ascii	"anch revision 213147] -fmessage-length=0 -mtp=soft "
	.ascii	"-mcpu=cortex-m4 -mlittle-endian -mfloat-abi=softfp "
	.ascii	"-mfpu=fpv4-sp-d16 -mthumb -g2 -std=gnu99 -fno-dwarf"
	.ascii	"2-cfi-asm -fno-builtin -ffunction-sections -fdata-s"
	.ascii	"ections -fshort-double -fshort-enums -fno-common\000"
.LASF62:
	.ascii	"notify_heap_alloc_failed\000"
.LASF64:
	.ascii	"size\000"
.LASF50:
	.ascii	"count\000"
.LASF59:
	.ascii	"queue_a\000"
.LASF17:
	.ascii	"caribou_timer_callback_fn\000"
.LASF32:
	.ascii	"stack_top\000"
.LASF68:
	.ascii	"dequeue_test\000"
.LASF71:
	.ascii	"test2_thread\000"
.LASF74:
	.ascii	"ITM_RxBuffer\000"
.LASF21:
	.ascii	"fnarg\000"
.LASF35:
	.ascii	"prio\000"
.LASF19:
	.ascii	"next\000"
.LASF41:
	.ascii	"__errno\000"
.LASF27:
	.ascii	"_caribou_timer_t\000"
	.ident	"GCC: (GNU) 4.8.4 20140725 (release) [ARM/embedded-4_8-branch revision 213147]"
