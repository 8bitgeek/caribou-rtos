.TH "src/lib/qsort.c" 3 "Sat Jul 19 2014" "Version 0.9" "CARIBOU RTOS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/lib/qsort.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <caribou/lib/qsort\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "static void \fBswap\fP (void *m1, void *m2, size_t size)"
.br
.ti -1c
.RI "void \fBqsort\fP (void *base, size_t nmemb, size_t size, int(*compar)(const void *, const void *))"
.br
.RI "\fIqsort is not quicksort\&. \fP"
.ti -1c
.RI "void \fBqsort_r\fP (void *base, size_t nmemb, size_t size, int(*compar)(const void *, const void *, void *), void *arg)"
.br
.RI "\fIqsort is not quicksort, thread-safe-argument-passing version\&. \fP"
.in -1c
.SH "Function Documentation"
.PP 
.SS "void qsort (void *base, size_tnmemb, size_tsize, int(*)(const void *, const void *)compar)"

.PP
qsort is not quicksort\&. 
.PP
\fBParameters:\fP
.RS 4
\fIbase\fP The base address of the list of objects to be sorted\&. 
.br
\fInmemb\fP The number of members to be sorted\&. 
.br
\fIsize\fP The size of each member to be sorted\&. 
.br
\fIcompar\fP The function to compare two members\&. 
.RE
.PP

.PP
Definition at line 43 of file qsort\&.c\&.
.SS "void qsort_r (void *base, size_tnmemb, size_tsize, int(*)(const void *, const void *, void *)compar, void *arg)"

.PP
qsort is not quicksort, thread-safe-argument-passing version\&. 
.PP
\fBParameters:\fP
.RS 4
\fIbase\fP The base address of the list of objects to be sorted\&. 
.br
\fInmemb\fP The number of members to be sorted\&. 
.br
\fIsize\fP The size of each member to be sorted\&. 
.br
\fIcompar\fP The function to compare two members\&. 
.RE
.PP

.PP
Definition at line 71 of file qsort\&.c\&.
.SS "static void swap (void *m1, void *m2, size_tsize)\fC [static]\fP"
swap two object of orbritrary size 
.PP
Definition at line 23 of file qsort\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for CARIBOU RTOS from the source code\&.
